[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"plugins {","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"repositories {","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"    mavenCentral()","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"dependencies {","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"test {","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"    testLogging {","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"        showExceptions true","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"        showCauses true","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"        showStackTraces true","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"jar {","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"    manifest {","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"        attributes \u0027Main-Class\u0027: \u0027Duke\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"application {","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"run{","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"T | 0 |  | say hello to Bob","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"D | 0 |  | submit report | 2022-11-13T00:00","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"E | 0 |  | project meeting | 2022-11-12T13:00","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"xumou49":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"`test pr\u0027","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"-":29,"xumou49":2}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"@rem","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"@rem","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"@rem","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"@rem","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"@rem","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"@rem","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"@rem","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"@rem Find java.exe","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"xumou49"},"content":"echo.","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"xumou49"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"xumou49"},"content":"echo.","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"xumou49"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"xumou49"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"xumou49"},"content":"goto fail","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"xumou49"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"xumou49"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"xumou49"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"xumou49"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"xumou49"},"content":"echo.","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"xumou49"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"xumou49"},"content":"echo.","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"xumou49"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"xumou49"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"xumou49"},"content":"goto fail","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"xumou49"},"content":":init","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"xumou49"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"xumou49"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"xumou49"},"content":":win9xME_args","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"xumou49"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"xumou49"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"xumou49"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":77,"author":{"gitId":"xumou49"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"xumou49"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-11-02"},{"lineNumber":79,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"xumou49"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-11-02"},{"lineNumber":81,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":82,"author":{"gitId":"xumou49"},"content":":execute","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"xumou49"},"content":"@rem Setup the command line","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"xumou49"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-11-02"},{"lineNumber":86,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"xumou49"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"xumou49"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"xumou49"},"content":":end","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"xumou49"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"xumou49"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-11-02"},{"lineNumber":93,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":94,"author":{"gitId":"xumou49"},"content":":fail","lastModifiedDate":"2022-11-02"},{"lineNumber":95,"author":{"gitId":"xumou49"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"xumou49"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-11-02"},{"lineNumber":97,"author":{"gitId":"xumou49"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"xumou49"},"content":"exit /b 1","lastModifiedDate":"2022-11-02"},{"lineNumber":99,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"xumou49"},"content":":mainEnd","lastModifiedDate":"2022-11-02"},{"lineNumber":101,"author":{"gitId":"xumou49"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":103,"author":{"gitId":"xumou49"},"content":":omega","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":103}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import constant.CommandExecutor;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import entity.Storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import entity.Ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    public static String inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    public static CommandExecutor command;","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"     * Duke program initiation","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"    public static void init() {","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        Ui.dukeInit();","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"        Storage instance \u003d Storage.getInstance();","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        instance.read();","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"     * main program","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"     * @param args na","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"     * @throws DukeException duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"        // DUKE greeting message","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"        init();","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"        while (true) {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"            inputs \u003d CommandParser.getInputs();","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"            command \u003d CommandParser.getCommandExecutor(inputs);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"            try {","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"                command.execute(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"                Ui.showErrMessage(err);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xumou49":38,"-":3}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.Ui;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"        Ui.echoText(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"        System.exit(0);","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":10}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.Storage;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"public abstract class Command {","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"    public static final Storage instance \u003d Storage.getInstance();","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"    public abstract void execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":8}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import entity.Deadline;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    private final String inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"    public DeadlineCommand(String inputs) {","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        if (CommandParser.countCommandParts(inputs) \u003c 2)","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"        String inputBody \u003d CommandParser.getCommandBody(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"        String[] deadlineDesc \u003d CommandParser.getDeadlineDetails(inputBody);","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"        try {","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"            Deadline deadline \u003d new Deadline(deadlineDesc[0],","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"                    LocalDateTime.parse(deadlineDesc[1].trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"            instance.addTask(deadline);","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"        } catch (DukeException | DateTimeParseException err) {","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid date time format, please use yyyy-MM-dd hh:mm.\");","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":31}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"    private final String inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    public DeleteCommand(String inputs) {","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"        if (CommandParser.countCommandParts(inputs) \u003c 2)","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! Delete is not specified\");","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"        String inputBody \u003d CommandParser.getCommandBody(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        int taskNo \u003d Integer.parseInt(inputBody) - 1;","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        if (taskNo \u003e\u003d instance.tasks.size())","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! The task for deleting is not in list.\");","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"        instance.deleteTask(taskNo);","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":26}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import entity.Event;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"    private final String inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"    public EventCommand(String inputs) {","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        if (CommandParser.countCommandParts(inputs) \u003c 2)","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"        String inputBody \u003d CommandParser.getCommandBody(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"        String[] eventDesc \u003d CommandParser.getEventDetails(inputBody);","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"        try {","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"            Event event \u003d new Event(eventDesc[0], LocalDateTime.parse(eventDesc[1].trim(),","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"            instance.addTask(event);","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"        } catch (DukeException | DateTimeParseException err) {","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid date time format, please use yyyy-MM-dd hh:mm.\");","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":33}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-08"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-11-08"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-08"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"    private final String inputs;","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    public FindCommand(String inputs) {","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2022-11-08"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-08"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"        if (CommandParser.countCommandParts(inputs) \u003c 2)","lastModifiedDate":"2022-11-08"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! Mark is not specified.\");","lastModifiedDate":"2022-11-08"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        String inputBody \u003d CommandParser.getCommandBody(inputs);","lastModifiedDate":"2022-11-08"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"        instance.findTasks(inputBody);","lastModifiedDate":"2022-11-08"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"xumou49":21}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"        instance.printTasks();","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":8}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"    private final String inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    public MarkCommand(String inputs) {","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        if (CommandParser.countCommandParts(inputs) \u003c 2)","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! Mark is not specified.\");","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        String inputBody \u003d CommandParser.getCommandBody(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        int taskNo \u003d Integer.parseInt(inputBody) - 1;","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"        if (taskNo \u003e\u003d instance.tasks.size())","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! The task for marking is not in list.\");","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"        instance.markTask(taskNo);","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":26}},{"path":"src/main/java/commands/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.Ui;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"public class SaveCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"        instance.write(instance.writeTasksToFile());","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"        Ui.echoText(\"The tasks have been saved\");","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":11}},{"path":"src/main/java/commands/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-08"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-11-08"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-08"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"public class TagCommand extends Command{","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    private final String inputs;","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    public TagCommand(String inputs) {","lastModifiedDate":"2022-11-08"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2022-11-08"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-08"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"        if (CommandParser.countCommandParts(inputs) \u003c 2)","lastModifiedDate":"2022-11-08"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a tag cannot be empty.\");","lastModifiedDate":"2022-11-08"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        String inputBody \u003d CommandParser.getCommandBody(inputs);","lastModifiedDate":"2022-11-08"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        String[] tagDesc \u003d CommandParser.getTags(inputBody);","lastModifiedDate":"2022-11-08"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        int taskNo \u003d Integer.parseInt(tagDesc[0]) - 1;","lastModifiedDate":"2022-11-08"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"        if (taskNo \u003e\u003d instance.tasks.size())","lastModifiedDate":"2022-11-08"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! The task for tagging is not in list.\");","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"        instance.tagTask(taskNo, Arrays.copyOfRange(tagDesc, 1, tagDesc.length));","lastModifiedDate":"2022-11-08"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"xumou49":27}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import entity.Todo;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    private final String inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"    public TodoCommand(String inputs) {","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        if (CommandParser.countCommandParts(inputs) \u003c 2)","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        String inputBody \u003d CommandParser.getCommandBody(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        Todo todo \u003d new Todo(inputBody);","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"        instance.addTask(todo);","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":23}},{"path":"src/main/java/commands/UndefinedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"public class UndefinedCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":10}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.CommandParser;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"    private final String inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    public UnmarkCommand(String inputs) {","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"    public void execute() {","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"        if (CommandParser.countCommandParts(inputs) \u003c 2)","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! Unmark is not specified\");","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        String inputBody \u003d CommandParser.getCommandBody(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        int taskNo \u003d Integer.parseInt(inputBody) - 1;","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"        if (taskNo \u003e\u003d instance.tasks.size())","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! The task for unmarking is not in list.\");","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"        instance.unmarkTask(taskNo);","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":25}},{"path":"src/main/java/constant/CommandExecutor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package constant;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import commands.*;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import entity.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"import java.util.Date;","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"public enum CommandExecutor {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    BYE {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"         * Bye command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new ByeCommand();","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"    LIST {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"         * List command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new ListCommand();","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"    MARK {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"         * Mark command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new MarkCommand(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xumou49"},"content":"    UNMARK {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"xumou49"},"content":"         * Unmark command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new UnmarkCommand(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xumou49"},"content":"    DEADLINE {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"xumou49"},"content":"         * Deadline command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new DeadlineCommand(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xumou49"},"content":"    TODO {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"xumou49"},"content":"         * To-do command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new TodoCommand(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":79,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"xumou49"},"content":"    EVENT {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"xumou49"},"content":"         * Event command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":86,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new EventCommand(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"xumou49"},"content":"    DELETE {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"xumou49"},"content":"         * Delete command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":97,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":99,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new DeleteCommand(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":103,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":104,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"xumou49"},"content":"    SAVE {","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":108,"author":{"gitId":"xumou49"},"content":"         * Save command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":109,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":110,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":111,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":112,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":114,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new SaveCommand();","lastModifiedDate":"2022-11-02"},{"lineNumber":115,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":116,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"xumou49"},"content":"    UNDEFINED {","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-02"},{"lineNumber":120,"author":{"gitId":"xumou49"},"content":"         * Undefined command executor operation","lastModifiedDate":"2022-11-02"},{"lineNumber":121,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":123,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-02"},{"lineNumber":124,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":126,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new UndefinedCommand();","lastModifiedDate":"2022-11-02"},{"lineNumber":127,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":128,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-11-08"},{"lineNumber":130,"author":{"gitId":"xumou49"},"content":"    TAG {","lastModifiedDate":"2022-11-08"},{"lineNumber":131,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-08"},{"lineNumber":132,"author":{"gitId":"xumou49"},"content":"         * Tag command to tag a task by hashtag","lastModifiedDate":"2022-11-08"},{"lineNumber":133,"author":{"gitId":"xumou49"},"content":"         *","lastModifiedDate":"2022-11-08"},{"lineNumber":134,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-08"},{"lineNumber":135,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-08"},{"lineNumber":136,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-08"},{"lineNumber":137,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-11-08"},{"lineNumber":138,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-08"},{"lineNumber":139,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new TagCommand(inputs);","lastModifiedDate":"2022-11-08"},{"lineNumber":140,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-08"},{"lineNumber":141,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":142,"author":{"gitId":"xumou49"},"content":"    },","lastModifiedDate":"2022-11-08"},{"lineNumber":143,"author":{"gitId":"xumou49"},"content":"    FIND {","lastModifiedDate":"2022-11-08"},{"lineNumber":144,"author":{"gitId":"xumou49"},"content":"        /**","lastModifiedDate":"2022-11-08"},{"lineNumber":145,"author":{"gitId":"xumou49"},"content":"         * Find command to find a task by string","lastModifiedDate":"2022-11-08"},{"lineNumber":146,"author":{"gitId":"xumou49"},"content":"         *","lastModifiedDate":"2022-11-08"},{"lineNumber":147,"author":{"gitId":"xumou49"},"content":"         * @param inputs user input","lastModifiedDate":"2022-11-08"},{"lineNumber":148,"author":{"gitId":"xumou49"},"content":"         * @throws DukeException Duke exception","lastModifiedDate":"2022-11-08"},{"lineNumber":149,"author":{"gitId":"xumou49"},"content":"         */","lastModifiedDate":"2022-11-08"},{"lineNumber":150,"author":{"gitId":"xumou49"},"content":"        @Override","lastModifiedDate":"2022-11-08"},{"lineNumber":151,"author":{"gitId":"xumou49"},"content":"        public void execute(String inputs) throws DukeException {","lastModifiedDate":"2022-11-08"},{"lineNumber":152,"author":{"gitId":"xumou49"},"content":"            Command c \u003d new FindCommand(inputs);","lastModifiedDate":"2022-11-08"},{"lineNumber":153,"author":{"gitId":"xumou49"},"content":"            c.execute();","lastModifiedDate":"2022-11-08"},{"lineNumber":154,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":155,"author":{"gitId":"xumou49"},"content":"    };","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":158,"author":{"gitId":"xumou49"},"content":"    public abstract void execute(String inputs) throws DukeException;","lastModifiedDate":"2022-11-02"},{"lineNumber":159,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xumou49":159}},{"path":"src/main/java/entity/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package entity;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import constant.CommandExecutor;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"public class CommandParser {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    private static final Map\u003cString, CommandExecutor\u003e COMMAND_EXECUTOR_MAP \u003d createMap();","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"     * Parse user\u0027s input to specific command executor","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"     * @param inputs user inputs","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"     * @return a command executor","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"    public static CommandExecutor getCommandExecutor(String inputs) {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        String commandHead \u003d getCommandHead(inputs);","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        return COMMAND_EXECUTOR_MAP.getOrDefault(commandHead, CommandExecutor.UNDEFINED);","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"     * Get user input","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"     * @return user input","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"    public static String getInputs() {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"        return s.nextLine();","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"     * Get first word in user input as command executor","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"     * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"     * @return first word","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"    public static String getCommandHead(String inputs) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"        return inputs.split(\" \", 2)[0].trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"     * Get the rest of the input description","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"xumou49"},"content":"     * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"xumou49"},"content":"     * @return input description","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"xumou49"},"content":"    public static String getCommandBody(String inputs) {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"xumou49"},"content":"        return inputs.split(\" \", 2)[1].trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"xumou49"},"content":"     * Get deadline\u0027s description and time","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"xumou49"},"content":"     * @param inputBody input details","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"xumou49"},"content":"     * @return description and time","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"xumou49"},"content":"    public static String[] getDeadlineDetails(String inputBody) {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"xumou49"},"content":"        return Arrays.stream(inputBody.split(\"/by\", 2)).map(String::trim).toArray(o -\u003e new String[2]);","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"xumou49"},"content":"     * Get event\u0027s description and time","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"xumou49"},"content":"     * @param inputBody input details","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"xumou49"},"content":"     * @return description and time","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"xumou49"},"content":"    public static String[] getEventDetails(String inputBody) {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"xumou49"},"content":"        return Arrays.stream(inputBody.split(\"/at\", 2)).map(String::trim).toArray(o -\u003e new String[2]);","lastModifiedDate":"2022-11-08"},{"lineNumber":71,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":72,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":73,"author":{"gitId":"xumou49"},"content":"    public static String[] getTags(String inputBody) {","lastModifiedDate":"2022-11-08"},{"lineNumber":74,"author":{"gitId":"xumou49"},"content":"        String[] details \u003d inputBody.split(\"(?\u003d#)\");","lastModifiedDate":"2022-11-08"},{"lineNumber":75,"author":{"gitId":"xumou49"},"content":"        return Arrays.stream(details)","lastModifiedDate":"2022-11-08"},{"lineNumber":76,"author":{"gitId":"xumou49"},"content":"                .map(String::trim).toArray(o -\u003e new String[details.length]);","lastModifiedDate":"2022-11-08"},{"lineNumber":77,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"xumou49"},"content":"     * Used for checking for invalid input","lastModifiedDate":"2022-11-02"},{"lineNumber":81,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":82,"author":{"gitId":"xumou49"},"content":"     * @param inputs user input","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"xumou49"},"content":"     * @return the number of parts of command key in by user","lastModifiedDate":"2022-11-08"},{"lineNumber":84,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"xumou49"},"content":"    public static int countCommandParts(String inputs) {","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"xumou49"},"content":"        return inputs.split(\" \", 2).length;","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"xumou49"},"content":"     * Build relationship between command in word with command executor","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"xumou49"},"content":"     * @return command executor","lastModifiedDate":"2022-11-02"},{"lineNumber":93,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":94,"author":{"gitId":"xumou49"},"content":"    public static Map\u003cString, CommandExecutor\u003e createMap() {","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"xumou49"},"content":"        return Map.ofEntries(","lastModifiedDate":"2022-11-08"},{"lineNumber":96,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"bye\", CommandExecutor.BYE),","lastModifiedDate":"2022-11-08"},{"lineNumber":97,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"list\", CommandExecutor.LIST),","lastModifiedDate":"2022-11-08"},{"lineNumber":98,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"mark\", CommandExecutor.MARK),","lastModifiedDate":"2022-11-08"},{"lineNumber":99,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"unmark\", CommandExecutor.UNMARK),","lastModifiedDate":"2022-11-08"},{"lineNumber":100,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"deadline\", CommandExecutor.DEADLINE),","lastModifiedDate":"2022-11-08"},{"lineNumber":101,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"todo\", CommandExecutor.TODO),","lastModifiedDate":"2022-11-08"},{"lineNumber":102,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"event\", CommandExecutor.EVENT),","lastModifiedDate":"2022-11-08"},{"lineNumber":103,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"delete\", CommandExecutor.DELETE),","lastModifiedDate":"2022-11-08"},{"lineNumber":104,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"save\", CommandExecutor.SAVE),","lastModifiedDate":"2022-11-08"},{"lineNumber":105,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"tag\", CommandExecutor.TAG),","lastModifiedDate":"2022-11-08"},{"lineNumber":106,"author":{"gitId":"xumou49"},"content":"                Map.entry(\"find\", CommandExecutor.FIND)","lastModifiedDate":"2022-11-08"},{"lineNumber":107,"author":{"gitId":"xumou49"},"content":"        );","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"xumou49":109}},{"path":"src/main/java/entity/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package entity;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"     * Deadline object constructor","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-08"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"     * @param description inputs description by user","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"     * @param by          inputs datetime by user","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"        super(description);","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"        return by;","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"     * Parse To-do object to string","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"     * @return a string to be saved to text file","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"    public String toFile() {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"        return \"D\" + \" | \" + getStatus() + \" | \" + getTags() + \" | \" + description + \" | \" + by + \"\\n\";","lastModifiedDate":"2022-11-08"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"     * Parse To-do object to string","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"     * @return a string of To-do task","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"    public String toString() {","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"xumou49":45}},{"path":"src/main/java/entity/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package entity;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"     * Event task constructor","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"     * @param description inputs description by user","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"     * @param at          inputs datetime by user","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        super(description);","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2022-11-08"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"        return at;","lastModifiedDate":"2022-11-08"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"     * Parse To-do object to string","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"     * @return a string to be saved to text file","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"    public String toFile() {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"        return \"E\" + \" | \" + getStatus() + \" | \"  + getTags() + \" | \" + description + \" | \" + at + \"\\n\";","lastModifiedDate":"2022-11-08"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"     * Parse To-do object to string","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"     * @return a string of To-do task","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"    public String toString() {","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"                at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"xumou49":44}},{"path":"src/main/java/entity/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package entity;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import java.io.File;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"import java.util.*;","lastModifiedDate":"2022-11-08"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"public class Storage extends TaskList {","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"    private final String filePath;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"    private static final Storage instance \u003d new Storage();","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"    public static Storage getInstance() {","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"        return instance;","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"     * Storage object constructor","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"    private Storage() {","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"        this.filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"        create();","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"     * Create text file for storage if file not exists","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"    public void create() {","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"            Path p \u003d Paths.get(this.filePath);","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"            Files.createDirectories(p.getParent());","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"            if (!file.exists()) file.createNewFile();","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"            System.out.println(\"hahahahah: \"+ this.filePath);","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! File create error.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"xumou49"},"content":"     * Write Tasks to file","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"xumou49"},"content":"     * @param contexts Tasks","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"xumou49"},"content":"     * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"xumou49"},"content":"    public void write(String contexts) throws DukeException {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"xumou49"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"xumou49"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"xumou49"},"content":"            writer.write(contexts);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"xumou49"},"content":"            writer.close();","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"xumou49"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! File write error.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"xumou49"},"content":"     * Read tasks in file","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"xumou49"},"content":"     * @throws DukeException Duke exception","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"xumou49"},"content":"    public void read() throws DukeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"xumou49"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"xumou49"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"xumou49"},"content":"            Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"xumou49"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"xumou49"},"content":"                String line \u003d reader.nextLine();","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"xumou49"},"content":"                instance.loadTask(generateTask(line));","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"xumou49"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"xumou49"},"content":"            reader.close();","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"xumou49"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"xumou49"},"content":"            throw new DukeException(\"☹ OOPS!!! File read error.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"xumou49"},"content":"     * Parse task in file to TasksList object","lastModifiedDate":"2022-11-02"},{"lineNumber":86,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"xumou49"},"content":"     * @param line each line of task","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"xumou49"},"content":"     * @return a Task object","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"xumou49"},"content":"    public Task generateTask(String line) {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"xumou49"},"content":"        String[] rawDetails \u003d line.split(\" \\\\|\", -1);","lastModifiedDate":"2022-11-08"},{"lineNumber":92,"author":{"gitId":"xumou49"},"content":"        String[] details \u003d Arrays.stream(rawDetails).map(String::trim).toArray(o -\u003e new String[rawDetails.length]);","lastModifiedDate":"2022-11-08"},{"lineNumber":93,"author":{"gitId":"xumou49"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"xumou49"},"content":"        switch (details[0]) {","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"xumou49"},"content":"            case \"T\":","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"xumou49"},"content":"                task \u003d new Todo(details[3]);","lastModifiedDate":"2022-11-08"},{"lineNumber":97,"author":{"gitId":"xumou49"},"content":"                if (Objects.equals(details[1], \"1\")) task.markTask();","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"xumou49"},"content":"                if (!Objects.equals(details[2], \"\")) task.addTags(List.of(CommandParser.getTags(details[2])));","lastModifiedDate":"2022-11-08"},{"lineNumber":99,"author":{"gitId":"xumou49"},"content":"                break;","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"xumou49"},"content":"            case \"D\":","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"xumou49"},"content":"                task \u003d new Deadline(details[3],","lastModifiedDate":"2022-11-08"},{"lineNumber":102,"author":{"gitId":"xumou49"},"content":"                        LocalDateTime.parse(details[4].replace(\"T\", \" \"), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2022-11-08"},{"lineNumber":103,"author":{"gitId":"xumou49"},"content":"                if (Objects.equals(details[1], \"1\")) task.markTask();","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"xumou49"},"content":"                if (!Objects.equals(details[2], \"\")) task.addTags(List.of(CommandParser.getTags(details[2])));","lastModifiedDate":"2022-11-08"},{"lineNumber":105,"author":{"gitId":"xumou49"},"content":"                break;","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"xumou49"},"content":"            case \"E\":","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"xumou49"},"content":"                task \u003d new Event(details[3],","lastModifiedDate":"2022-11-08"},{"lineNumber":108,"author":{"gitId":"xumou49"},"content":"                        LocalDateTime.parse(details[4].replace(\"T\", \" \"), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2022-11-08"},{"lineNumber":109,"author":{"gitId":"xumou49"},"content":"                if (Objects.equals(details[1], \"1\")) task.markTask();","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"xumou49"},"content":"                if (!Objects.equals(details[2], \"\")) task.addTags(List.of(CommandParser.getTags(details[2])));","lastModifiedDate":"2022-11-08"},{"lineNumber":111,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":112,"author":{"gitId":"xumou49"},"content":"                break;","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"xumou49"},"content":"        return task;","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"xumou49":117}},{"path":"src/main/java/entity/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package entity;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import java.util.List;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"public class Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"    protected String description;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    protected List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"     * Task object constructor","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"     * @param description task description","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"    public Task(String description) {","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"    public String getTags() {","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"        return String.join(\" \", tags);","lastModifiedDate":"2022-11-08"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"    public void addTags(List\u003cString\u003e tags) {","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"    public String getDescription() {","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"        return description;","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"        return isDone;","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"     * To write tasks to file","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"     * @return text to save to file","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"    public String toFile() {","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"xumou49"},"content":"        return getStatus() + \" | \" + getTags() + \" | \" + description + \"\\n\";","lastModifiedDate":"2022-11-08"},{"lineNumber":46,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"xumou49"},"content":"     * Show task status","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"xumou49"},"content":"     * @return 1 as done, 0 as not done","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"xumou49"},"content":"    public String getStatus() {","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"xumou49"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"xumou49"},"content":"     * Show task status icon","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"xumou49"},"content":"     * @return X as done, \" \" as not done","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"xumou49"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"xumou49"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"xumou49"},"content":"     * Mark task as done","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"xumou49"},"content":"    public void markTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"xumou49"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"xumou49"},"content":"     * Unmark task as not done","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"xumou49"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"xumou49"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":79,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":81,"author":{"gitId":"xumou49"},"content":"    public String toString() {","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"xumou49"},"content":"        return \"[\" + getStatusIcon() + \"] Tags: [\" + getTags() + \"] \" + description;","lastModifiedDate":"2022-11-08"},{"lineNumber":83,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":84,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"xumou49":84}},{"path":"src/main/java/entity/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package entity;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-08"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"public class TaskList {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"    public List\u003cTask\u003e tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"     * TaskList object constructor","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"    public TaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"     * To load tasks in file to Tasks","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"     * @param task a Task object","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"    public void loadTask(Task task) {","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"        tasks.add(task);","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"    public void tagTask(int taskNo, String[] tags) {","lastModifiedDate":"2022-11-08"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"        Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2022-11-08"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"        task.addTags(Arrays.asList(tags));","lastModifiedDate":"2022-11-08"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"        Ui.echoText(\"Task is tagged:\\n      \" + task);","lastModifiedDate":"2022-11-08"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"     * To add task to Tasks by user\u0027s command","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"     * @param task a Task object","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"        tasks.add(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"        Ui.echoText(\"Got it. I\u0027ve added this task: \\n      \" + task +","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"                \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"     * To mark task in Tasks by task number by user\u0027s command","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"xumou49"},"content":"     * @param taskNo a task number","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"xumou49"},"content":"    public void markTask(int taskNo) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xumou49"},"content":"        Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xumou49"},"content":"        task.markTask();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xumou49"},"content":"        Ui.echoText(\"Nice! I\u0027ve marked this task as done:\\n      \" + task);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"xumou49"},"content":"     * To unmark task in Tasks by task number by user\u0027s command","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"xumou49"},"content":"     * @param taskNo a task number","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"xumou49"},"content":"    public void unmarkTask(int taskNo) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xumou49"},"content":"        Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xumou49"},"content":"        task.unmarkTask();","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xumou49"},"content":"        Ui.echoText(\"OK, I\u0027ve marked this task as not done yet:\\n      \" + task);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"xumou49"},"content":"     * To delete task in Tasks by task number by user\u0027s command","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"xumou49"},"content":"     * @param taskNo a task number","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"xumou49"},"content":"    public void deleteTask(int taskNo) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xumou49"},"content":"        Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"xumou49"},"content":"        tasks.remove(taskNo);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"xumou49"},"content":"        Ui.echoText(\"Noted. I\u0027ve removed this task:\\n      \" + task +","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"xumou49"},"content":"                \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"xumou49"},"content":"     * To print all Tasks by user\u0027s command","lastModifiedDate":"2022-11-02"},{"lineNumber":79,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"xumou49"},"content":"    public void printTasks() {","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"xumou49"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"xumou49"},"content":"        for (Task task : tasks)","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"xumou49"},"content":"            System.out.println(Ui.tab + ++counter + \". \" + task);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"xumou49"},"content":"    public void findTasks(String text) {","lastModifiedDate":"2022-11-08"},{"lineNumber":89,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-11-08"},{"lineNumber":90,"author":{"gitId":"xumou49"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-11-08"},{"lineNumber":91,"author":{"gitId":"xumou49"},"content":"        for (Task task : tasks)","lastModifiedDate":"2022-11-08"},{"lineNumber":92,"author":{"gitId":"xumou49"},"content":"            if (task.getDescription().contains(text))","lastModifiedDate":"2022-11-08"},{"lineNumber":93,"author":{"gitId":"xumou49"},"content":"                System.out.println(Ui.tab + ++counter + \". \" + task);","lastModifiedDate":"2022-11-08"},{"lineNumber":94,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-11-08"},{"lineNumber":95,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":96,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":97,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"xumou49"},"content":"     * To write tasks to file","lastModifiedDate":"2022-11-02"},{"lineNumber":99,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"xumou49"},"content":"     * @return text to save to file","lastModifiedDate":"2022-11-02"},{"lineNumber":101,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"xumou49"},"content":"    public String writeTasksToFile() {","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"xumou49"},"content":"        StringBuilder contexts \u003d new StringBuilder();","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"xumou49"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"xumou49"},"content":"            contexts.append(task.toFile());","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"xumou49"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"xumou49"},"content":"        return contexts.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xumou49":111}},{"path":"src/main/java/entity/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package entity;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"     * To-do tasks constructor","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"     * @param description inputs by user","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"        super(description);","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"     * Parse To-do object to string","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"     * @return a string to be saved to text file","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"    public String toFile() {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"        return \"T\" + \" | \" + getStatus() + \" | \"  + getTags() + \" | \" + description + \"\\n\";","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"     * Parse To-do object to string","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"     * @return a string of To-do task","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"    public String toString() {","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"xumou49":35}},{"path":"src/main/java/entity/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package entity;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"public class Ui {","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"    public static String breakLine \u003d \"-------------------------------------------------\";","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"    public static String tab \u003d \"     \";","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"     * Terminal UI initiation","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"    public static void dukeInit() {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"        String logo \u003d \"          ______            _  _______    ______            _        _______ \\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"                \"|\\\\     /|(  ___ \\\\ |\\\\     /|( )(  ____ \\\\  (  __  \\\\ |\\\\     /|| \\\\    /\\\\(  ____ \\\\\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"                \"( \\\\   / )| (   ) )| )   ( ||/ | (    \\\\/  | (  \\\\  )| )   ( ||  \\\\  / /| (    \\\\/\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"                \" \\\\ (_) / | (__/ / | | _ | |   | (_____   | |   ) || |   | ||  (_/ / | (__    \\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"                \"  ) _ (  |  __ (  | |( )| |   (_____  )  | |   | || |   | ||   _ (  |  __)   \\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"                \" / ( ) \\\\ | (  \\\\ \\\\ | || || |         ) |  | |   ) || |   | ||  ( \\\\ \\\\ | (      \\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"                \"( /   \\\\ )| )___) )| () () |   /\\\\____) |  | (__/  )| (___) ||  /  \\\\ \\\\| (____/\\\\\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"                \"|/     \\\\||/ \\\\___/ (_______)   \\\\_______)  (______/ (_______)|_/    \\\\/(_______/\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"                \"                                                                             \\n\";","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"        System.out.println(\"Hello from bowen\u0027s\\n\" + logo);","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + \"Hello! I\u0027m Duke\\n\" + Ui.tab + \"What can I do for you?\");","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"xumou49"},"content":"     * Echo the actions performed by user","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"xumou49"},"content":"     * @param text inputs","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"xumou49"},"content":"    public static void echoText(String text) {","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + text);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"xumou49"},"content":"        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"xumou49"},"content":"//    public static void printList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"xumou49"},"content":"//        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"xumou49"},"content":"//        int counter \u003d 0;","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"xumou49"},"content":"//        for (Task task : tasks)","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"xumou49"},"content":"//            System.out.println(Ui.tab + ++counter + \". \" + task);","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"xumou49"},"content":"//        System.out.println(Ui.tab + Ui.breakLine);","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"xumou49"},"content":"//    }","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"xumou49"},"content":"     * show duke error message","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"xumou49"},"content":"     * @param err DukeExceptions","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"xumou49"},"content":"    public static void showErrMessage(DukeException err) {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"xumou49"},"content":"        echoText(err.getMessage());","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"xumou49":57}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package exceptions;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"     * duke exception constructor","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"     *","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"     * @param errorMessage get specific error message","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"        super(errorMessage);","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"xumou49":13}},{"path":"src/main/java/utils/DukeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package utils;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.Task;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"public class DukeUtils {","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"    public static void dukeInit() {","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"        String breakLine \u003d \"-------------------------------------------------\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"        String tab \u003d \"     \";","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        System.out.println(\"Hello from bowen\u0027s\\n\" + logo + breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"        System.out.println(tab + breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        System.out.println(tab + \"Hello! I\u0027m Duke\\n\" + tab + \"What can I do for you?\");","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        System.out.println(tab + breakLine);","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"xumou49":21}},{"path":"src/test/java/commands/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.Deadline;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import entity.Storage;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    void testExecute_success() {","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"        String inputs \u003d \"deadline go home /by 2022-10-10 00:00\";","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"        Command c \u003d new DeadlineCommand(inputs);","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"        c.execute();","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        Storage s \u003d Storage.getInstance();","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"        Deadline res \u003d (Deadline) s.tasks.get(0);","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        Assertions.assertEquals(\"go home\", res.getDescription());","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        Assertions.assertFalse(res.isDone());","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        Assertions.assertEquals(LocalDateTime.of(2022, 10,","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"                10, 0, 0), res.getBy());","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":25,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"xumou49":25}},{"path":"src/test/java/commands/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xumou49"},"content":"package commands;","lastModifiedDate":"2022-11-08"},{"lineNumber":2,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":3,"author":{"gitId":"xumou49"},"content":"import entity.Event;","lastModifiedDate":"2022-11-08"},{"lineNumber":4,"author":{"gitId":"xumou49"},"content":"import entity.Storage;","lastModifiedDate":"2022-11-08"},{"lineNumber":5,"author":{"gitId":"xumou49"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"xumou49"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"xumou49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"xumou49"},"content":"public class EventCommandTest {","lastModifiedDate":"2022-11-08"},{"lineNumber":11,"author":{"gitId":"xumou49"},"content":"    @Test","lastModifiedDate":"2022-11-08"},{"lineNumber":12,"author":{"gitId":"xumou49"},"content":"    void testExecute_success(){","lastModifiedDate":"2022-11-08"},{"lineNumber":13,"author":{"gitId":"xumou49"},"content":"        String inputs \u003d \"deadline go home /at 2022-10-10 00:00\";","lastModifiedDate":"2022-11-08"},{"lineNumber":14,"author":{"gitId":"xumou49"},"content":"        Command c \u003d new EventCommand(inputs);","lastModifiedDate":"2022-11-08"},{"lineNumber":15,"author":{"gitId":"xumou49"},"content":"        c.execute();","lastModifiedDate":"2022-11-08"},{"lineNumber":16,"author":{"gitId":"xumou49"},"content":"        Storage s \u003d Storage.getInstance();","lastModifiedDate":"2022-11-08"},{"lineNumber":17,"author":{"gitId":"xumou49"},"content":"        Event res \u003d (Event) s.tasks.get(0);","lastModifiedDate":"2022-11-08"},{"lineNumber":18,"author":{"gitId":"xumou49"},"content":"        Assertions.assertEquals(\"go home\", res.getDescription());","lastModifiedDate":"2022-11-08"},{"lineNumber":19,"author":{"gitId":"xumou49"},"content":"        Assertions.assertFalse(res.isDone());","lastModifiedDate":"2022-11-08"},{"lineNumber":20,"author":{"gitId":"xumou49"},"content":"        Assertions.assertEquals(LocalDateTime.of(2022, 10,","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"xumou49"},"content":"                10, 0, 0), res.getAt());","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"xumou49"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":23,"author":{"gitId":"xumou49"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"xumou49"},"content":"}","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"xumou49":24}}]
