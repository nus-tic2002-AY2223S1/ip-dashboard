[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"import command.Command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import exceptions.*;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"import parser.Parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    private Storage storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    private Ui ui;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    private static void checkIndex(int inputIndex, int taskListSize) throws InputIndexOutOfBoundsException {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"        if (!(inputIndex \u003c taskListSize) || !(inputIndex \u003e -1)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"            throw new InputIndexOutOfBoundsException();","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"    private static String checkInput(String input, int taskListSize) throws TodoMissingDescriptionException, BasicInputException, DeadlineMissingKeywordException, EventMissingKeywordException, DeadlineWrongFormatException, EventWrongFormatException, InputNumberFormatException, InputWrongFormatException, InputIndexOutOfBoundsException, FindTaskMissingDatetimeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"        String[] keywordList \u003d {\"todo\", \"bye\", \"mark\", \"unmark\", \"deadline\", \"todo\", \"list\", \"delete\", \"event\", \"findtask\"};","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"        boolean keywordExist \u003d false;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"        for (int keywordIndex \u003d 0; keywordIndex \u003c keywordList.length; keywordIndex++) {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"            if (input.contains(keywordList[keywordIndex])) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"                keywordExist \u003d true;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"        if (!keywordExist) {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"            throw new BasicInputException();","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"            if (input.indexOf(\"todo\") !\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"                if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"                    throw new TodoMissingDescriptionException();","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"            } else if (input.indexOf(\"findtask\") !\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"                if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"                    throw new FindTaskMissingDatetimeException();","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"kaiting12"},"content":"            } else if (input.indexOf(\"deadline\") !\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"kaiting12"},"content":"                if (!input.contains(\"/by\")) {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"kaiting12"},"content":"                    throw new DeadlineMissingKeywordException();","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"kaiting12"},"content":"                } else if (input.split(\"/by \").length !\u003d 2 || input.indexOf(\"/by\") \u003d\u003d 9) { // when there is no task date or there is no task given","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kaiting12"},"content":"                    throw new DeadlineWrongFormatException();","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"kaiting12"},"content":"            } else if (input.indexOf(\"event\") !\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"kaiting12"},"content":"                if (!input.contains(\"/at\")) {","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"kaiting12"},"content":"                    throw new EventMissingKeywordException();","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"kaiting12"},"content":"                } else if (input.split(\"/at \").length !\u003d 2 || input.indexOf(\"/at\") \u003d\u003d 6) { // when there is no task date or there is no task given","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"kaiting12"},"content":"                    throw new EventWrongFormatException();","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"kaiting12"},"content":"            } else if (input.indexOf(\"delete\") !\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"kaiting12"},"content":"                if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"kaiting12"},"content":"                    throw new InputWrongFormatException(\" ☹ OOPS!!! Input has wrong format. Delete command should be: delete {index to delete}\");","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"kaiting12"},"content":"                } else if (!input.split(\" \")[1].matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) { // Check if numeric","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"kaiting12"},"content":"                    throw new InputNumberFormatException(input);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"kaiting12"},"content":"                } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"kaiting12"},"content":"                    checkIndex(Integer.parseInt(input.split(\" \")[1]) - 1, taskListSize);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"kaiting12"},"content":"            } else if (input.indexOf(\"mark\") !\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"kaiting12"},"content":"                if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"kaiting12"},"content":"                    throw new InputWrongFormatException(\" ☹ OOPS!!! Input has wrong format. Mark command should be: mark {index to mark}\");","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"kaiting12"},"content":"                } else if (!input.split(\" \")[1].matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) { // Check if numeric","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"kaiting12"},"content":"                    throw new InputNumberFormatException(input);","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"kaiting12"},"content":"                } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"kaiting12"},"content":"                    checkIndex(Integer.parseInt(input.split(\" \")[1]) - 1, taskListSize);","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"kaiting12"},"content":"            } else if (input.indexOf(\"unmark\") !\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"kaiting12"},"content":"                if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"kaiting12"},"content":"                    throw new InputWrongFormatException(\" ☹ OOPS!!! Input has wrong format. Unmark command should be: unmark {index to unmark}\");","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"kaiting12"},"content":"                } else if (!input.split(\" \")[1].matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) { // Check if numeric","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"kaiting12"},"content":"                    throw new InputNumberFormatException(input);","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"kaiting12"},"content":"                } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"kaiting12"},"content":"                    checkIndex(Integer.parseInt(input.split(\" \")[1]) - 1, taskListSize);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"kaiting12"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"kaiting12"},"content":"            return input;","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"kaiting12"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"kaiting12"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"kaiting12"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"kaiting12"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"kaiting12"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"kaiting12"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"kaiting12"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"kaiting12"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"kaiting12"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"kaiting12"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"kaiting12"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"kaiting12"},"content":"    public void run() {","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"kaiting12"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"kaiting12"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"kaiting12"},"content":"        while (!isExit) {","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"kaiting12"},"content":"            try {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"kaiting12"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"kaiting12"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"kaiting12"},"content":"                checkInput(fullCommand, tasks.myTaskList.size());","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"kaiting12"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"kaiting12"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"kaiting12"},"content":"                Storage.save(\"data/tasks.txt\", tasks.myTaskList);","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"kaiting12"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"kaiting12"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"kaiting12"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"kaiting12"},"content":"            } finally {","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"kaiting12"},"content":"                ui.showLine();","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"kaiting12"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"kaiting12"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":118,"-":2}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"     * This method will set exitValue a specific boolean value.","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"     * This would end the session depending on the value given.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"     * @param exitValue boolean value","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    public ByeCommand(boolean exitValue) {","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"        super(exitValue);","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":14}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"public class Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"    public boolean exitValue \u003d false;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    Command() {","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    Command(boolean exitValue) {","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"        this.exitValue \u003d exitValue;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     * This method set the format for execute method for other classes that inherit Command class to override","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"     * Return boolean value that will decide whether to end the session","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"     * @return boolean value","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"        return this.exitValue;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":37}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"    public String description;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    public String byDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"    public DeadlineCommand(String description, String byDate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     * Given task description and deadline, this method will add a new deadline task in the task list.","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     * After adding the task, messages will be shown to user","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"        tasks.myTaskList.add(new Deadline(description, byDate));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(tasks.myTaskList.get(tasks.myTaskList.size() - 1).toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Now you have \" + (tasks.myTaskList.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":33}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"    public int deleteIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"    public DeleteCommand(int deleteIndex) {","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"        this.deleteIndex \u003d deleteIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"     * Given the task index, this method will delete that specific task in myTaskList.","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"     * After deleting the task, messages will be shown to user","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(tasks.myTaskList.get(deleteIndex).toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"        tasks.myTaskList.remove(deleteIndex);","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Now you have \" + (tasks.myTaskList.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":29}},{"path":"src/main/java/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"    public String inputCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"    public ErrorCommand(String inputCommand) {","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"        this.inputCommand \u003d inputCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"     * This method will alert user that their command does not make sense and would require them to try again.","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Try another command, your input does not work: \" + this.inputCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":25}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"import task.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"    public String description;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    public String atDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"    public EventCommand(String description, String atDate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     * Given task description and event datetime, this method will add a new event task in the tasklist.","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     * After adding the task, messages will be shown to user","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"        tasks.addTask(new Event(this.description, this.atDate));","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(tasks.myTaskList.get(tasks.myTaskList.size() - 1).toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Now you have \" + (tasks.myTaskList.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":33}},{"path":"src/main/java/command/FindtaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import task.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"import task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"public class FindtaskCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    public String inputDatetime;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    public FindtaskCommand(String inputDatetime) {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"        this.inputDatetime \u003d inputDatetime;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     * Given a specific datetime, this method will search through myTaskList and find tasks that is either event or deadline and has that datetime.","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     * These task would be shown to user.","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"        ArrayList\u003cTask\u003e filterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"        if (tasks.myTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"            ui.showMessage(\"There is no task currently\");","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"            for (Task task : tasks.myTaskList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"                if ((task instanceof Event \u0026\u0026 ((Event) task).getAt().equals(this.inputDatetime)) || (task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().equals(this.inputDatetime))) {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"                    filterList.add(task);","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"        if (filterList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"kaiting12"},"content":"            ui.showMessage(\"There is no matching event or deadline task matching the datetime given.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"kaiting12"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"kaiting12"},"content":"            for (int count \u003d 0; count \u003c filterList.size(); count++) {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"kaiting12"},"content":"                ui.showMessage((count + 1) + \".\" + filterList.get(count).toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"kaiting12"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":48}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"     * This method will list all the tasks stored in myTaskList.","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"        if (tasks.myTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"            ui.showMessage(\"There is no task, please add some task!\");","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"            for (int count \u003d 0; count \u003c tasks.myTaskList.size(); count++) {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"                ui.showMessage((count + 1) + \".\" + tasks.myTaskList.get(count).toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":25}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"    public int markIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    public MarkCommand(int markIndex) {","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"     * Given task index, this method will mark this specific task as done in the tasklist.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"     * After marking the task as done, messages will be shown to user","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"        tasks.myTaskList.get(markIndex).markDone();","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task not done:\");","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(tasks.myTaskList.get(markIndex).toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":29}},{"path":"src/main/java/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import task.ToDo;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"    public String description;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"     * Given task description, this method will add a new todo task in the tasklist.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"     * After adding the task, messages will be shown to user","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"        tasks.addTask(new ToDo(this.description));","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(this.description);","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Now you have \" + (tasks.myTaskList.size()) + \" tasks in the list.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":31}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package command;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import task.TaskList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import ui.Ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import storage.Storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"    public int unMarkIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    public UnmarkCommand(int unMarkIndex) {","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"        this.unMarkIndex \u003d unMarkIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"     * Given the task index, this method will help to mark this specific task in the tasklist as not done.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"     * After marking it not done, messages will be shown to user","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     * @param tasks   task list class","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     * @param ui      ui class to show messages","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     * @param storage storage class that has the load or save method","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"        tasks.myTaskList.get(unMarkIndex).unMarkDone();","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task not done:\");","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"        ui.showMessage(tasks.myTaskList.get(unMarkIndex).toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":29}},{"path":"src/main/java/exceptions/BasicInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class BasicInputException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public BasicInputException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/DeadlineMissingKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class DeadlineMissingKeywordException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public DeadlineMissingKeywordException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! The key word /by must exists in the deadline command.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/DeadlineWrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class DeadlineWrongFormatException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public DeadlineWrongFormatException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! Input has wrong format. Task.Deadline command should be: deadline {description} /by {deadline}\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"    public String errorMsg;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"     * Return an error message that was passed in","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"     * @return Error message","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"        return this.errorMsg;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":19}},{"path":"src/main/java/exceptions/EventMissingKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class EventMissingKeywordException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public EventMissingKeywordException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! The key word /at must exists in the event command.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/EventWrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class EventWrongFormatException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public EventWrongFormatException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! Input has wrong format. Event command should be: event {description} /at {date}\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/FindTaskMissingDatetimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class FindTaskMissingDatetimeException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public FindTaskMissingDatetimeException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! The datetime of a findtask command cannot be empty.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/InputIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class InputIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public InputIndexOutOfBoundsException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! Index in the input is out of bound. Please choose an index that is within than the size of our tasklist\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/InputNumberFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class InputNumberFormatException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public InputNumberFormatException(String inputCommand) {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! The index after \" + inputCommand.split(\" \")[0] + \" is not numeric, please enter an numeric number.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/InputWrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class InputWrongFormatException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public InputWrongFormatException(String errorMsg) {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(errorMsg);","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/exceptions/TodoMissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package exceptions;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class TodoMissingDescriptionException extends DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public TodoMissingDescriptionException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import command.*;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"public class Parser {","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"     * This method helps to understand what user\u0027s command is trying to do.","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"     * @param inputCommand User\u0027s command","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"     * @return Different types of command (E.g. ToDoCommand, ListCommand, etc. )","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"    public static Command parse(String inputCommand) {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"        String[] lineList \u003d inputCommand.split(\" \");","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"        String firstWord \u003d lineList[0];","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"            case \"todo\":","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"                String toDoTask \u003d inputCommand.split(\"todo \")[1];","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"                return new ToDoCommand(toDoTask);","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"            case \"list\":","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"                return new ListCommand();","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"            case \"bye\":","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"                return new ByeCommand(true);","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"            case \"mark\":","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"                return new MarkCommand(Integer.parseInt(lineList[1]) - 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"            case \"unmark\":","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"                return new UnmarkCommand(Integer.parseInt(lineList[1]) - 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"            case \"event\":","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"                String eventTask \u003d inputCommand.substring(6, inputCommand.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"                String eventDate \u003d inputCommand.split(\"/at \")[1];","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"                DateTimeFormatter eventDateFormat \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"                String eventDatetimeString;","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"                try {","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"                    LocalDateTime eventDatetime \u003d LocalDateTime.parse(eventDate, eventDateFormat);","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"                    eventDatetimeString \u003d eventDatetime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"                    return new EventCommand(eventTask, eventDatetimeString);","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"kaiting12"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"kaiting12"},"content":"                    return new ErrorCommand(inputCommand + \"\\n\" + \" ☹ OOPS!!! event has the wrong datetime format. \" + \"Event date format should be {d/MM/yyyy HHmm}\");","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"kaiting12"},"content":"            case \"deadline\":","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"kaiting12"},"content":"                String deadLineTask \u003d inputCommand.substring(9, inputCommand.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kaiting12"},"content":"                String deadline \u003d inputCommand.split(\"/by \")[1];","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"kaiting12"},"content":"                DateTimeFormatter deadlineFormat \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"kaiting12"},"content":"                String deadlineString;","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"kaiting12"},"content":"                try {","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"kaiting12"},"content":"                    LocalDateTime deadlineDatetime \u003d LocalDateTime.parse(deadline, deadlineFormat);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"kaiting12"},"content":"                    deadlineString \u003d deadlineDatetime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"kaiting12"},"content":"                    return new DeadlineCommand(deadLineTask, deadlineString);","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"kaiting12"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"kaiting12"},"content":"                    return new ErrorCommand(inputCommand + \"\\n\" + \" ☹ OOPS!!! deadline has the wrong datetime format. \" + \"Deadline format should be {d/MM/yyyy HHmm}\");","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"kaiting12"},"content":"            case \"delete\":","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"kaiting12"},"content":"                int deleteIndex \u003d Integer.parseInt(lineList[1]) - 1;","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"kaiting12"},"content":"                return new DeleteCommand(deleteIndex);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"kaiting12"},"content":"            case \"findtask\":","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"kaiting12"},"content":"                String taskDate \u003d inputCommand.split(\"findtask \")[1];","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"kaiting12"},"content":"                DateTimeFormatter taskDateFormat \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"kaiting12"},"content":"                String taskDatetimeString;","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"kaiting12"},"content":"                try {","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"kaiting12"},"content":"                    LocalDateTime taskDatetime \u003d LocalDateTime.parse(taskDate, taskDateFormat);","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"kaiting12"},"content":"                    taskDatetimeString \u003d taskDatetime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"kaiting12"},"content":"                    return new FindtaskCommand(taskDatetimeString);","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"kaiting12"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"kaiting12"},"content":"                    return new ErrorCommand(inputCommand + \"\\n\" + \" ☹ OOPS!!! event has the wrong datetime format. \" + \"Event date format should be {d/MM/yyyy HHmm}\");","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"kaiting12"},"content":"            default:","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"kaiting12"},"content":"                return new ErrorCommand(inputCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":76}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import java.io.File;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"public class Storage {","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    private static File file;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     * Return the file, tasks.txt","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     * @return tasks file","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     * @throws FileNotFoundException If file is not found","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"    public static File load() throws FileNotFoundException {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"        return file;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"     * Save the content of task list into the file, tasks.txt.","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"     * If file/directory cannot be found, create one.","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"     * @param filePath Path of the file, tasks.txt","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"     * @param taskList Task list containing all task","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"    public static void save(String filePath, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"                File f \u003d new File(filePath);","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"                if (!f.exists()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"                    f.getParentFile().mkdirs();","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"kaiting12"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"kaiting12"},"content":"            FileOutputStream writer \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"kaiting12"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"kaiting12"},"content":"                writer.write((task.stringToOutput() + \u0027\\n\u0027).getBytes());","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kaiting12"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"kaiting12"},"content":"            writer.close();","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"kaiting12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"kaiting12"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":52}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"    protected String by;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"        super(description);","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"     * Return a string including status icon, description and datetime of deadline","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"     * @return Status icon, description and datetime of deadline in a string","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    public String toString() {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     * Return a string including status icon, description and datetime of deadline in format to be saved in task.txt","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"     * @return Status icon, description and datetime of deadline in a string","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"    public String stringToOutput() {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"        return \"D\" + super.stringToOutput() + \" | \" + by;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"     * Return the deadline of the task","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"     * @return Datetime of deadline in string","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"    public String getBy() {","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"        return by;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"kaiting12":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class Event extends Task {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"    protected String at;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"        super(description);","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"     * Return a string including status icon, description and datetime of event","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"     * @return Status icon, description and datetime of event in a string","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    public String toString() {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     * Return a string including status icon, description and datetime of event in format to be saved in task.txt","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"     * @return Status icon, description and datetime of event in a string","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"    public String stringToOutput() {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"        return \"E\" + super.stringToOutput() + \" | \" + at;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"     * Return the event datetime of the task","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"     * @return Datetime of event in string","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"    public String getAt() {","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"        return at;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":40}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class Task {","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    protected String description;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"     * Return status icon of either \"X\" or \" \" based on values of isDone variable.","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"     * If isDone \u003d true, status icon will be \"X\" and \" \" vice versa.","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"     * @return The status icon of task","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"     * Return description of task","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"     * @return The description of task","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"        return this.description;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"     * Mark task as done by setting isDone variable to true.","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"     * Mark task as not done by setting isDone variable to false.","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"kaiting12"},"content":"    public void unMarkDone() {","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"kaiting12"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kaiting12"},"content":"     * Return a string including both the status icon and description of task","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"kaiting12"},"content":"     * @return Both status icon and description in a string","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"kaiting12"},"content":"    public String toString() {","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"kaiting12"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"kaiting12"},"content":"     * Return a string including both the status icon and description of task in format to be saved in task.txt","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"kaiting12"},"content":"     * @return Both status icon and description in a string","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"kaiting12"},"content":"    public String stringToOutput() {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"kaiting12"},"content":"        return \" | \" + (this.getStatusIcon() \u003d\u003d \"X\" ? \"1\" : \"0\") + \" | \" + this.getDescription();","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"kaiting12":62}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import java.io.File;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"public class TaskList {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"    public ArrayList\u003cTask\u003e myTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"    public TaskList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"        myTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"    // When we are loading a file","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    public TaskList(File f) throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"        while (s.hasNextLine()) { //add task to the list as long there is next line","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"            loadTasks(s.nextLine());","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"     * Method to read and process each line in task.txt to add them as task into myTaskList","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"     * @param input each line in task.txt","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"    public void loadTasks(String input) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"        String[] inputList \u003d input.split(\" \\\\| \");","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"        switch (inputList[0]) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"            // Todo","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"            case \"T\":","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"                String toDoTask \u003d inputList[2];","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"                myTaskList.add(new ToDo(toDoTask));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"                if (Integer.parseInt(inputList[1]) \u003d\u003d 1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"                    myTaskList.get(myTaskList.size() - 1).markDone();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"                } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"                    myTaskList.get(myTaskList.size() - 1).unMarkDone();","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"kaiting12"},"content":"                break;","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"kaiting12"},"content":"            case \"E\":","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"kaiting12"},"content":"                String EventTask \u003d inputList[2];","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"kaiting12"},"content":"                String ByDate \u003d inputList[3];","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"kaiting12"},"content":"                myTaskList.add(new Event(EventTask, ByDate));","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"kaiting12"},"content":"                if (Integer.parseInt(inputList[1]) \u003d\u003d 1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"kaiting12"},"content":"                    myTaskList.get(myTaskList.size() - 1).markDone();","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"kaiting12"},"content":"                } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"kaiting12"},"content":"                    myTaskList.get(myTaskList.size() - 1).unMarkDone();","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"kaiting12"},"content":"                break;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"kaiting12"},"content":"            case \"D\":","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"kaiting12"},"content":"                String DeadLineTask \u003d inputList[2];","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"kaiting12"},"content":"                String AtDate \u003d inputList[3];","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"kaiting12"},"content":"                myTaskList.add(new Deadline(DeadLineTask, AtDate));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"kaiting12"},"content":"                if (Integer.parseInt(inputList[1]) \u003d\u003d 1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"kaiting12"},"content":"                    myTaskList.get(myTaskList.size() - 1).markDone();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"kaiting12"},"content":"                } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"kaiting12"},"content":"                    myTaskList.get(myTaskList.size() - 1).unMarkDone();","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"kaiting12"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"kaiting12"},"content":"                break;","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"kaiting12"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"kaiting12"},"content":"     * Method to add task into myTaskList","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"kaiting12"},"content":"     * @param taskToAdd Task to add into the arraylist","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"kaiting12"},"content":"    public void addTask(Task taskToAdd) {","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"kaiting12"},"content":"        myTaskList.add(taskToAdd);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"kaiting12":75}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"        super(description);","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"     * Return a string including status icon, description of todo task","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"     * @return Both status icon and description of todo task","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    public String toString() {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"     * Return a string including both the status icon and description of todo task in format to be saved in task.txt","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"     * @return Status icon and description of todo task in a string","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"    public String stringToOutput() {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"        return \"T\" + super.stringToOutput();","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"kaiting12":27}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaiting12"},"content":"package ui;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"kaiting12"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"kaiting12"},"content":"public class Ui {","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"kaiting12"},"content":"    public Scanner input;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"kaiting12"},"content":"     * This method displays a loading error message when tasks.txt file does not exist.","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"kaiting12"},"content":"     * It will also alert user that we will be creating an empty task list for them","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"kaiting12"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"kaiting12"},"content":"        System.out.println(\"There is no tasks.txt file, so we will create an empty task list for you.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"kaiting12"},"content":"     * This method displays a welcome message to user","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"kaiting12"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"kaiting12"},"content":"        String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\" + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"kaiting12"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"kaiting12"},"content":"        System.out.println(\"Hello! I\u0027m Duke. \\nWhat can I do for you?\");","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"kaiting12"},"content":"     * Allow user to enter command and return user\u0027s command","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"kaiting12"},"content":"     * @return user\u0027s command","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"kaiting12"},"content":"    public String readCommand() {","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"kaiting12"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"kaiting12"},"content":"        return input.nextLine();","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"kaiting12"},"content":"     * This method helps to display a straight line to user","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"kaiting12"},"content":"    public void showLine() {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"kaiting12"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"kaiting12"},"content":"     * This method helps to display message to user","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"kaiting12"},"content":"     * @param message Message to show user","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"kaiting12"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"kaiting12"},"content":"        System.out.println(message);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"kaiting12"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"kaiting12"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"kaiting12"},"content":"     * This method helps to display error message to user","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"kaiting12"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"kaiting12"},"content":"     * @param message Error message to show user","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"kaiting12"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"kaiting12"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"kaiting12"},"content":"        System.out.println(message);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"kaiting12"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"kaiting12"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"kaiting12":59}}]
