[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"### Sourcetree personal token issue","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"go to-\u003e setting -\u003e Path -\u003e select the link -\u003e clicke edit -\u003euse below formet","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"https://{personal-access-token\u003e@github.com}/{\u003cmy-repo\u003e}.git\u003e","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"Anyerxkp":4,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Vector;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"public class Duke {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"    public static final String LONG_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"        //data add","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"        Vector\u003cTask\u003e tasks \u003d new Vector\u003c\u003e();","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"        greetingHandler();","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        printlnWidthIndent(LONG_LINE);","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"        Boolean isExit \u003d false;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        while(!isExit){","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            // Split the line by any whitespaces characters (including spaces, tabs etc.)","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"        String[] arguments \u003d line.split(\"\\\\s+\");","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"            // If first argument (command) is empty, there are empty spaces typed in at the front - so we remove it","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            if (arguments[0].isEmpty()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"                arguments \u003d Arrays.copyOfRange(arguments, 1, arguments.length);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(LONG_LINE);","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"                switch(arguments[0]) {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"                    case \"bye\":","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"                        byeHandler();","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"                        isExit \u003d true;","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"                        break;","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"                    case \"list\":","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"                        listHandler(tasks);","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"                        break;","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"                    case \"done\":","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"                        doneHandler(tasks, arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"                        break;","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"                    case \"notdone\":","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"                        notdone(tasks, arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"                        break;","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"                    case \"deadline\":","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"                        deadlineHandler(tasks, arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"                        break;","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"                    case \"event\":","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"                        eventHandler(tasks, arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"                        break;","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"                    case \"todo\":","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"                        todoHandler(tasks, arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"                        break;","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"                    default:","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"                        throw new InvalidInputException(InputExceptionType.UNKNOWN_COMMAND);","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"                printlnWidthIndent (\"Oops! \" + e.getMessage());","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(LONG_LINE);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"        in.close();","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"        protected static void greetingHandler() {","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"        String logo \u003d \"    \u003d    |\\\\    | |     | \u003d\u003d\u003d\u003d\u003d\u003d   |\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"                    + \"   / \\\\   | \\\\   |  |   |  ||       |     \u003d\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"                    + \"  /___\\\\  |  \\\\  |   | |   ||\u003d\u003d\u003d\u003d   |\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"                    + \" /-----\\\\ |   \\\\ |    |    ||       |   \\\\\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"                    + \"/       \\\\|    \\\\|    |    \u003d\u003d\u003d\u003d\u003d\u003d   |    \\\\\\n\";","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"        System.out.println( logo);","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(LONG_LINE);","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(\"Hello! I am Anyer\");","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(\"What can I do for you?\");","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(LONG_LINE);","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Anyerxkp"},"content":"    //add\"good bye \"","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"        protected static void byeHandler(){","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"    protected static void printLine(String line){","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Anyerxkp"},"content":"        printlnWidthIndent(LONG_LINE);","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Anyerxkp"},"content":"        printlnWidthIndent(line);","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Anyerxkp"},"content":"        printlnWidthIndent(LONG_LINE);","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Anyerxkp"},"content":"    protected static void listHandler(Vector\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Anyerxkp"},"content":"        printlnWidthIndent(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Anyerxkp"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(String.format(\"%d.\\t%s\", i + 1, tasks.get(i)));","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"Anyerxkp"},"content":"    // Mark a task to be done with index specified in arguments[1]","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"Anyerxkp"},"content":"    protected static void doneHandler(Vector\u003cTask\u003e tasks, String[] arguments) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"Anyerxkp"},"content":"        if (arguments.length \u003c 2) {","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"Anyerxkp"},"content":"            // An index must be provided for the task to be marked \"done\"","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(\"You will need to give me an index, like this: `done 2`.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"Anyerxkp"},"content":"                int index \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Anyerxkp"},"content":"                if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"Anyerxkp"},"content":"                    // This index is out of the boundary of our database","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"Anyerxkp"},"content":"                    throw new InvalidInputException(InputExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"Anyerxkp"},"content":"                Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"Anyerxkp"},"content":"                task.markAsDone();","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"Anyerxkp"},"content":"                tasks.set(index - 1, task);","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"Anyerxkp"},"content":"                printlnWidthIndent(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"Anyerxkp"},"content":"                printlnWidthIndent(\"\\t\" + task);","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"Anyerxkp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"Anyerxkp"},"content":"                throw new InvalidInputException(InputExceptionType.NOT_INTEGER, e);","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"Anyerxkp"},"content":"    protected static void notdone(Vector\u003cTask\u003e tasks, String[] arguments) throws InvalidInputException{","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"Anyerxkp"},"content":"        if (arguments.length \u003c 2) {","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"Anyerxkp"},"content":"            // An index must be provided for the task to be marked \"done\"","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"Anyerxkp"},"content":"            printlnWidthIndent(\"You will need to give me an index, like this: `ndone 2`.\");","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"Anyerxkp"},"content":"                int index \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"Anyerxkp"},"content":"                if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"Anyerxkp"},"content":"                    // This index is out of the boundary of our database","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"Anyerxkp"},"content":"                    throw new InvalidInputException(InputExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"Anyerxkp"},"content":"                Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"Anyerxkp"},"content":"                task.markAsnotDone();","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"Anyerxkp"},"content":"                tasks.set(index - 1, task);","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":142,"author":{"gitId":"Anyerxkp"},"content":"                printlnWidthIndent(\"Nice! I\u0027ve unmarked this task as ndone:\");","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"Anyerxkp"},"content":"                printlnWidthIndent(\"\\t\" + task);","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"Anyerxkp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"Anyerxkp"},"content":"                throw new InvalidInputException(InputExceptionType.NOT_INTEGER, e);","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"Anyerxkp"},"content":"    // Create a deadline task","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"Anyerxkp"},"content":"    protected static void deadlineHandler(Vector\u003cTask\u003e tasks, String[] arguments) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":151,"author":{"gitId":"Anyerxkp"},"content":"        int i \u003d findIndex(arguments, \"/by\");","lastModifiedDate":"2022-09-19"},{"lineNumber":152,"author":{"gitId":"Anyerxkp"},"content":"        if (i !\u003d -1 \u0026\u0026 i + 1 !\u003d arguments.length) {","lastModifiedDate":"2022-09-19"},{"lineNumber":153,"author":{"gitId":"Anyerxkp"},"content":"            String description \u003d String.join(\" \", Arrays.copyOfRange(arguments, 1, i));","lastModifiedDate":"2022-09-19"},{"lineNumber":154,"author":{"gitId":"Anyerxkp"},"content":"            String by \u003d String.join(\" \", Arrays.copyOfRange(arguments, i + 1, arguments.length));","lastModifiedDate":"2022-09-19"},{"lineNumber":155,"author":{"gitId":"Anyerxkp"},"content":"            tasks.add(new Deadline(description, by));","lastModifiedDate":"2022-09-19"},{"lineNumber":156,"author":{"gitId":"Anyerxkp"},"content":"            printNewTask(tasks);","lastModifiedDate":"2022-09-19"},{"lineNumber":157,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":158,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_AT_DATE);","lastModifiedDate":"2022-09-19"},{"lineNumber":159,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":160,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":161,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":162,"author":{"gitId":"Anyerxkp"},"content":"    protected static void eventHandler(Vector\u003cTask\u003e tasks, String[] arguments) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":163,"author":{"gitId":"Anyerxkp"},"content":"        int i \u003d findIndex(arguments, \"/at\");","lastModifiedDate":"2022-09-19"},{"lineNumber":164,"author":{"gitId":"Anyerxkp"},"content":"        if (i !\u003d -1 \u0026\u0026 i + 1 !\u003d arguments.length) {","lastModifiedDate":"2022-09-19"},{"lineNumber":165,"author":{"gitId":"Anyerxkp"},"content":"            String description \u003d String.join(\" \", Arrays.copyOfRange(arguments, 1, i));","lastModifiedDate":"2022-09-19"},{"lineNumber":166,"author":{"gitId":"Anyerxkp"},"content":"            String at \u003d String.join(\" \", Arrays.copyOfRange(arguments, i + 1, arguments.length));","lastModifiedDate":"2022-09-19"},{"lineNumber":167,"author":{"gitId":"Anyerxkp"},"content":"            tasks.add(new Event(description, at));","lastModifiedDate":"2022-09-19"},{"lineNumber":168,"author":{"gitId":"Anyerxkp"},"content":"            printNewTask(tasks);","lastModifiedDate":"2022-09-19"},{"lineNumber":169,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":170,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_AT_DATE);","lastModifiedDate":"2022-09-19"},{"lineNumber":171,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":172,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":173,"author":{"gitId":"Anyerxkp"},"content":"    // Create an event task","lastModifiedDate":"2022-09-19"},{"lineNumber":174,"author":{"gitId":"Anyerxkp"},"content":"    protected static void todoHandler(Vector\u003cTask\u003e tasks, String[] arguments) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":175,"author":{"gitId":"Anyerxkp"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(arguments, 1, arguments.length));","lastModifiedDate":"2022-09-19"},{"lineNumber":176,"author":{"gitId":"Anyerxkp"},"content":"        tasks.add(new ToDo(description));","lastModifiedDate":"2022-09-19"},{"lineNumber":177,"author":{"gitId":"Anyerxkp"},"content":"        printNewTask(tasks);","lastModifiedDate":"2022-09-19"},{"lineNumber":178,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":179,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":180,"author":{"gitId":"Anyerxkp"},"content":"    // Print a line with 4 spaces as indentation","lastModifiedDate":"2022-09-19"},{"lineNumber":181,"author":{"gitId":"Anyerxkp"},"content":"    protected static void printlnWidthIndent(String line) {","lastModifiedDate":"2022-09-19"},{"lineNumber":182,"author":{"gitId":"Anyerxkp"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2022-09-19"},{"lineNumber":183,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":184,"author":{"gitId":"Anyerxkp"},"content":"    // Print a message for a successful insertion of task","lastModifiedDate":"2022-09-19"},{"lineNumber":185,"author":{"gitId":"Anyerxkp"},"content":"    protected static void printNewTask(Vector\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":186,"author":{"gitId":"Anyerxkp"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2022-09-19"},{"lineNumber":187,"author":{"gitId":"Anyerxkp"},"content":"        printlnWidthIndent(\"Great. We added a new task:\");","lastModifiedDate":"2022-09-19"},{"lineNumber":188,"author":{"gitId":"Anyerxkp"},"content":"        printlnWidthIndent(\"\\t\" + tasks.get(size - 1));","lastModifiedDate":"2022-09-19"},{"lineNumber":189,"author":{"gitId":"Anyerxkp"},"content":"        printlnWidthIndent(String.format(\"You have in total %d tasks\", size));","lastModifiedDate":"2022-09-19"},{"lineNumber":190,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":191,"author":{"gitId":"Anyerxkp"},"content":"    // Find the index of a string in a string array","lastModifiedDate":"2022-09-19"},{"lineNumber":192,"author":{"gitId":"Anyerxkp"},"content":"    protected static int findIndex(String[] haystack, String needle) {","lastModifiedDate":"2022-09-19"},{"lineNumber":193,"author":{"gitId":"Anyerxkp"},"content":"        for (int i \u003d 0; i \u003c haystack.length; i +\u003d 1) {","lastModifiedDate":"2022-09-19"},{"lineNumber":194,"author":{"gitId":"Anyerxkp"},"content":"            if (haystack[i].equals(needle)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":195,"author":{"gitId":"Anyerxkp"},"content":"                return i;","lastModifiedDate":"2022-09-19"},{"lineNumber":196,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":197,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":198,"author":{"gitId":"Anyerxkp"},"content":"        return -1;","lastModifiedDate":"2022-09-19"},{"lineNumber":199,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":200,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Anyerxkp":200}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.exception;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"@SuppressWarnings(\"serial\")","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"    public static enum InputExceptionType {","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"        UNKNOWN_COMMAND,","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"        EMPTY_DESCRIPTION,","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"        NO_BY_DATE,","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"        NO_AT_DATE,","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"        NOT_INTEGER,","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"        INDEX_OUT_OF_BOUND","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"    public InvalidInputException(InputExceptionType inputType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"        this(inputType, null);","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    public InvalidInputException(InputExceptionType inputType, Throwable err) {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        super(getDescription(inputType), err);","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    public static String getDescription(InputExceptionType inputType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"        switch (inputType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"            case UNKNOWN_COMMAND:","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"                return \"Command given is not recognized as a valid one.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            case EMPTY_DESCRIPTION:","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"                return \"You will need to provide a description.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"            case NO_BY_DATE:","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"                return \"You must specify a deadline date following /by keyword.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            case NO_AT_DATE:","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"                return \"You must specify an event date following /at keyword.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"            case NOT_INTEGER:","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"                return \"Only integer is accepted as the argument.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            case INDEX_OUT_OF_BOUND:","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"                return \"We don\u0027t have an existing entry with this index.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"            default:","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"                return \"This type of invalid input is not recognized.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Anyerxkp":40}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"    protected String at;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"    public Event(String description, String at) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"        super(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"        typeIcon \u003d \"E\";","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"    public String toString() {","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"        return super.toString() + String.format(\" (at: %s)\", at);","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Anyerxkp":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"public class Task {","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"    protected String typeIcon \u003d \"*\";","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"    protected String description;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"    public Task(String description) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_DESCRIPTION);","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"        // Return tick when done, or \u0027X\u0027 symbol when it is not done","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"        return typeIcon;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"        return description;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"    public void markAsnotDone() {","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"    public String toString() {","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"        return String.format(\"[%s][%s] %s\", getTypeIcon(), getStatusIcon(), getDescription());","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"Anyerxkp":37}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"    public ToDo(String description) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"        super(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"        typeIcon \u003d \"T\";","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Anyerxkp":9}}]
