[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"### Sourcetree personal token issue","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"go to-\u003e setting -\u003e Path -\u003e select the link -\u003e clicke edit -\u003euse below formet","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"https://{personal-access-token\u003e@github.com}/{\u003cmy-repo\u003e}.git\u003e","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"Anyerxkp":4,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"    String javaFxVersion \u003d \u002711.0.2\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Anyerxkp":14,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"# User Guide for Duke","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"Duke is a basic task management application written in Java 11. It is a desktop application.","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"### Feature-1","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"You can record and retrieve three kinds of tasks on this program - ToDo Tasks, Events and Deadlines. Each","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"time you modify the task list, it will be saved onto your hard disk, so you will be able to see your list","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"after you close and open again this application.","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"### How to start","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"1. First, make sure you have Java 11 installed on your computer. If not, you may want to download it from","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"   [Oracle\u0027s Website](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html).","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"2. Copy the application to a folder. Since it will create a separate save file on the same folder, it is","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"   suggested to put it in an empty folder.","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"3. Double-click the file to launch the application. If the window is not shown up, you can open a Command","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"   Prompt (CMD), then run `java -jar xxxxx.jar` to execute it.","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"4. After the program start and see a welcome message, you may type your command in it. For example, you can","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"   type `todo some task description` followed by `Enter` to execute it:","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"   ```","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"            [Oops!] duke.exception.SaveException: No save file is found at the given path.","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"            Got a problem when loading save file at \u0027duke.save\u0027.","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"            An empty list will be used instead!","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"                ___  _   ___   _____________ ","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"               / _ \\| \\ | \\ \\ / |  ___| ___ \\","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"              / /_\\ |  \\| |\\ V /| |__ | |_/ /","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"              |  _  | . ` | \\ / |  __||    / ","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"              | | | | |\\  | | | | |___| |\\ \\ ","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"              \\_| |_\\_| \\_/ \\_/ \\____/\\_| \\_|","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"            Hello! I\u0027m Anyer.","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            What can I do for you?","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"            Note: When input a deadlinedate (\u0026 time), please use format like /by \u00272022-01-20 23:59\u0027.","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"            When input a eventdate (\u0026 time), please use format like /at \u00272022-01-20 23:59\u0027 /to \u00272022-01-20 23:59\u0027 ","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"            ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"    todo test1","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"            ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"            Great. We added a new task:","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"                    [T][✘][#] test1","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"            You have in total 1 tasks","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"            ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"    ```","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"   For more command usages, you may refer to a detailed explanation of each one of them below.","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"## For Reference","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"This table provides a quick reference for all the commands. If you are already familiar with the usage of them,","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"you may use this table without reading a long description below. If you are new, it is suggested to read the full","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"document as it contains more details on usage.","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"| Purpose               | Command and Parameters                                      |","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"|-----------------------|-------------------------------------------------------------|","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"| Add a task            | `todo \u003cTASK DESCRIPTION\u003e`                                   |","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"|                       | `event \u003cEVENT DESCRIPTION\u003e /at \u003cDATE TIME\u003e /to \u003cDATE TIME\u003e` |","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"|                       | `deadline \u003cDEADLINE DESCRIPTION\u003e /by \u003cDATE TIME\u003e`           |","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"| Tag a task            | `tag \u003cINDEX\u003e /tag \u003cDESCRIPTION\u003e`                            |","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"| List all tasks        | `list \u003cINDEX\u003e`                                              |","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"| Mark a task completed | `done \u003cINDEX\u003e`                                              |","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"| Delete a task         | `delete \u003cINDEX\u003e`                                            |","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"| Find a task           | `find \u003cDESCRIPTION SUBTEXT\u003e`                                |","lastModifiedDate":"2022-11-13"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"|                       | `searchdate \u003cDATE\u003e`                                         |","lastModifiedDate":"2022-11-13"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"| Exit                  | `bye`                                                       |","lastModifiedDate":"2022-11-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"## Features","lastModifiedDate":"2022-11-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"\u003e This section introduces usage and input/output format of each one of the","lastModifiedDate":"2022-11-13"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"\u003e available commands. Here are some notions used for this section:","lastModifiedDate":"2022-11-13"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"\u003e - Words in `\u003c\u003e`: These are compulsory parameters you must provide. For example, for","lastModifiedDate":"2022-11-13"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"    \u003e   `todo \u003cTASK DESCRIPTION\u003e`, `todo TEST` would be a valid input, while `todo` is not, since","lastModifiedDate":"2022-11-13"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"    \u003e   the description part is missing.","lastModifiedDate":"2022-11-13"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"\u003e - Words not in any brackets: **Exact** words must be used for input. For example, for","lastModifiedDate":"2022-11-13"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"    \u003e   `done \u003cINDEX\u003e`, `done 1` is valid while `done TEST ` is not valid.","lastModifiedDate":"2022-11-13"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"\u003e Some parameters have additional constraints, such as only integers are accepted. This","lastModifiedDate":"2022-11-13"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"\u003e will be stated clearly below.","lastModifiedDate":"2022-11-13"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"\u003e For sample input/output (I/O), lines with indentation and wrapped in two long lines are","lastModifiedDate":"2022-11-13"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"\u003e outputs. The remaining lines are input lines.","lastModifiedDate":"2022-11-13"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"\u003e Commands are case-sensitive.","lastModifiedDate":"2022-11-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"### Add \"ToDo\" Task: `todo`","lastModifiedDate":"2022-11-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"ToDo task is one of the three types of task. It is a general one containing only a task","lastModifiedDate":"2022-11-13"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"description. Description can be anything as long as it is readable.","lastModifiedDate":"2022-11-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"Format: `todo \u003cTASK DESCRIPTION\u003e`","lastModifiedDate":"2022-11-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":91,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":93,"author":{"gitId":"Anyerxkp"},"content":"todo buy food","lastModifiedDate":"2022-11-13"},{"lineNumber":94,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":95,"author":{"gitId":"Anyerxkp"},"content":"        Great. We added a new task:","lastModifiedDate":"2022-11-13"},{"lineNumber":96,"author":{"gitId":"Anyerxkp"},"content":"                [T][✘][#] buy food","lastModifiedDate":"2022-11-13"},{"lineNumber":97,"author":{"gitId":"Anyerxkp"},"content":"        You have in total 1 tasks","lastModifiedDate":"2022-11-13"},{"lineNumber":98,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":100,"author":{"gitId":"Anyerxkp"},"content":"### Add \"Event\" Task: `event`","lastModifiedDate":"2022-11-13"},{"lineNumber":101,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":102,"author":{"gitId":"Anyerxkp"},"content":"Event is a special kind of task, which bear a \"happening date\". This date is specified after","lastModifiedDate":"2022-11-13"},{"lineNumber":103,"author":{"gitId":"Anyerxkp"},"content":"`/at` keyword. The date has a format of `31/12/2020`. If you want to record time as well, you","lastModifiedDate":"2022-11-13"},{"lineNumber":104,"author":{"gitId":"Anyerxkp"},"content":"can specify it in this format: `31/12/2020 17:59`. When no time is specified, it will be 12pm","lastModifiedDate":"2022-11-13"},{"lineNumber":105,"author":{"gitId":"Anyerxkp"},"content":"noon by default.","lastModifiedDate":"2022-11-13"},{"lineNumber":106,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":107,"author":{"gitId":"Anyerxkp"},"content":"\u003e In more specific terms,","lastModifiedDate":"2022-11-13"},{"lineNumber":108,"author":{"gitId":"Anyerxkp"},"content":"\u003e - `\u003cDATE\u003e` is of format `yyyy-MM-dd`","lastModifiedDate":"2022-11-13"},{"lineNumber":109,"author":{"gitId":"Anyerxkp"},"content":"\u003e - `\u003cTIME\u003e` is of format `HH:mm`","lastModifiedDate":"2022-11-13"},{"lineNumber":110,"author":{"gitId":"Anyerxkp"},"content":"\u003e - `\u003cDATE|TIME\u003e` means either one of them are accepted","lastModifiedDate":"2022-11-13"},{"lineNumber":111,"author":{"gitId":"Anyerxkp"},"content":"    Format: `event \u003cEVENT DESCRIPTION\u003e /at \u003cDATE TIME\u003e /to \u003cDATE TIME\u003e`","lastModifiedDate":"2022-11-13"},{"lineNumber":112,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":113,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":114,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":115,"author":{"gitId":"Anyerxkp"},"content":"event friend\u0027s wedding  /at 2022-05-05 19:00 /to 2022-05-06 20:00","lastModifiedDate":"2022-11-13"},{"lineNumber":116,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":117,"author":{"gitId":"Anyerxkp"},"content":"        Great. We added a new task:","lastModifiedDate":"2022-11-13"},{"lineNumber":118,"author":{"gitId":"Anyerxkp"},"content":"                [E][✘][#] friend\u0027s wedding (at: May-05-2022 12:00 - May-06-2022 20:00)","lastModifiedDate":"2022-11-13"},{"lineNumber":119,"author":{"gitId":"Anyerxkp"},"content":"        You have in total 2 tasks","lastModifiedDate":"2022-11-13"},{"lineNumber":120,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":121,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":122,"author":{"gitId":"Anyerxkp"},"content":"### Add \"Deadline\" Task: `deadline`","lastModifiedDate":"2022-11-13"},{"lineNumber":123,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":124,"author":{"gitId":"Anyerxkp"},"content":"Deadline is the other special kind of task, which contains a date (and time) that you need to","lastModifiedDate":"2022-11-13"},{"lineNumber":125,"author":{"gitId":"Anyerxkp"},"content":"finish it by. The date (and time) is specified after `/by` keyword. The date (and time) format","lastModifiedDate":"2022-11-13"},{"lineNumber":126,"author":{"gitId":"Anyerxkp"},"content":"is exactly same as the one for `event`.","lastModifiedDate":"2022-11-13"},{"lineNumber":127,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":128,"author":{"gitId":"Anyerxkp"},"content":"Format: `deadline \u003cDEADLINE DESCRIPTION\u003e /by \u003cDATE TIME\u003e`","lastModifiedDate":"2022-11-13"},{"lineNumber":129,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":130,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":131,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":132,"author":{"gitId":"Anyerxkp"},"content":"deadline prepare for exam /by 2022-06-08 11:15","lastModifiedDate":"2022-11-13"},{"lineNumber":133,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":134,"author":{"gitId":"Anyerxkp"},"content":"        Great. We added a new task:","lastModifiedDate":"2022-11-13"},{"lineNumber":135,"author":{"gitId":"Anyerxkp"},"content":"                [D][✘][#] prepare for exam (by: Jun-08-2022 11:15)","lastModifiedDate":"2022-11-13"},{"lineNumber":136,"author":{"gitId":"Anyerxkp"},"content":"        You have in total 3 tasks","lastModifiedDate":"2022-11-13"},{"lineNumber":137,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":138,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":139,"author":{"gitId":"Anyerxkp"},"content":"\u003e As you may have noticed, when it prints out the task after it is added to the list, there is","lastModifiedDate":"2022-11-13"},{"lineNumber":140,"author":{"gitId":"Anyerxkp"},"content":"\u003e `T` for ToDo task, `E` for event, and `D` for deadline. This character describes what kind of","lastModifiedDate":"2022-11-13"},{"lineNumber":141,"author":{"gitId":"Anyerxkp"},"content":"\u003e task it is, which is useful for the following command, `list`.","lastModifiedDate":"2022-11-13"},{"lineNumber":142,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":143,"author":{"gitId":"Anyerxkp"},"content":"Format: `list`","lastModifiedDate":"2022-11-13"},{"lineNumber":144,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":145,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":146,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":147,"author":{"gitId":"Anyerxkp"},"content":"list","lastModifiedDate":"2022-11-13"},{"lineNumber":148,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":149,"author":{"gitId":"Anyerxkp"},"content":"        You don\u0027t have a task in your list!","lastModifiedDate":"2022-11-13"},{"lineNumber":150,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":151,"author":{"gitId":"Anyerxkp"},"content":"list","lastModifiedDate":"2022-11-13"},{"lineNumber":152,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":153,"author":{"gitId":"Anyerxkp"},"content":"        Here are the tasks in your list:","lastModifiedDate":"2022-11-13"},{"lineNumber":154,"author":{"gitId":"Anyerxkp"},"content":"        1.      [T][✓][#] Buy food","lastModifiedDate":"2022-11-13"},{"lineNumber":155,"author":{"gitId":"Anyerxkp"},"content":"        2.      [E][✘][#] friend\u0027s wedding (at: May-05-2022 12:00 - May-06-2022 20:00)","lastModifiedDate":"2022-11-13"},{"lineNumber":156,"author":{"gitId":"Anyerxkp"},"content":"        3.      [D][✓][#] prepare for exam (by: Jun-08-2022 11:15)","lastModifiedDate":"2022-11-13"},{"lineNumber":157,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":158,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":159,"author":{"gitId":"Anyerxkp"},"content":"### Mark Task as Completed: `done` or `not done`","lastModifiedDate":"2022-11-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"Anyerxkp"},"content":"This command marks a task as done. The `\u003cINDEX\u003e` here refers to the index of the task which you can","lastModifiedDate":"2022-11-13"},{"lineNumber":162,"author":{"gitId":"Anyerxkp"},"content":"see from the output of `list` command. Take note that all indices are **positive integers**, i.e.","lastModifiedDate":"2022-11-13"},{"lineNumber":163,"author":{"gitId":"Anyerxkp"},"content":"all `\u003e0`. Please take note that this index is a relative one, and the index for a specific task can","lastModifiedDate":"2022-11-13"},{"lineNumber":164,"author":{"gitId":"Anyerxkp"},"content":"change when you delete a task in front of it. See the explanation for `delete` command below.","lastModifiedDate":"2022-11-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"Anyerxkp"},"content":"Format: `done \u003cINDEX\u003e / unmark \u003cINDEX\u003e`","lastModifiedDate":"2022-11-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":169,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":170,"author":{"gitId":"Anyerxkp"},"content":"done 1","lastModifiedDate":"2022-11-13"},{"lineNumber":171,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":172,"author":{"gitId":"Anyerxkp"},"content":"        Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-11-13"},{"lineNumber":173,"author":{"gitId":"Anyerxkp"},"content":"                [T][✓][#] Buy food","lastModifiedDate":"2022-11-13"},{"lineNumber":174,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":175,"author":{"gitId":"Anyerxkp"},"content":"done 3","lastModifiedDate":"2022-11-13"},{"lineNumber":176,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":177,"author":{"gitId":"Anyerxkp"},"content":"        Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-11-13"},{"lineNumber":178,"author":{"gitId":"Anyerxkp"},"content":"                [D][✓][#] prepare for exam (by: Jun-08-2022 11:15)","lastModifiedDate":"2022-11-13"},{"lineNumber":179,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":180,"author":{"gitId":"Anyerxkp"},"content":"unmark 3","lastModifiedDate":"2022-11-13"},{"lineNumber":181,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":182,"author":{"gitId":"Anyerxkp"},"content":"        Nice! I\u0027ve marked this task as not done:","lastModifiedDate":"2022-11-13"},{"lineNumber":183,"author":{"gitId":"Anyerxkp"},"content":"                [D][✘][#] prepare for exam (by: Jun-08-2022 11:15)","lastModifiedDate":"2022-11-13"},{"lineNumber":184,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":185,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":186,"author":{"gitId":"Anyerxkp"},"content":"### Delete Task: `delete`","lastModifiedDate":"2022-11-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"Anyerxkp"},"content":"This command deletes a task from the list. A deletion action is irreversible so think twice before you","lastModifiedDate":"2022-11-13"},{"lineNumber":189,"author":{"gitId":"Anyerxkp"},"content":"use this command. Similar to `done`, the `\u003cINDEX\u003e` is a positive integer.","lastModifiedDate":"2022-11-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"Anyerxkp"},"content":"A deletion action can cause indices of the tasks in the list to change, since these indices are relative.","lastModifiedDate":"2022-11-13"},{"lineNumber":192,"author":{"gitId":"Anyerxkp"},"content":"For example, there are two task **A** and **B** and they have indices of 1 and 2 respectively. After you","lastModifiedDate":"2022-11-13"},{"lineNumber":193,"author":{"gitId":"Anyerxkp"},"content":"delete **A**, the slot of index 1 is empty, so **B** becomes 1 in the new list. If there is anything behind","lastModifiedDate":"2022-11-13"},{"lineNumber":194,"author":{"gitId":"Anyerxkp"},"content":"**B**, their indices will deduct 1 as well. Sample I/O also illustrates this: deleting index 5 consecutively","lastModifiedDate":"2022-11-13"},{"lineNumber":195,"author":{"gitId":"Anyerxkp"},"content":"deletes two different tasks (which are 5 and 6 in the original list).","lastModifiedDate":"2022-11-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"Anyerxkp"},"content":"Format: `delete \u003cINDEX\u003e`","lastModifiedDate":"2022-11-13"},{"lineNumber":198,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":199,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":200,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":201,"author":{"gitId":"Anyerxkp"},"content":"delete 3","lastModifiedDate":"2022-11-13"},{"lineNumber":202,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":203,"author":{"gitId":"Anyerxkp"},"content":"        Sure! I\u0027ve removed this task:","lastModifiedDate":"2022-11-13"},{"lineNumber":204,"author":{"gitId":"Anyerxkp"},"content":"                [D][✘][#] prepare for exam (by: Jun-08-2022 11:15)","lastModifiedDate":"2022-11-13"},{"lineNumber":205,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":206,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":207,"author":{"gitId":"Anyerxkp"},"content":"### Delete Task: `tag`","lastModifiedDate":"2022-11-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":209,"author":{"gitId":"Anyerxkp"},"content":"This command deletes a task from the list. A deletion action is irreversible so think twice before you","lastModifiedDate":"2022-11-13"},{"lineNumber":210,"author":{"gitId":"Anyerxkp"},"content":"use this command. Similar to `done`, the `\u003cINDEX\u003e` is a positive integer.","lastModifiedDate":"2022-11-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":212,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":213,"author":{"gitId":"Anyerxkp"},"content":"Format: `tag \u003cINDEX\u003e /tag \u003cDESCRIPTION\u003e`","lastModifiedDate":"2022-11-13"},{"lineNumber":214,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":215,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":216,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":217,"author":{"gitId":"Anyerxkp"},"content":"tag 1 /tag fun","lastModifiedDate":"2022-11-13"},{"lineNumber":218,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":219,"author":{"gitId":"Anyerxkp"},"content":"        Nice! I\u0027ve add tag to this task:","lastModifiedDate":"2022-11-13"},{"lineNumber":220,"author":{"gitId":"Anyerxkp"},"content":"                [T][✘][#fun] buy food ","lastModifiedDate":"2022-11-13"},{"lineNumber":221,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":223,"author":{"gitId":"Anyerxkp"},"content":"### Find Task Based on Description: `find`","lastModifiedDate":"2022-11-13"},{"lineNumber":224,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":225,"author":{"gitId":"Anyerxkp"},"content":"This command finds tasks based on their description. It will print out a new list of the all","lastModifiedDate":"2022-11-13"},{"lineNumber":226,"author":{"gitId":"Anyerxkp"},"content":"the tasks having description containing this subtext.","lastModifiedDate":"2022-11-13"},{"lineNumber":227,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":228,"author":{"gitId":"Anyerxkp"},"content":"\u003e **Note: the index print out here cannot be used for commands of `delete` and `done`. Please","lastModifiedDate":"2022-11-13"},{"lineNumber":229,"author":{"gitId":"Anyerxkp"},"content":"\u003e use the index printout in the full list (`list`) for those two commands!**","lastModifiedDate":"2022-11-13"},{"lineNumber":230,"author":{"gitId":"Anyerxkp"},"content":"Format: `find \u003cDESCRIPTION SUBTEXT\u003e`","lastModifiedDate":"2022-11-13"},{"lineNumber":231,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":232,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":234,"author":{"gitId":"Anyerxkp"},"content":"find buy","lastModifiedDate":"2022-11-13"},{"lineNumber":235,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":236,"author":{"gitId":"Anyerxkp"},"content":"        Here are the tasks in your list related to \u0027buy\u0027:","lastModifiedDate":"2022-11-13"},{"lineNumber":237,"author":{"gitId":"Anyerxkp"},"content":"        1.      [T][✘][#] buy food","lastModifiedDate":"2022-11-13"},{"lineNumber":238,"author":{"gitId":"Anyerxkp"},"content":"        2.      [T][✘][#] buy drinks","lastModifiedDate":"2022-11-13"},{"lineNumber":239,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":240,"author":{"gitId":"Anyerxkp"},"content":"find food","lastModifiedDate":"2022-11-13"},{"lineNumber":241,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":242,"author":{"gitId":"Anyerxkp"},"content":"        Here are the tasks in your list related to \u0027food\u0027:","lastModifiedDate":"2022-11-13"},{"lineNumber":243,"author":{"gitId":"Anyerxkp"},"content":"        1.      [T][✘][#] buy food","lastModifiedDate":"2022-11-13"},{"lineNumber":244,"author":{"gitId":"Anyerxkp"},"content":"        2.      [E][✘][#] food sales  (at: May-15-2022 12:00 - May-20-2022 20:00)","lastModifiedDate":"2022-11-13"},{"lineNumber":245,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":246,"author":{"gitId":"Anyerxkp"},"content":"find some unknown terms","lastModifiedDate":"2022-11-13"},{"lineNumber":247,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":248,"author":{"gitId":"Anyerxkp"},"content":"        You don\u0027t have a task in your list related to \u0027some unknown terms\u0027!","lastModifiedDate":"2022-11-13"},{"lineNumber":249,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":250,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":251,"author":{"gitId":"Anyerxkp"},"content":"### Find Task Based on Date: `searchdate`","lastModifiedDate":"2022-11-13"},{"lineNumber":252,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":253,"author":{"gitId":"Anyerxkp"},"content":"This command searches for tasks falling on a specific date. It can be the \"at\" date of an Event,","lastModifiedDate":"2022-11-13"},{"lineNumber":254,"author":{"gitId":"Anyerxkp"},"content":"or the \"by\" date of a Deadline. Similar to `find`, this returns a new list. All ToDo tasks will","lastModifiedDate":"2022-11-13"},{"lineNumber":255,"author":{"gitId":"Anyerxkp"},"content":"be ignored and not contained in the result since they do not bear a date.","lastModifiedDate":"2022-11-13"},{"lineNumber":256,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":257,"author":{"gitId":"Anyerxkp"},"content":"\u003e **Note: the index print out here cannot be used for commands of `delete` and `done`. Please","lastModifiedDate":"2022-11-13"},{"lineNumber":258,"author":{"gitId":"Anyerxkp"},"content":"\u003e use the index printout in the full list (`list`) for those two commands!**","lastModifiedDate":"2022-11-13"},{"lineNumber":259,"author":{"gitId":"Anyerxkp"},"content":"\u003e `\u003cDATE\u003e` uses the same format as that for `event` and `deadline` commands.","lastModifiedDate":"2022-11-13"},{"lineNumber":260,"author":{"gitId":"Anyerxkp"},"content":"Format: `searchdate \u003cDATE\u003e`","lastModifiedDate":"2022-11-13"},{"lineNumber":261,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":262,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":263,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":264,"author":{"gitId":"Anyerxkp"},"content":"searchdate 2022-05-15","lastModifiedDate":"2022-11-13"},{"lineNumber":265,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":266,"author":{"gitId":"Anyerxkp"},"content":"        Here are the tasks in your list at/by 2022-05-15 12:00:","lastModifiedDate":"2022-11-13"},{"lineNumber":267,"author":{"gitId":"Anyerxkp"},"content":"        1.      [E][✘][#] food sales at supermarket (at: May-15-2022 12:00 - May-20-2022 20:00)","lastModifiedDate":"2022-11-13"},{"lineNumber":268,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":269,"author":{"gitId":"Anyerxkp"},"content":"searchdate 2021-05-05 12:00","lastModifiedDate":"2022-11-13"},{"lineNumber":270,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":271,"author":{"gitId":"Anyerxkp"},"content":"        You don\u0027t have a task in your list !","lastModifiedDate":"2022-11-13"},{"lineNumber":272,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":273,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":274,"author":{"gitId":"Anyerxkp"},"content":"### Exit Program: `bye`","lastModifiedDate":"2022-11-13"},{"lineNumber":275,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":276,"author":{"gitId":"Anyerxkp"},"content":"This command prints out a farewell message and exits the program.","lastModifiedDate":"2022-11-13"},{"lineNumber":277,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":278,"author":{"gitId":"Anyerxkp"},"content":"Format: `bye`","lastModifiedDate":"2022-11-13"},{"lineNumber":279,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":280,"author":{"gitId":"Anyerxkp"},"content":"Sample I/O:","lastModifiedDate":"2022-11-13"},{"lineNumber":281,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":282,"author":{"gitId":"Anyerxkp"},"content":"bye","lastModifiedDate":"2022-11-13"},{"lineNumber":283,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":284,"author":{"gitId":"Anyerxkp"},"content":"        Bye. Hope to see you again soon!","lastModifiedDate":"2022-11-13"},{"lineNumber":285,"author":{"gitId":"Anyerxkp"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2022-11-13"},{"lineNumber":286,"author":{"gitId":"Anyerxkp"},"content":"```","lastModifiedDate":"2022-11-13"},{"lineNumber":287,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":261,"-":26}},{"path":"src/main/java/duke/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":" * class for LocalDateTime, used for storing and formatting of dates and times","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":" * @see LocalDateTime","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"public class DateTime implements Serializable {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"    public static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    // Default datetime is \"d-M-y H:m\", e.g. 01-05-2021 12:30","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    // Store as a static member to ensure consistent representation of all objects","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    protected static String datePattern \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    protected static String timePattern \u003d \"HH:mm\";","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"     * Construct a dateTime object with a string. The string must be following the","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"     * format given in datePattern and timePattern attribute of this class.","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"     * @param dateTimeString A string contain the date (and time) to be parsed","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"    public DateTime(String dateTimeString) {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            dateTime \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"                    LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(datePattern + \" \" + timePattern));","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"            // Fail to parse a datetime - try to parse a date (without time)","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeString, DateTimeFormatter.ofPattern(datePattern));","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"            dateTime \u003d LocalDateTime.of(date, LocalTime.parse(\"00:00\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"     * Check whether this dateTime instance falls on a same date as the other dateTime instance","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"     * @param dateTime DateTime instance used for comparison","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"     * @return True for same date","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"    public Boolean isSameDate(DateTime dateTime) {","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"        return this.dateTime.toLocalDate().isEqual(dateTime.dateTime.toLocalDate());","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"     * Format this dateTime instance to a string, using format defined","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\"+ \" \" + timePattern));","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.command.Command;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":" * Main class of the program with the entry function","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"public class Duke {","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    public static final String DEFAULT_SAVE_PATH \u003d \"duke.save\";","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    public static final String SAVE_PATH \u003d \"duke.save\";","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    protected Ui ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    protected Parser parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    protected HashMap\u003cString, String\u003e arguments;","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        Storage storage \u003d new Storage(filepath);","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"            ui.printLoadSaveException(filepath, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            tasks \u003d new TaskList(storage);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"        public void run() {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            ui.printWelcome();","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"            while (true) {","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"                String fullCommand \u003d ui.read();","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"                if (fullCommand \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"                    // Reach EOF, exit the program","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"                    break;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"            ui.printLine();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"                try {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"                Command cmd \u003d parser.parse(fullCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"                cmd.execute();","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"                    if (cmd.isExit()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"                        break;","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"                    }","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"                ui.printException(e);","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"            } finally {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"                ui.printLine();","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"            ui.printLine();","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"        ui.close();","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"     * Program entry point","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"     * @param args Command line arguments provided","lastModifiedDate":"2022-11-13"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"        public static void main(String[] args) {","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"            String filepath \u003d DEFAULT_SAVE_PATH;","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"            if (args.length \u003e 0) {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"                // If additional argument is provided, take 1st argument as the save filepath","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"                filepath \u003d args[0];","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"            new Duke(filepath).run();","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"    public String getR(String fullCommand) throws InvalidInputException, SaveException, IOException, DukeException {","lastModifiedDate":"2022-11-13"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-11-13"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"            Command cmd \u003d parser.parse(fullCommand);","lastModifiedDate":"2022-11-13"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"            return cmd.executeGui();","lastModifiedDate":"2022-11-13"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"        } catch (InvalidInputException | DukeException e) {","lastModifiedDate":"2022-11-13"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-11-13"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Anyerxkp":82}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.lang.reflect.Constructor;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.command.Command;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":" * Parser for parsing the line of command to tokens and construct the command class","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"public class Parser {","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    // Delimiter for tokenization is a single whitespace","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    public static final String DELIMITER \u003d \" \";","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    protected Ui ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"     * Constructor of the Parser class","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"     * @param ui Ui instance that will be passed to the command instances","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"     * @param tasks TaskList instance will be passed to the command instances","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    public Parser(Ui ui, TaskList tasks) {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"     * Parse a line of command, put it into a hash map, then construct a command instance","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"     * Segments are splitted by \u0027/\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"     * Example: commandX some_description /optY Y_description Y_description_1 /optZ Z_description","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"     * Output argument hashmap:","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"     * |   key   |             value             |","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"     * |---------|-------------------------------|","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"     * | command | commandX                      |","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"     * | optY    | Y_description Y_description_1 |","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"     *","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"     * Then, ui, tasks and this argument hashmap will be passed to initialize a command class.","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"     *","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"     * The command class is determined by the 1st token of the command string. For example, for a command string \u0027find\u0027,","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"     * command class \u0027duke.command.FindCommand\u0027 will be initialized.","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"     * @param fullCommand The line of command to be parsed","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"     * @return A Command instance which is ready to be executed","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"     * @throws InvalidInputException This is thrown when command cannot be recognized (respective Command class cannot","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"     * be constructed)","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"     * @see Command","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"    public Command parse(String fullCommand) throws InvalidInputException {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"        HashMap\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"        String[] tokens \u003d fullCommand.split(\"\\\\s+\");","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"        // If first token (command) is empty, there are empty spaces typed in at the front - so we remove it","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"        if (tokens[0].isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"            tokens \u003d Arrays.copyOfRange(tokens, 1, tokens.length);","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"        if (tokens.length \u003d\u003d 0) {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"        arguments.put(\"command\", tokens[0]);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"        // Default key is \"payload\"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"        String key \u003d \"payload\";","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"        ArrayList\u003cString\u003e values \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"        for (int i \u003d 1; i \u003c tokens.length; ++i) {","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"            // Check whether this token is a new key","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"            if (tokens[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"                // If it is, save current value into the map and start a new k-v pair","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"                arguments.put(key, String.join(DELIMITER, values));","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"                key \u003d tokens[i].substring(1);","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"                values.clear();","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"            else {","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"                // If not, append this token to the end of the value","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"                values.add(tokens[i]);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"        // Store the last k-v pair","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"        if (!values.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"            arguments.put(key, String.join(DELIMITER, values));","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"Anyerxkp"},"content":"        // Initialize a respective class from the command (by capitalize first character)","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"        String className \u003d tokens[0] + \"Command\";","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"        className \u003d className.substring(0, 1).toUpperCase() + className.substring(1);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"Anyerxkp"},"content":"        className \u003d \"duke.command.\" + className;","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"Anyerxkp"},"content":"            Class\u003c?\u003e cls \u003d Class.forName(className);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"Anyerxkp"},"content":"            Constructor\u003c?\u003e constructor \u003d cls.getDeclaredConstructor(Ui.class, TaskList.class, HashMap.class);","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"Anyerxkp"},"content":"            Object obj \u003d constructor.newInstance(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"Anyerxkp"},"content":"            return (Command) obj;","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"Anyerxkp"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"Anyerxkp"},"content":"            // If any exception thrown above, it means the command is not formatted properly","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.UNKNOWN_COMMAND, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":99}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException.SaveExceptionType;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":" * Storage class for handling the loading and writing of local save file","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"public class Storage {","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    protected String filepath;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"     * Load a task list from the save file","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"     * @return The task list loaded from the file","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"     * @throws IOException This is thrown when object reading encounters an error","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"     * @throws SaveException This is thrown when save file is missing, or a task list cannot be retrieved","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"    protected TaskList load() throws IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"        TaskList tasks \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        FileInputStream fs \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"        ObjectInputStream os \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            fs \u003d new FileInputStream(this.filepath);","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"            os \u003d new ObjectInputStream(fs);","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"            Object obj \u003d os.readObject();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"            if (obj instanceof TaskList) {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"                tasks \u003d (TaskList) obj;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"                tasks.setStorage(this);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"            } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"                throw new SaveException(SaveExceptionType.INVALID_SAVE);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"            throw new SaveException(SaveExceptionType.NO_SAVE, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"            throw new SaveException(SaveExceptionType.INVALID_SAVE, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"        } finally {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            // Close all open file and object handles","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"            if (os !\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"                os.close();","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"            if (fs !\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"                fs.close();","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"        return tasks;","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"     * Save the task list to the save file","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"     * @param tasks Task list to be saved","lastModifiedDate":"2022-11-13"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"     * @throws IOException This is thrown when object writing encounters an error","lastModifiedDate":"2022-11-13"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"     * @throws SaveException This is thrown when being failed to open the save file","lastModifiedDate":"2022-11-13"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"    protected void save(TaskList tasks) throws IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"        FileOutputStream fs \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"        ObjectOutputStream os \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"            fs \u003d new FileOutputStream(this.filepath);","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"            os \u003d new ObjectOutputStream(fs);","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"            // Nullify storage attribute before saving","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"            tasks.setStorage(null);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"            os.writeObject(tasks);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"            tasks.setStorage(this);","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"            // Thrown by `new FileOutputStream`, usually when `file` is a folder or cannot be created","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"            throw new SaveException(SaveExceptionType.INVALID_PATH);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"        } finally {","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"            // Close all open file and object handles","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"            if (os !\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"                os.close();","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"            if (fs !\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"Anyerxkp"},"content":"                fs.close();","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":89}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Vector;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":" * A collection class for storing the list of tasks.","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":" * The entire task list will be automatically saved when there are any changes.","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"public class TaskList extends Vector\u003cTask\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"    public static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    protected Storage storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"     * Constructor of the task list, set storage handler to null","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    public TaskList() {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"        this(null);","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"     * Constructor of the task list","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"     * @param storage The storage handler which will be used whenever the list is changed","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"        super();","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        setStorage(storage);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"     * Setter for the storage attribute","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"     * @param storage The storage handler to be used for replacing the current attribute","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"     * If the storage handler is not null, save the list to local file","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"     * @throws IOException This is thrown when object writing encounters an error","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"     * @throws SaveException This is thrown when being failed to open the save file","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"    protected void save() throws IOException, SaveException {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            storage.save(this);","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"     * Add a task to the list, save on completion","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"     * @param task Task to be added","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"     * @throws IOException This is thrown when object writing encounters an error","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"     * @throws SaveException This is thrown when being failed to open the save file","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"    public void addTask(Task task) throws IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"        super.add(task);","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"        save();","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"    public void tagTask(int index , Task task) throws IOException, SaveException {","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"        super.add(index , task);","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"        save();","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"     * Replace a task in the list, save on completion","lastModifiedDate":"2022-11-13"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"     * @param index Index of the task to be replaced, start at 0","lastModifiedDate":"2022-11-13"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"     * @param task Task to be used for replacement","lastModifiedDate":"2022-11-13"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"     * @throws IOException This is thrown when object writing encounters an error","lastModifiedDate":"2022-11-13"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"     * @throws SaveException This is thrown when being failed to open the save file","lastModifiedDate":"2022-11-13"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"    public void setTask(int index, Task task) throws IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"        super.set(index, task);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"        save();","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"     * Delete a task in the list and return it for the last time, save on completion","lastModifiedDate":"2022-11-13"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"     * @param index Index of the task to be deleted, start at 0","lastModifiedDate":"2022-11-13"},{"lineNumber":83,"author":{"gitId":"Anyerxkp"},"content":"     * @return The deleted task","lastModifiedDate":"2022-11-13"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"     * @throws IOException This is thrown when object writing encounters an error","lastModifiedDate":"2022-11-13"},{"lineNumber":85,"author":{"gitId":"Anyerxkp"},"content":"     * @throws SaveException This is thrown when being failed to open the save file","lastModifiedDate":"2022-11-13"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"    public Task deleteTask(int index) throws IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"Anyerxkp"},"content":"        Task task \u003d super.remove(index);","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"        save();","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"Anyerxkp"},"content":"        return task;","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":92}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":" * This Ui class handles all user input/output and has the necessary formatting functionality.","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":" * It should be closed properly at the end of the program using close().","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"public class Ui implements AutoCloseable {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"    public static final String LONG_LINE \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"    // Default indentation is 8 whitespaces","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"    public static final char DEFAULT_INDENT_CHARACTER \u003d \u0027\\t\u0027;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"    public static final int DEFAULT_INDENT_COUNT \u003d 1;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"    // Used for internal 2nd-level indentation (e.g. print task)","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"    public static final String INTERNAL_INDENT \u003d \"\\t\";","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    protected String indent;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    protected Scanner scanner;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"     * Constructor of Ui class","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"     * When no arguments are supplied, default indent and locale setting are used","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    public Ui() {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        this(DEFAULT_INDENT_CHARACTER, DEFAULT_INDENT_COUNT);","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"     * Constructor of Ui class","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"     * @param indentCharacter The specific character for indentation","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"     * @param indentCount Number of `indentCharacter` to be used for indentation","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"    public Ui(char indentCharacter, int indentCount) {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"        indent \u003d new String(new char[indentCount]).replace(\u0027\\0\u0027, indentCharacter);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"     * Close the scanner instance initialized in constructor","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"    public void close() {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"        scanner.close();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"        scanner \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"     * Welcome text for the Gui","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"        return \"Hello! I\u0027m Anyer\\nWhat can I do for you?\";","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"     * Read a line (delimited by EOL characters)","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"     * @return the line in the format of a string","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"    public String read() {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"        if (scanner \u003d\u003d null || !scanner.hasNextLine()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"            return null;","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"    public void print(String text) {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"        String[] lines \u003d text.split(\"\\n\");","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"            System.out.println(indent + line);","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"     * Print a message for a successful insertion of task","lastModifiedDate":"2022-11-13"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"    // Print a message for a successful insertion of task","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"    public void printNewTask(TaskList tasks) {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"        print(","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"                \"Great. We added a new task:\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"                        + INTERNAL_INDENT + tasks.get(size - 1) + \"\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"                        + String.format(\"You have in total %d tasks\", size)","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"        );","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"     * Print out an ordinary task list (with no additional information)","lastModifiedDate":"2022-11-13"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"     * @param tasks The task list to be printed","lastModifiedDate":"2022-11-13"},{"lineNumber":88,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"    public void printTaskList(TaskList tasks) {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"Anyerxkp"},"content":"        printTaskList(tasks, null);","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":94,"author":{"gitId":"Anyerxkp"},"content":"     * Print out a task list, showing the at/by time specified","lastModifiedDate":"2022-11-13"},{"lineNumber":95,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":96,"author":{"gitId":"Anyerxkp"},"content":"    public void printTaskList(TaskList tasks, DateTime dateTime) {","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"Anyerxkp"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"Anyerxkp"},"content":"            print(\"You don\u0027t have a task in your list!\");","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"Anyerxkp"},"content":"            return;","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"Anyerxkp"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"Anyerxkp"},"content":"            print(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"Anyerxkp"},"content":"            print(\"Here are the tasks in your list at/by \" + dateTime);","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"Anyerxkp"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"Anyerxkp"},"content":"            print(String.format(\"%d.%s%s\", i + 1, INTERNAL_INDENT, tasks.get(i)));","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":112,"author":{"gitId":"Anyerxkp"},"content":"     * Print a long horizontal line","lastModifiedDate":"2022-11-13"},{"lineNumber":113,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":114,"author":{"gitId":"Anyerxkp"},"content":"    public void printLine() {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"Anyerxkp"},"content":"        print(LONG_LINE);","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":119,"author":{"gitId":"Anyerxkp"},"content":"     * Print an exception related to save-file loading exception","lastModifiedDate":"2022-11-13"},{"lineNumber":120,"author":{"gitId":"Anyerxkp"},"content":"     * @param filepath Path of the save-file","lastModifiedDate":"2022-11-13"},{"lineNumber":121,"author":{"gitId":"Anyerxkp"},"content":"     * @param e The exception object","lastModifiedDate":"2022-11-13"},{"lineNumber":122,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":123,"author":{"gitId":"Anyerxkp"},"content":"    public void printLoadSaveException(String filepath, Exception e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"Anyerxkp"},"content":"        printException(e);","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"Anyerxkp"},"content":"        print(","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"Anyerxkp"},"content":"                \"Got a problem when loading save file at \\\u0027\" + filepath + \"\\\u0027.\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"Anyerxkp"},"content":"                        + \"An empty list will be used instead!\"","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"Anyerxkp"},"content":"        );","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"Anyerxkp"},"content":"        printLine();","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"Anyerxkp"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"Anyerxkp"},"content":"        print(\"Oops! \" + e.getMessage());","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":136,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":137,"author":{"gitId":"Anyerxkp"},"content":"     * Print a welcome message","lastModifiedDate":"2022-11-13"},{"lineNumber":138,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":139,"author":{"gitId":"Anyerxkp"},"content":"    public void printWelcome() {","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"Anyerxkp"},"content":"        String logo \u003d","lastModifiedDate":"2022-11-09"},{"lineNumber":141,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-09"},{"lineNumber":142,"author":{"gitId":"Anyerxkp"},"content":"                \"     ___  _   ___   _____________ \\n\" +","lastModifiedDate":"2022-11-09"},{"lineNumber":143,"author":{"gitId":"Anyerxkp"},"content":"                \"    / _ \\\\| \\\\ | \\\\ \\\\ / |  ___| ___ \\\\\\n\" +","lastModifiedDate":"2022-11-09"},{"lineNumber":144,"author":{"gitId":"Anyerxkp"},"content":"                \"   / /_\\\\ |  \\\\| |\\\\ V /| |__ | |_/ /\\n\" +","lastModifiedDate":"2022-11-09"},{"lineNumber":145,"author":{"gitId":"Anyerxkp"},"content":"                \"   |  _  | . ` | \\\\ / |  __||    / \\n\" +","lastModifiedDate":"2022-11-09"},{"lineNumber":146,"author":{"gitId":"Anyerxkp"},"content":"                \"   | | | | |\\\\  | | | | |___| |\\\\ \\\\ \\n\" +","lastModifiedDate":"2022-11-09"},{"lineNumber":147,"author":{"gitId":"Anyerxkp"},"content":"                \"   \\\\_| |_\\\\_| \\\\_/ \\\\_/ \\\\____/\\\\_| \\\\_|\";","lastModifiedDate":"2022-11-09"},{"lineNumber":148,"author":{"gitId":"Anyerxkp"},"content":"        System.out.println( logo);","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"Anyerxkp"},"content":"        print(","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"Anyerxkp"},"content":"                \"Hello! I\u0027m Anyer.\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"Anyerxkp"},"content":"                 + \"What can I do for you?\\n\"","lastModifiedDate":"2022-11-13"},{"lineNumber":152,"author":{"gitId":"Anyerxkp"},"content":"                + \"When input a deadlinedate (\u0026 time), please use format like /by \u00272022-01-20 23:59\u0027.\\n\"","lastModifiedDate":"2022-11-13"},{"lineNumber":153,"author":{"gitId":"Anyerxkp"},"content":"                +\"When input a eventdate (\u0026 time), please use format like /at \u00272022-01-20 23:59\u0027 /to \u00272022-01-20 23:59\u0027.\"","lastModifiedDate":"2022-11-13"},{"lineNumber":154,"author":{"gitId":"Anyerxkp"},"content":"        );","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"Anyerxkp"},"content":"        printLine();","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"Anyerxkp"},"content":"    public void printGoodbye() {","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"Anyerxkp"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":161}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":" * Print out a bye message and do necessary clean up","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"    public ByeCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"        ui.printGoodbye();","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws DukeException, InvalidInputException {","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.Storage;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":" * class of all the commands, providing necessary interfaces and methods for implementation","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"public abstract class Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    protected Ui ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    protected HashMap\u003cString, String\u003e arguments;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    protected Boolean isExit \u003d false;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    public Command(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"    public Boolean isExit() {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        return this.isExit;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"    public abstract void execute() throws InvalidInputException, IOException, SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"    public abstract String executeGui() throws DukeException, InvalidInputException, SaveException, IOException;","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":35}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Storage;","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"import duke.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":" * Insert a deadline task into the task list","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    public DeadlineCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        String by \u003d arguments.get(\"by\");","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        if (by \u003d\u003d null || by.length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            // Either /at is not found at all, or no dates are following /at","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_BY_DATE);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            tasks.addTask(new Deadline(arguments.get(\"payload\"), new DateTime(by)));","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"            ui.printNewTask(tasks);","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.MALFORMED_DATE);","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws DukeException, InvalidInputException {","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"        String by \u003d arguments.get(\"by\");","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"        if (by \u003d\u003d null || by.length() \u003d\u003d 0) {","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"            // Either /at is not found at all, or no dates are following /at","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_BY_DATE);","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            tasks.addTask(new Deadline(arguments.get(\"payload\"), new DateTime(by)));","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"        } catch (DateTimeParseException | IOException | SaveException e) {","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.MALFORMED_DATE);","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"        return \"ok! I\u0027ve add this task with deadline\";","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":55}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":" * Delete a task from the task list","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    public DeleteCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        String indexString \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        if (indexString \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            // An index must be provided for the task to be marked \"done\"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"                int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"                if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"                    // This index is out of the boundary of our database","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"                    throw new InvalidInputException(InputExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"                Task task \u003d tasks.deleteTask(index - 1);","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"                ui.print(\"Sure! I\u0027ve removed this task:\");","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"                ui.print(\"\\t\" + task);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"                throw new InvalidInputException(InputExceptionType.NOT_INTEGER, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"        String indexString \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"        if (indexString \u003d\u003d null) {","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            // An index must be provided for the task to be marked \"done\"","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_INDEX);","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"                int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"                if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"                    // This index is out of the boundary of our database","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"                    throw new InvalidInputException(InputExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"                Task task \u003d tasks.deleteTask(index - 1);","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"                throw new InvalidInputException(InputExceptionType.NOT_INTEGER, e);","lastModifiedDate":"2022-11-13"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-11-13"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"        return \"Sure! I\u0027ve removed this task\";","lastModifiedDate":"2022-11-13"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":66}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":" * Mark a task in the task list as done","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    public DoneCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        String indexString \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        if (indexString \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            // An index must be provided for the task to be marked \"done\"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"                int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"                if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"                    // This index is out of the boundary of our database","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"                    throw new InvalidInputException(InputExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"                Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"                task.markAsDone();","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"                tasks.setTask(index - 1, task);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"                ui.print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"                ui.print(\"\\t\" + task);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"                throw new InvalidInputException(InputExceptionType.NOT_INTEGER, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"        String indexString \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"        if (indexString \u003d\u003d null) {","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"            // An index must be provided for the task to be marked \"done\"","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_INDEX);","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"                int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"                if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"                    // This index is out of the boundary of our database","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"                    throw new InvalidInputException(InputExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"                Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-11-13"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"                task.markAsDone();","lastModifiedDate":"2022-11-13"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"                tasks.setTask(index - 1, task);","lastModifiedDate":"2022-11-13"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-11-13"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"                throw new InvalidInputException(InputExceptionType.NOT_INTEGER, e);","lastModifiedDate":"2022-11-13"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-11-13"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"        return \"Nice! I\u0027ve marked this task as done\";","lastModifiedDate":"2022-11-13"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":72}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Event;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"import duke.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":" * Add an event task into the task list","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    public EventCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"        String at \u003d arguments.get(\"at\");","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"        String to \u003d arguments.get(\"to\");","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        if (at \u003d\u003d null || at.length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            // Either /at is not found at all, or no dates are following /at","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_AT_DATE);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"            tasks.addTask(new Event(arguments.get(\"payload\"), new DateTime(at),new DateTime(to)));","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            ui.printNewTask(tasks);","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.MALFORMED_DATE);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"        String at \u003d arguments.get(\"at\");","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"        String to \u003d arguments.get(\"to\");","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"        if (at \u003d\u003d null || at.length() \u003d\u003d 0) {","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"            // Either /at is not found at all, or no dates are following /at","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_AT_DATE);","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            tasks.addTask(new Event(arguments.get(\"payload\"), new DateTime(at),new DateTime(to)));","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.MALFORMED_DATE);","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"        return \"nice,I have added this event with at\";","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":55}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":" * Find a task in the tasklist","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    public FindCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        String needle \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        if (needle.length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_DESCRIPTION);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        TaskList result \u003d new TaskList(null);","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            if (task.toString().contains(needle)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"                result.add(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"        ui.printTaskList(result);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"        String needle \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"        TaskList result \u003d new TaskList(null);","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"        String text \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"            if (task.toString().contains(needle)) {","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"                result.add(task);","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"        ui.printTaskList(result);","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"        for (int i \u003d 0; i \u003c result.size(); i++) {","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"            text +\u003d i+1 + \".\" + result.get(i) +\"\\n\";","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"        return text;","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"Anyerxkp":55}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Objects;","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import static duke.Ui.INTERNAL_INDENT;","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":" * Print out everything in the list, index starts from 1","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    public ListCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        ui.printTaskList(tasks);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"        String text \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"            text +\u003d i+1 + \".\" + tasks.get(i) +\"\\n\";","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"        return text ;","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":36}},{"path":"src/main/java/duke/command/SearchdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.DateTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":" * Find tasks at a specific date and print out the list","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"public class SearchdateCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    public SearchdateCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        String payload \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        if (payload.length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            // Didn\u0027t input a date for parse","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_SEARCH_DATE);","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            DateTime dateTime \u003d new DateTime(payload);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"            TaskList result \u003d new TaskList(null);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"                if (task.isSameDate(dateTime)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"                    result.add(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"            ui.printTaskList(result, dateTime);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.MALFORMED_DATE, e);","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws DukeException, InvalidInputException {","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"        return null;","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"Anyerxkp":47}},{"path":"src/main/java/duke/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Tag;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":" * Create a tag task and add it to the list","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    public TagCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        String tag \u003d arguments.get(\"tag\");","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"        String indexString \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"        int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        if (tag \u003d\u003d null || tag.length() \u003d\u003d 0) {","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            // Either /at is not found at all, or no dates are following /at","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_AT_DATE);","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"        new Tag(tag);","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"        task.tagD();","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"        tasks.setTask(index-1,task);","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"        tasks.get(index-1);","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"        ui.print(\"Nice! I\u0027ve add tag to this task:\");","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"        ui.print(\"\\t\" + task);","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"        String tag \u003d arguments.get(\"tag\");","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"        String indexString \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"        int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"        if (tag \u003d\u003d null || tag.length() \u003d\u003d 0) {","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            // Either /at is not found at all, or no dates are following /at","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.NO_AT_DATE);","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"        new Tag(tag);","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"        task.tagD();","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"        tasks.setTask(index-1,task);","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"        tasks.get(index-1);","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"        return \"nice I have tag this task \";","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"Anyerxkp":61}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":" * Create a todo task and add it to the list","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    public TodoCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        tasks.addTask(new ToDo(arguments.get(\"payload\")));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"        ui.printNewTask(tasks);","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws DukeException, InvalidInputException, SaveException, IOException {","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        tasks.addTask(new ToDo(arguments.get(\"payload\")));","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"        Task task \u003d tasks.get(tasks.size()-1);","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"        return String.format(\"Got it. I\u0027ve added this task\" + task);","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":37}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.command;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":" * unMark a task in the task list as not done","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    public UnmarkCommand(Ui ui, TaskList tasks, HashMap\u003cString, String\u003e arguments) {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        super(ui, tasks, arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    public void execute() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        String indexString \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        if (indexString \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"            // An index must be provided for the task to be marked \"done\"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"                int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"                if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"                    // This index is out of the boundary of our database","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"                    throw new InvalidInputException(InputExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"                Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"                task.markAsnotDone();","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"                tasks.setTask(index - 1, task);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"                ui.print(\"Nice! I\u0027ve marked this task as ndone:\");","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"                ui.print(\"\\t\" + task);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"                throw new InvalidInputException(InputExceptionType.NOT_INTEGER, e);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"    public String executeGui() throws InvalidInputException, IOException, SaveException {","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"        String indexString \u003d arguments.get(\"payload\");","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"        if (indexString \u003d\u003d null) {","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"            // An index must be provided for the task to be marked \"done\"","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_INDEX);","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"        } else {","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"            try {","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"                int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"                if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"                    // This index is out of the boundary of our database","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"                    throw new InvalidInputException(InputExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"                Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-11-13"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"                task.markAsnotDone();","lastModifiedDate":"2022-11-13"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"                tasks.setTask(index - 1, task);","lastModifiedDate":"2022-11-13"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-11-13"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"                throw new InvalidInputException(InputExceptionType.NOT_INTEGER, e);","lastModifiedDate":"2022-11-13"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"            }","lastModifiedDate":"2022-11-13"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"        return \"Nice! I\u0027ve marked this task as not done\";","lastModifiedDate":"2022-11-13"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":72}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.exception;","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"        super(message);","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":7}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.exception;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":" * Exception to be thrown when there is a problem to parse the user-input command","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"@SuppressWarnings(\"serial\")","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"    public static enum InputExceptionType {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"        UNKNOWN_COMMAND,","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"        EMPTY_DESCRIPTION,","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"        EMPTY_INDEX,","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"        NO_SEARCH_DATE,","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"        NO_BY_DATE,","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"        NO_AT_DATE,","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"        NOT_INTEGER,","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"        MALFORMED_DATE,","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"        INDEX_OUT_OF_BOUND","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    public InvalidInputException(InputExceptionType inputType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"        this(inputType, null);","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    public InvalidInputException(InputExceptionType inputType, Throwable err) {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        super(getDescription(inputType), err);","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"    public static String getDescription(InputExceptionType inputType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        switch (inputType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            case UNKNOWN_COMMAND:","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"                return \"Command given is not recognized as a valid one.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"            case EMPTY_DESCRIPTION:","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"                return \"You will need to provide a description.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            case EMPTY_INDEX:","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"                return \"An integer index must follow the command\";","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"            case NO_SEARCH_DATE:","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"                return \"You must specify a date after searchdate command.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"            case NO_BY_DATE:","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"                return \"You must specify a deadline date following /by keyword.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"            case NO_AT_DATE:","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"                return \"You must specify an event date following /at keyword.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"            case MALFORMED_DATE:","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"                return \"Date (and time) specified cannot be parsed.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"            case NOT_INTEGER:","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"                return \"Only integer is accepted as the argument.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"            case INDEX_OUT_OF_BOUND:","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"                return \"We don\u0027t have an existing entry with this index.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            default:","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"                return \"This type of invalid input is not recognized.\";","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Anyerxkp":53}},{"path":"src/main/java/duke/exception/SaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.exception;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":" * Exception to be thrown when a problem is encountered during save file loading/saving process","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"@SuppressWarnings(\"serial\")","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"public class SaveException extends Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"    public static enum SaveExceptionType {","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"        NO_SAVE,","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"        INVALID_SAVE,","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"        INVALID_PATH","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"    public SaveException(SaveExceptionType saveType) {","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"        this(saveType, null);","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    public SaveException(SaveExceptionType saveType, Throwable err) {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"        super(getDescription(saveType), err);","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"    public static String getDescription(SaveExceptionType saveType) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        switch (saveType) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"            case NO_SAVE:","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"                return \"No save file is found at the given path.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"            case INVALID_SAVE:","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"                return \"The save file looks invalid - we cannot recover a list from it.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            case INVALID_PATH:","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"                return \"Save file at the path specified cannot be created or overwritten.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"            default:","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"                return \"This type of invalid input is not recognized.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Anyerxkp":35}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.gui;","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import java.io.File;","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a Text","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"    @FXML","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"    private Text dialog;","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"    @FXML","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"    private static final Paint PALE_BLUE \u003d Color.rgb(187,210, 240);","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"    private static final Paint PALE_PINK \u003d Color.rgb(240,187, 231);","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"    private static final CornerRadii ROUND_CORNER \u003d new CornerRadii(10);","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"    private static final Insets USER_DIALOG_INSETS \u003d new Insets(0,35,5,10);","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"    private static final Insets DUKE_DIALOG_INSETS \u003d new Insets(0,5,5,35);","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"            assert new File(\"src/main/resources/view/DialogBox.fxml\").exists() : \"DialogBox.fxml not found\";","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-11-13"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"    private void flip() {","lastModifiedDate":"2022-11-13"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-11-13"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-11-13"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-11-13"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2022-11-13"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"     * Creates a dialog box that contains the user\u0027s instruction.","lastModifiedDate":"2022-11-13"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"     *","lastModifiedDate":"2022-11-13"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"     * @param text A string that represents the user\u0027s instruction.","lastModifiedDate":"2022-11-13"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"     * @param img An image that represents the user.","lastModifiedDate":"2022-11-13"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"     * @return A dialog box that contains the user\u0027s instruction.","lastModifiedDate":"2022-11-13"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-11-13"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"        String indentation \u003d String.format(\"%33s\", \"\");","lastModifiedDate":"2022-11-13"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"        DialogBox userDialog \u003d  new DialogBox(indentation + text, img);","lastModifiedDate":"2022-11-13"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"        userDialog.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2022-11-13"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"                PALE_BLUE,","lastModifiedDate":"2022-11-13"},{"lineNumber":83,"author":{"gitId":"Anyerxkp"},"content":"                ROUND_CORNER,","lastModifiedDate":"2022-11-13"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"                USER_DIALOG_INSETS)));","lastModifiedDate":"2022-11-13"},{"lineNumber":85,"author":{"gitId":"Anyerxkp"},"content":"        return userDialog;","lastModifiedDate":"2022-11-13"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":88,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"     * Creates a dialog box that contains Duke\u0027s reply to an instruction.","lastModifiedDate":"2022-11-13"},{"lineNumber":90,"author":{"gitId":"Anyerxkp"},"content":"     *","lastModifiedDate":"2022-11-13"},{"lineNumber":91,"author":{"gitId":"Anyerxkp"},"content":"     * @param text A string that represents Duke\u0027s reply.","lastModifiedDate":"2022-11-13"},{"lineNumber":92,"author":{"gitId":"Anyerxkp"},"content":"     * @param img An image that represents Duke.","lastModifiedDate":"2022-11-13"},{"lineNumber":93,"author":{"gitId":"Anyerxkp"},"content":"     * @return A dialog box that contains Duke\u0027s reply.","lastModifiedDate":"2022-11-13"},{"lineNumber":94,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":95,"author":{"gitId":"Anyerxkp"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-11-13"},{"lineNumber":96,"author":{"gitId":"Anyerxkp"},"content":"        DialogBox dukeDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2022-11-13"},{"lineNumber":97,"author":{"gitId":"Anyerxkp"},"content":"        dukeDialog.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2022-11-13"},{"lineNumber":98,"author":{"gitId":"Anyerxkp"},"content":"                PALE_PINK,","lastModifiedDate":"2022-11-13"},{"lineNumber":99,"author":{"gitId":"Anyerxkp"},"content":"                ROUND_CORNER,","lastModifiedDate":"2022-11-13"},{"lineNumber":100,"author":{"gitId":"Anyerxkp"},"content":"                DUKE_DIALOG_INSETS)));","lastModifiedDate":"2022-11-13"},{"lineNumber":101,"author":{"gitId":"Anyerxkp"},"content":"        dukeDialog.flip();","lastModifiedDate":"2022-11-13"},{"lineNumber":102,"author":{"gitId":"Anyerxkp"},"content":"        return dukeDialog;","lastModifiedDate":"2022-11-13"},{"lineNumber":103,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":104,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":104}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.gui;","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"public class Launcher {","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"     * Launches the main class for Duke GUI.","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"     *","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":18}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.gui;","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.Duke;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import java.io.File;","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"public class Main extends Application {","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"    private Duke duke \u003d new Duke(\"duke.save\");","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"     * Starts a stage to display the GUI.","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"     *","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"     * @param stage A stage where Duke GUI is executed.","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        try {","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"            assert new File(\"src/main/resources/view/MainWindow.fxml\").exists() : \"MainWindow.fxml not found\";","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"            stage.setTitle(\"Anyer\");","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"            stage.show();","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().load();","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().isExit.addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"                if (oldValue !\u003d newValue) {","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"                    PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"                    delay.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"                    delay.play();","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"                }","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"            });","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":52}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.gui;","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.Duke;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import duke.Ui;","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.SaveException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"import javafx.beans.property.SimpleBooleanProperty;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"import java.util.Objects;","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"    @FXML","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"    @FXML","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"    @FXML","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"    private TextField userInput;","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"    public SimpleBooleanProperty isExit;","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"    private Duke duke;","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"    private Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"     * Initializes the main window of Duke GUI.","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"    @FXML","lastModifiedDate":"2022-11-13"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"    public void initialize() {","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"        isExit \u003d new SimpleBooleanProperty();","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"     * Set the main window\u0027s Duke object.","lastModifiedDate":"2022-11-13"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"     * @param d The Duke object to be associated with the main window.","lastModifiedDate":"2022-11-13"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"        duke \u003d d;","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"     * Shows the welcome message in the GUI.","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"        String welcomeMessage \u003d new Ui().showWelcome();","lastModifiedDate":"2022-11-13"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-11-13"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"                DialogBox.getDukeDialog(","lastModifiedDate":"2022-11-13"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"                        welcomeMessage,","lastModifiedDate":"2022-11-13"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"                        dukeImage));","lastModifiedDate":"2022-11-13"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"     * Shows the result of loading past tasks from the local file.","lastModifiedDate":"2022-11-13"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"    public void load() {","lastModifiedDate":"2022-11-13"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"        String message \u003d \"nice to meet you!\";","lastModifiedDate":"2022-11-13"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-11-13"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"                DialogBox.getDukeDialog(","lastModifiedDate":"2022-11-13"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"                        message,","lastModifiedDate":"2022-11-13"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"                        dukeImage));","lastModifiedDate":"2022-11-13"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-11-13"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-11-13"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":83,"author":{"gitId":"Anyerxkp"},"content":"    @FXML","lastModifiedDate":"2022-11-13"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"    private void handleUserInput() throws InvalidInputException, SaveException, IOException, DukeException {","lastModifiedDate":"2022-11-13"},{"lineNumber":85,"author":{"gitId":"Anyerxkp"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-11-13"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-11-13"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"            isExit.set(true);","lastModifiedDate":"2022-11-13"},{"lineNumber":88,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"        String response \u003d duke.getR(input);","lastModifiedDate":"2022-11-13"},{"lineNumber":90,"author":{"gitId":"Anyerxkp"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-11-13"},{"lineNumber":91,"author":{"gitId":"Anyerxkp"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-11-13"},{"lineNumber":92,"author":{"gitId":"Anyerxkp"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-11-13"},{"lineNumber":93,"author":{"gitId":"Anyerxkp"},"content":"        );","lastModifiedDate":"2022-11-13"},{"lineNumber":94,"author":{"gitId":"Anyerxkp"},"content":"        userInput.clear();","lastModifiedDate":"2022-11-13"},{"lineNumber":95,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":96,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":96}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import duke.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":" * A deadline task, with a \u0027by\u0027 dateTime indicating when it has to be done by","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"    public static final long serialVersionUID \u003d 01L;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"    protected DateTime by;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"    public Deadline(String description, DateTime by) throws InvalidInputException {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"        /**","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"         * Initialize the deadline task and set the typeIcon to \u0027D\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"         * @param description Description of the task, cannot be empty","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"         * @param by \"datetime\" The date and time this task has to be done before","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"         * @throws InvalidInputException This is thrown if the task description is null or an empty string","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"         */","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"        super(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"        typeIcon \u003d \"D\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"     * Check whether this deadline (\u0027by\u0027 datetime) falls on the given dateTime","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"     * @param dateTime The date for comparison","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"     * @return True when this task falls on the given `dateTime`","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"    public Boolean isSameDate(DateTime dateTime) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        return by.isSameDate(dateTime);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"    };","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"     * Converts this task to a descriptive string","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"    public String toString(){","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"        return super.toString() + String.format(\"(by: %s)\",by);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Anyerxkp":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import duke.DateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":" * An event class, which has a dateTime instance marking its time range","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"    public static final long serialVersionUID \u003d 01L;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"    protected DateTime at;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"    protected DateTime to;","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"     * Initialize the event task and set the typeIcon to \u0027E\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"     * @param description Description of the task, cannot be empty","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"     * @param at \"datetime\" The date and time this event falls at","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"     * @throws InvalidInputException This is thrown if the task description is null or an empty string","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    public Event(String description, DateTime at, DateTime to) throws InvalidInputException {","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"        super(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"        this.to \u003d to;","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"        typeIcon \u003d \"E\";","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"     * Check whether this event occurring date (\u0027at\u0027 datetime) falls on the given dateTime","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"     * @param dateTime The date for comparison","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"     * @return True when this task falls on the given `dateTime`","lastModifiedDate":"2022-11-13"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"    public Boolean isSameDate(DateTime dateTime) {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"        return at.isSameDate(dateTime);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"    };","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"     * Converts this task to a descriptive string","lastModifiedDate":"2022-11-13"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"    public String toString() {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"        return super.toString() + String.format(\"(at: %s - %s)\", at,to);","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Anyerxkp":46}},{"path":"src/main/java/duke/task/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.task;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import duke.DateTime;","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":" * A tag class, which can give a tag for the task","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"public class Tag extends Task {","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"    public static final long serialVersionUID \u003d 01L;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"    protected static String tag;","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"    public Tag(String tag) throws InvalidInputException {","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"        super(tag);","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"        this.tagIcon \u003d tag;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"     * Converts this task to a descriptive string","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"    public String toString() {","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"        super.toString();","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"        return super.toString();","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"     * Since there is no specific date and time related to this task, so return false","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"    public Boolean isSameDate(DateTime dateTime) {","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"        return false;","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"    };","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"Anyerxkp":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import duke.DateTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException.InputExceptionType;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":" * Base class of all tasks, providing necessary interfaces and methods for implementation","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"    public static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"    protected String typeIcon \u003d \"*\";","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    protected String tagIcon \u003d \"\";","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"    protected String description;","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"     * Constructor of a task instance","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"     * @param description Description of the task, cannot be empty","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"     * @throws InvalidInputException This is thrown if the task description is null or an empty string","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"    public Task(String description) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"        if (description \u003d\u003d null || description.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"            throw new InvalidInputException(InputExceptionType.EMPTY_DESCRIPTION);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Anyerxkp"},"content":"     * Get a status icon for the task","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Anyerxkp"},"content":"     * @return a UTF-8 tick icon for a completed task, and a cross for an incomplete task","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Anyerxkp"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"Anyerxkp"},"content":"        // Return tick when done, or \u0027X\u0027 symbol when it is not done","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"Anyerxkp"},"content":"        return (isDone ? \"√\" : \"×\");","lastModifiedDate":"2022-11-13"},{"lineNumber":42,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":45,"author":{"gitId":"Anyerxkp"},"content":"     * Get the type icon of the task type (e.g. D for deadline)","lastModifiedDate":"2022-11-13"},{"lineNumber":46,"author":{"gitId":"Anyerxkp"},"content":"     * @return the type icon of the current task (subclass)","lastModifiedDate":"2022-11-13"},{"lineNumber":47,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":48,"author":{"gitId":"Anyerxkp"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"Anyerxkp"},"content":"        return typeIcon;","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":53,"author":{"gitId":"Anyerxkp"},"content":"     * Get the description of the task","lastModifiedDate":"2022-11-13"},{"lineNumber":54,"author":{"gitId":"Anyerxkp"},"content":"     * @return Description of the task","lastModifiedDate":"2022-11-13"},{"lineNumber":55,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":56,"author":{"gitId":"Anyerxkp"},"content":"    public String getDescription() { return description;}","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":58,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":59,"author":{"gitId":"Anyerxkp"},"content":"     * Mark the task as done","lastModifiedDate":"2022-11-13"},{"lineNumber":60,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":61,"author":{"gitId":"Anyerxkp"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"Anyerxkp"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":65,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":66,"author":{"gitId":"Anyerxkp"},"content":"     * Mark the task as not done","lastModifiedDate":"2022-11-13"},{"lineNumber":67,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":68,"author":{"gitId":"Anyerxkp"},"content":"    public void markAsnotDone() {","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"Anyerxkp"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":72,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":73,"author":{"gitId":"Anyerxkp"},"content":"     * tag the task","lastModifiedDate":"2022-11-13"},{"lineNumber":74,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":75,"author":{"gitId":"Anyerxkp"},"content":"    public void tagD() {","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"Anyerxkp"},"content":"        tagIcon \u003d Tag.tag;","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":79,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":80,"author":{"gitId":"Anyerxkp"},"content":"     * Check whether this task falls on a specific date","lastModifiedDate":"2022-11-13"},{"lineNumber":81,"author":{"gitId":"Anyerxkp"},"content":"     * @param dateTime The date for comparison","lastModifiedDate":"2022-11-13"},{"lineNumber":82,"author":{"gitId":"Anyerxkp"},"content":"     * @return True when this task falls on the given `dateTime`","lastModifiedDate":"2022-11-13"},{"lineNumber":83,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":84,"author":{"gitId":"Anyerxkp"},"content":"    public abstract Boolean isSameDate(DateTime dateTime);","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":86,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":87,"author":{"gitId":"Anyerxkp"},"content":"     * Get the tag icon\"#\" of the task","lastModifiedDate":"2022-11-13"},{"lineNumber":88,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":89,"author":{"gitId":"Anyerxkp"},"content":"    public String getTagIcon() {","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"Anyerxkp"},"content":"        return tagIcon;","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":93,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":94,"author":{"gitId":"Anyerxkp"},"content":"     * Converts this task to a descriptive string","lastModifiedDate":"2022-11-13"},{"lineNumber":95,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":96,"author":{"gitId":"Anyerxkp"},"content":"    public String toString() {","lastModifiedDate":"2022-09-06"},{"lineNumber":97,"author":{"gitId":"Anyerxkp"},"content":"        return String.format(\"[%s][%s][#%s] %s\", getTypeIcon(), getStatusIcon(), getTagIcon(), getDescription());","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"Anyerxkp":99}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import duke.DateTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"/**","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":" *  todo task, with no special fields and attributes","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":" */","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"    public static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"     * Initialize the todo task and set the typeIcon to \u0027T\u0027","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"     * @param description Description of the task, cannot be empty","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"     * @throws InvalidInputException This is thrown if the task description is null or an empty string","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"    public ToDo(String description) throws InvalidInputException {","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"        super(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"        typeIcon \u003d \"T\";","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"    /**","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"     * Since there is no specific date and time related to this task, so return false","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"     */","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"    public Boolean isSameDate(DateTime dateTime) {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"        return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"    };","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Anyerxkp":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"100.0\" prefWidth\u003d\"460.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"      \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"128.0\" prefWidth\u003d\"484.0\"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"            \u003cText fx:id\u003d\"dialog\" fill\u003d\"#323232\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" wrappingWidth\u003d\"386.0\"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"                  \u003cFont name\u003d\"Lao MN\" size\u003d\"12.3\" /\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"               \u003c/font\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"            \u003cInsets bottom\u003d\"13.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"            \u003cInsets bottom\u003d\"9.0\" /\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":31,"author":{"gitId":"Anyerxkp"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":32,"author":{"gitId":"Anyerxkp"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"\u003cAnchorPane prefHeight\u003d\"785.0\" prefWidth\u003d\"514.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"      \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"5.0\" layoutY\u003d\"737.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"404.0\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"105.0\" AnchorPane.topAnchor\u003d\"737.0\" /\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"415.0\" layoutY\u003d\"737.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"92.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"#00a1d6cc\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"414.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"737.0\"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":16,"author":{"gitId":"Anyerxkp"},"content":"            \u003cFont name\u003d\"Lao MN\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":17,"author":{"gitId":"Anyerxkp"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":18,"author":{"gitId":"Anyerxkp"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"5.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"725.0\" prefWidth\u003d\"504.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Anyerxkp"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":20,"author":{"gitId":"Anyerxkp"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"723.0\" prefWidth\u003d\"486.0\"\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":21,"author":{"gitId":"Anyerxkp"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Anyerxkp"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":23,"author":{"gitId":"Anyerxkp"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":24,"author":{"gitId":"Anyerxkp"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":25,"author":{"gitId":"Anyerxkp"},"content":"                  \u003cInsets left\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":26,"author":{"gitId":"Anyerxkp"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":27,"author":{"gitId":"Anyerxkp"},"content":"         \u003c/content\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":28,"author":{"gitId":"Anyerxkp"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":29,"author":{"gitId":"Anyerxkp"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-11-13"},{"lineNumber":30,"author":{"gitId":"Anyerxkp"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":30}},{"path":"src/test/java/duke/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"class DeadlineTaskTest {","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"    @Test","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"    void testToString() throws InvalidInputException {","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"        assertEquals(\"[D][×][#] borrow book(by: Feb-02-2022 00:00)\" , new Deadline(\"borrow book\", new DateTime(\"2022-02-02\")).toString());","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":14}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"public class DukeTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"        assertEquals(2,2);","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"Anyerxkp":11}},{"path":"src/test/java/duke/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.Event;","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"class EventTaskTest {","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"    @Test","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"    void testToString() throws InvalidInputException {","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"        assertEquals(\"[E][×][#] borrow book(at: Feb-02-2022 00:00 - Feb-02-2022 00:00)\" , new Event(\"borrow book\", new DateTime(\"2022-02-02\"),new DateTime(\"2022-02-02\")).toString());","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":15,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":15}},{"path":"src/test/java/duke/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anyerxkp"},"content":"package duke;","lastModifiedDate":"2022-11-13"},{"lineNumber":2,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":3,"author":{"gitId":"Anyerxkp"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2022-11-13"},{"lineNumber":4,"author":{"gitId":"Anyerxkp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-13"},{"lineNumber":5,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":6,"author":{"gitId":"Anyerxkp"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-11-13"},{"lineNumber":7,"author":{"gitId":"Anyerxkp"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-11-13"},{"lineNumber":8,"author":{"gitId":"Anyerxkp"},"content":"class TodoTaskTest {","lastModifiedDate":"2022-11-13"},{"lineNumber":9,"author":{"gitId":"Anyerxkp"},"content":"","lastModifiedDate":"2022-11-13"},{"lineNumber":10,"author":{"gitId":"Anyerxkp"},"content":"    @Test","lastModifiedDate":"2022-11-13"},{"lineNumber":11,"author":{"gitId":"Anyerxkp"},"content":"    void testToString() throws InvalidInputException {","lastModifiedDate":"2022-11-13"},{"lineNumber":12,"author":{"gitId":"Anyerxkp"},"content":"        assertEquals(\"[T][×][#] borrow mbook\", new ToDo(\"borrow mbook\").toString());","lastModifiedDate":"2022-11-13"},{"lineNumber":13,"author":{"gitId":"Anyerxkp"},"content":"    }","lastModifiedDate":"2022-11-13"},{"lineNumber":14,"author":{"gitId":"Anyerxkp"},"content":"}","lastModifiedDate":"2022-11-13"}],"authorContributionMap":{"Anyerxkp":14}}]
