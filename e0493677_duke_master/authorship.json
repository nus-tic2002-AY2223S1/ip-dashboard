[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"# Duke.Duke project template","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-11-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"e0493677":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-11-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-11-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-11-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2022-11-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-11-10"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    systemProperty \"file.encoding\", \"utf-8\"","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2022-11-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-11-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2022-11-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2022-11-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-11-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2022-11-10"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"    mainClassName \u003d \"Duke.Duke\"","lastModifiedDate":"2022-11-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-11-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-11-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-11-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2022-11-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-11-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":2,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"Deadline | false | return book | 2 Dec 2019 18:00 |  ","lastModifiedDate":"2022-11-12"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"Event | false | project meeting | 5 Oct 2019 10:00 |  ","lastModifiedDate":"2022-11-12"}],"authorContributionMap":{"e0493677":2}},{"path":"src/main/java/Duke/Commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":" * Adds a task to the task list.","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"    private Task task;","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"     *  Constructor of AddCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     * @param task is the task to be added to task list","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     *  execute of AddCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     * @param taskList to add task into","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the command executed result","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-10"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-11-10"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"        return \"Got it! I have added this task to your list:\\n  \"","lastModifiedDate":"2022-11-11"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"                + task.getDescription()","lastModifiedDate":"2022-11-10"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":37}},{"path":"src/main/java/Duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":" * Represents an executable command.","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"public abstract class Command {","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"    public abstract String execute(Storage storage, TaskList task);","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":11}},{"path":"src/main/java/Duke/Commands/DeleteAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-11"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":" * Delete all tasks from the task list.","lastModifiedDate":"2022-11-12"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"public class DeleteAllCommand extends Command {","lastModifiedDate":"2022-11-11"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"     *  execute of DeleteAllCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"     * @param taskList to delete all task","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the command executed result","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-11"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-11"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"        ArrayList\u003cTask\u003e listOftask \u003d taskList.getListOfTask();","lastModifiedDate":"2022-11-11"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"        if(listOftask.size() \u003d\u003d 0){","lastModifiedDate":"2022-11-11"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"            return \"Task list is already empty\";","lastModifiedDate":"2022-11-11"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"        listOftask.clear();","lastModifiedDate":"2022-11-11"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"        return \"All task deleted\";","lastModifiedDate":"2022-11-11"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-11"}],"authorContributionMap":{"e0493677":32}},{"path":"src/main/java/Duke/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":" * Deletes a task in the task list.","lastModifiedDate":"2022-11-12"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"    private final int input;","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"     *  Constructor of AddCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"     * @param input is the task # to be deleted from the task list","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    public DeleteCommand(int input) {","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     *  execute of DeleteCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     * @param taskList to delete the selected task from","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the command executed result","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"        if (taskList.getSize() \u003c input){","lastModifiedDate":"2022-11-11"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"            return \"Task list does not have #\" + input + \", please select a number within the task list\";","lastModifiedDate":"2022-11-11"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"        Task currTask \u003d taskList.getTask(input-1);","lastModifiedDate":"2022-11-10"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"        output \u003d output.concat(\"  \" + currTask.getDescription() + \"\\n\");","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"        taskList.removeTask(currTask);","lastModifiedDate":"2022-11-10"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"        output \u003d output.concat(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-11-10"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"        return output;","lastModifiedDate":"2022-11-10"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":42}},{"path":"src/main/java/Duke/Commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Common.Messages;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":" * To terminates the program","lastModifiedDate":"2022-11-12"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"        return Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":14}},{"path":"src/main/java/Duke/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-11"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-11"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":" * To find tasks with a certain keyword from the task list.","lastModifiedDate":"2022-11-12"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-11-11"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"    private final String search;","lastModifiedDate":"2022-11-11"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"     *  Constructor of FindCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"     * @param search is the keyword to find the task description which contains it","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    public FindCommand(String search) {","lastModifiedDate":"2022-11-11"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"        this.search \u003d search;","lastModifiedDate":"2022-11-11"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     *  execute of FindCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"     * @param taskList to find all task with keyword","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the search result","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-11"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-11"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"        ArrayList\u003cTask\u003e listOftask \u003d taskList.getListOfTask();","lastModifiedDate":"2022-11-11"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        if(listOftask.isEmpty()){","lastModifiedDate":"2022-11-11"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"            return \"Task list is empty, no searchable task\\n\";","lastModifiedDate":"2022-11-11"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"        String output\u003d\"\";","lastModifiedDate":"2022-11-11"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-11-11"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"            if (taskList.getTask(i).getDescriptionOnly().contains(search))","lastModifiedDate":"2022-11-11"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"                output \u003d output.concat(i+1 + \". \" + taskList.getTask(i).getDescription() + \"\\n\");","lastModifiedDate":"2022-11-11"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"        if (output.isEmpty()){","lastModifiedDate":"2022-11-11"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"            return \"No result found\\n\";","lastModifiedDate":"2022-11-11"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"        return output;","lastModifiedDate":"2022-11-11"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-11"}],"authorContributionMap":{"e0493677":52}},{"path":"src/main/java/Duke/Commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":" * List all tasks from the task list or list task with certain tagging.","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"    private final String input;","lastModifiedDate":"2022-11-11"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     *  Constructor of ListCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"     * @param input is the tagging keyword to find task that contains such tagging","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2022-11-11"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-11-11"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     *  execute of ListCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"     * @param taskList to list the task from","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the list result","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-10"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        ArrayList\u003cTask\u003e listOftask \u003d taskList.getListOfTask();","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"        if(listOftask.size() \u003d\u003d 0){","lastModifiedDate":"2022-11-10"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"            return \"Task list is empty\";","lastModifiedDate":"2022-11-11"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"        String output\u003d\"\";","lastModifiedDate":"2022-11-10"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"        if (input.contains(\"#\")){","lastModifiedDate":"2022-11-11"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"            for (int i \u003d 0; i \u003c listOftask.size(); i++) {","lastModifiedDate":"2022-11-11"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"                if (listOftask.get(i).getTagging().contains(input)){","lastModifiedDate":"2022-11-11"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"                    output \u003d output.concat((i+1 + \". \" + listOftask.get(i).getDescription() + \"\\n\"));","lastModifiedDate":"2022-11-11"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"                }","lastModifiedDate":"2022-11-11"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"            }","lastModifiedDate":"2022-11-11"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"            return output;","lastModifiedDate":"2022-11-11"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"        for (int i \u003d 0; i \u003c listOftask.size(); i++) {","lastModifiedDate":"2022-11-10"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"            output \u003d output.concat((i+1 + \". \" + listOftask.get(i).getDescription() + \"\\n\"));","lastModifiedDate":"2022-11-10"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"        return output;","lastModifiedDate":"2022-11-10"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":57}},{"path":"src/main/java/Duke/Commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":" * Mark a task as completed in the task list.","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"    private final int input;","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"     *  Constructor of MarkCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"     * @param input is the task # selected to mark as complete","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    public MarkCommand(int input) {","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     *  execute of MarkCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     * @param taskList to retrieve task to mark as complete","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the command executed result","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"        if (taskList.getSize() \u003c input){","lastModifiedDate":"2022-11-11"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"            return \"Task list does not have #\" + input + \", please select a number within the task list\";","lastModifiedDate":"2022-11-11"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        Task currTask \u003d taskList.getTask(input-1);","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"        currTask.markTask();","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"        return currTask.getDescription();","lastModifiedDate":"2022-11-10"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":39}},{"path":"src/main/java/Duke/Commands/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-11"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-12"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":" * Add tagging to a task in the task list.","lastModifiedDate":"2022-11-12"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-11-11"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"    private final int input;","lastModifiedDate":"2022-11-11"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"    private final String tag;","lastModifiedDate":"2022-11-11"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"     *  Constructor of TagCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     * @param input is the task # selected for tagging","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"     * @param tag  to be added to the selected task","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    public TagCommand(int input, String tag) {","lastModifiedDate":"2022-11-11"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-11-11"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-11-11"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     *  execute of TagCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"     * @param taskList to retrieve task to mark as complete","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the command executed result","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-11"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-11"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"        if (taskList.getSize() \u003c input){","lastModifiedDate":"2022-11-11"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"            return \"Task list does not have #\" + input + \", please select a number within the task list\";","lastModifiedDate":"2022-11-11"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"        Task currTask \u003d taskList.getTask(input-1);","lastModifiedDate":"2022-11-11"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"        currTask.addTagging(tag);","lastModifiedDate":"2022-11-11"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"        return currTask.getDescription();","lastModifiedDate":"2022-11-11"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-11"}],"authorContributionMap":{"e0493677":40}},{"path":"src/main/java/Duke/Commands/TimeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Deadlines;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Events;","lastModifiedDate":"2022-11-11"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-11"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-11-11"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-11-11"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"import java.util.Date;","lastModifiedDate":"2022-11-11"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-12"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":" * To find out how much time is left till due date for a selected task","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"public class TimeCommand extends Command {","lastModifiedDate":"2022-11-11"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"    private final int input;","lastModifiedDate":"2022-11-11"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"     *  Constructor of TimeCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"     * @param input is the task # selected to find out time left till due date","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"    public TimeCommand(int input) {","lastModifiedDate":"2022-11-11"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-11-11"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"     *  execute of TimeCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"     * @param taskList to retrieve task to mark as complete","lastModifiedDate":"2022-11-12"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the time left till due date for the selected task","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-11"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-11"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"        if (taskList.getSize() \u003c input){","lastModifiedDate":"2022-11-11"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"            return \"Task list does not have #\" + input + \", please select a number within the task list\";","lastModifiedDate":"2022-11-11"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"        Task currTask \u003d taskList.getTask(input-1);","lastModifiedDate":"2022-11-11"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"d MMM yyyy HH:mm\");","lastModifiedDate":"2022-11-11"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"        String dueDate;","lastModifiedDate":"2022-11-11"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"        String output \u003d currTask.getDescription();","lastModifiedDate":"2022-11-11"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"        if(currTask.getTaskType().equals(\"Todo\")){","lastModifiedDate":"2022-11-11"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"            return output.concat(\" - Does not have a due date\");","lastModifiedDate":"2022-11-12"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"        if(currTask.getTaskType().equals(\"Events\")){","lastModifiedDate":"2022-11-11"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"            dueDate \u003d ((Events) currTask).getDueDate();","lastModifiedDate":"2022-11-11"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"        } else {","lastModifiedDate":"2022-11-11"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"            dueDate \u003d ((Deadlines) currTask).getDueDate();","lastModifiedDate":"2022-11-11"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"        if(dueDate.equals(\"no due date\")){","lastModifiedDate":"2022-11-11"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"            return output.concat(\" - Does not have a due date\");","lastModifiedDate":"2022-11-12"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":58,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":59,"author":{"gitId":"e0493677"},"content":"        Date date1;","lastModifiedDate":"2022-11-11"},{"lineNumber":60,"author":{"gitId":"e0493677"},"content":"        try {","lastModifiedDate":"2022-11-11"},{"lineNumber":61,"author":{"gitId":"e0493677"},"content":"            date1 \u003d format.parse(dueDate);","lastModifiedDate":"2022-11-11"},{"lineNumber":62,"author":{"gitId":"e0493677"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-11-11"},{"lineNumber":63,"author":{"gitId":"e0493677"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-11-11"},{"lineNumber":64,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":65,"author":{"gitId":"e0493677"},"content":"        Date date2 \u003d new Date();","lastModifiedDate":"2022-11-11"},{"lineNumber":66,"author":{"gitId":"e0493677"},"content":"        long difference \u003d  date1.getTime() - date2.getTime();","lastModifiedDate":"2022-11-11"},{"lineNumber":67,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":68,"author":{"gitId":"e0493677"},"content":"        if (difference \u003c 1){","lastModifiedDate":"2022-11-11"},{"lineNumber":69,"author":{"gitId":"e0493677"},"content":"            return output.concat(\" - Task is overdue!\") ;","lastModifiedDate":"2022-11-12"},{"lineNumber":70,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":71,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":72,"author":{"gitId":"e0493677"},"content":"        long diffMinutes \u003d difference / (60 * 1000) % 60;","lastModifiedDate":"2022-11-11"},{"lineNumber":73,"author":{"gitId":"e0493677"},"content":"        long diffHours \u003d difference / (60 * 60 * 1000) % 24;","lastModifiedDate":"2022-11-11"},{"lineNumber":74,"author":{"gitId":"e0493677"},"content":"        long diffDays \u003d difference / (24 * 60 * 60 * 1000);","lastModifiedDate":"2022-11-11"},{"lineNumber":75,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":76,"author":{"gitId":"e0493677"},"content":"        return output.concat(\" - Time left till due date: \" + diffDays + \" day[s], \" + diffHours +\" hour[s] and \"+ diffMinutes + \" minute[s]\");","lastModifiedDate":"2022-11-11"},{"lineNumber":77,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":78,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-11"}],"authorContributionMap":{"e0493677":78}},{"path":"src/main/java/Duke/Commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Commands;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":" * Mark a task as not completed in the task list.","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"    private final int input;","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"     *  Constructor of UnmarkCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"     * @param input is the task # selected to mark as not complete","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"    public UnmarkCommand(int input) {","lastModifiedDate":"2022-11-10"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"     *  execute of UnmarkCommand","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     * @param storage will store task list data to hard disk","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     * @param taskList to retrieve task to mark as not complete","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     * @return a string to show user of the command executed result","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"    @Override","lastModifiedDate":"2022-11-10"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"        if (taskList.getSize() \u003c input){","lastModifiedDate":"2022-11-11"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"            return \"Task list does not have #\" + input + \", please select a number within the task list\";","lastModifiedDate":"2022-11-11"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"        Task currTask \u003d taskList.getTask(input-1);","lastModifiedDate":"2022-11-10"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"        currTask.unmarkTask();","lastModifiedDate":"2022-11-10"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        return currTask.getDescription();","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":37}},{"path":"src/main/java/Duke/Common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Common;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":" * Container for messages.","lastModifiedDate":"2022-11-10"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"public class Messages {","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀     ⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠿⠿⣷⣦⣀⠀⢀⣀⣀⣤⣤⣤⣤⣤⣄⣀⡀⢀⣤⣶⠿⠿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡟⢸⠀⠀⠉⠻⠿⠛⠛⠋⠉⠉⠉⠉⠉⠙⠛⠻⠿⠋⠁⠀⠀⢻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡇⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⢸⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡿⠛⠀⠀⠐⢠⣦⣦⣦⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣄⠀⠀⠙⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡟⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⠀⠸⣿⣿⣿⣿⣿⣿⣿⡇⡄⠀⠀⠈⢿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠇⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⡿⠁⣼⣄⠙⠿⣿⣿⣿⡿⠟⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡆⠀⠀⠀⠀⠀⣴⡿⠛⢿⡏⠉⠈⠰⡿⠛⠻⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡀⢀⠀⠀⣸⣿⠁⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢙⣿⣶⡄⡾⠟⠃⠀⠀⣾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠿⣯⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠃⠀⠀⠀⠀⠀⠀⣴⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠘⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"            \"⢀⡀⡀⣀⣀⣀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠊⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⣤⣾⠿⠛⠃⠀⠀⠀⣸⣷⠀⠀⠀⠀⣀⣀⡀⡀⠀\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"            \"⠺⠿⠛⠛⠛⠛⠿⠿⠿⠿⠿⠿⠿⠿⠿⠷⣶⢶⡶⡶⠶⠿⠿⠿⠿⠟⠛⠛⠻⠿⠿⠿⢿⣿⣀⣠⣤⣤⣤⣤⣶⠿⠛⠛⠛⠛⠛⠛⠛⠛⠻⠃\\n\" +","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\";","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-11-10"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Milo\\nWhat can I do for you?\";","lastModifiedDate":"2022-11-10"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":24}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2022-11-10"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Common.Messages;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2022-11-11"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2022-11-11"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"import Duke.UI.Ui;","lastModifiedDate":"2022-11-11"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2022-11-10"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"public class Duke {","lastModifiedDate":"2022-11-10"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"    private Storage storage;","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    private Ui ui;","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     *  To load up the data from a file path","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     * @param filePath to load data from","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-11-10"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-11-10"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"        try {","lastModifiedDate":"2022-11-10"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"            taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2022-11-10"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"        } catch (IOException io) {","lastModifiedDate":"2022-11-10"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"            ui.printMessage(io.getMessage());","lastModifiedDate":"2022-11-12"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"            exit();","lastModifiedDate":"2022-11-12"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"        run();","lastModifiedDate":"2022-11-10"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"     *  Show welcome message and run the program until termination","lastModifiedDate":"2022-11-12"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"    public void run() {","lastModifiedDate":"2022-11-10"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2022-11-10"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"        loopTillExit();","lastModifiedDate":"2022-11-10"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"        exit();","lastModifiedDate":"2022-11-10"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"     *  To continuously run the program and save data to storage until exit command","lastModifiedDate":"2022-11-12"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"    private void loopTillExit() {","lastModifiedDate":"2022-11-10"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"        String output;","lastModifiedDate":"2022-11-10"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"        do {","lastModifiedDate":"2022-11-10"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"            output \u003d \"\";","lastModifiedDate":"2022-11-11"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"            String userCommand \u003d ui.getUserCommand();","lastModifiedDate":"2022-11-12"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"            try {","lastModifiedDate":"2022-11-11"},{"lineNumber":58,"author":{"gitId":"e0493677"},"content":"                Parser p \u003d new Parser();","lastModifiedDate":"2022-11-10"},{"lineNumber":59,"author":{"gitId":"e0493677"},"content":"                Command c \u003d p.parseCommand(userCommand);","lastModifiedDate":"2022-11-10"},{"lineNumber":60,"author":{"gitId":"e0493677"},"content":"                if (c !\u003d null){","lastModifiedDate":"2022-11-11"},{"lineNumber":61,"author":{"gitId":"e0493677"},"content":"                    output \u003d c.execute(storage, taskList);","lastModifiedDate":"2022-11-10"},{"lineNumber":62,"author":{"gitId":"e0493677"},"content":"                    ui.showResultToUser(output);","lastModifiedDate":"2022-11-10"},{"lineNumber":63,"author":{"gitId":"e0493677"},"content":"                    storage.saveList(taskList.getListOfTask());","lastModifiedDate":"2022-11-12"},{"lineNumber":64,"author":{"gitId":"e0493677"},"content":"                }","lastModifiedDate":"2022-11-11"},{"lineNumber":65,"author":{"gitId":"e0493677"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-11-11"},{"lineNumber":66,"author":{"gitId":"e0493677"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2022-11-11"},{"lineNumber":67,"author":{"gitId":"e0493677"},"content":"            }","lastModifiedDate":"2022-11-11"},{"lineNumber":68,"author":{"gitId":"e0493677"},"content":"        } while (!output.equals(Messages.MESSAGE_GOODBYE));","lastModifiedDate":"2022-11-10"},{"lineNumber":69,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":70,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":71,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":72,"author":{"gitId":"e0493677"},"content":"     *  To terminate the program","lastModifiedDate":"2022-11-12"},{"lineNumber":73,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":74,"author":{"gitId":"e0493677"},"content":"    public void exit() {","lastModifiedDate":"2022-11-10"},{"lineNumber":75,"author":{"gitId":"e0493677"},"content":"        System.exit(0);","lastModifiedDate":"2022-11-10"},{"lineNumber":76,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":77,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":78,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":79,"author":{"gitId":"e0493677"},"content":"     *  main to initiate the whole program","lastModifiedDate":"2022-11-12"},{"lineNumber":80,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":81,"author":{"gitId":"e0493677"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-11-10"},{"lineNumber":82,"author":{"gitId":"e0493677"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-11-10"},{"lineNumber":83,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":84,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":85,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":85}},{"path":"src/main/java/Duke/Exceptions/InvalidTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Exceptions;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-12"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":" * Exception to handle invalid user command","lastModifiedDate":"2022-11-12"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-12"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"public class InvalidTaskCommand extends Exception{","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"    public InvalidTaskCommand(String errorMessage) {","lastModifiedDate":"2022-11-11"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"        super(errorMessage);","lastModifiedDate":"2022-11-11"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"e0493677":10}},{"path":"src/main/java/Duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Parser;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.AddCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.DeleteAllCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.DeleteCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.ExitCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.FindCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.ListCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.MarkCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.TagCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.TimeCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.UnmarkCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"import Duke.Exceptions.InvalidTaskCommand;","lastModifiedDate":"2022-11-11"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-11"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2022-11-11"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Events;","lastModifiedDate":"2022-11-11"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Deadlines;","lastModifiedDate":"2022-11-11"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"import Duke.UI.Ui;","lastModifiedDate":"2022-11-11"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-11-11"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-10"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-10"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":" *  Parser class help to parse user\u0027s command","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"public class Parser {","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-10"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"     *  Parses user input into command for execution.","lastModifiedDate":"2022-11-10"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"     * @param userInput is the full user\u0027s command to be parsed","lastModifiedDate":"2022-11-12"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"     * @return a Command to be executed","lastModifiedDate":"2022-11-12"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"    public Command parseCommand(String userInput) throws InvalidTaskCommand, DateTimeException {","lastModifiedDate":"2022-11-11"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"        String[] input \u003d userInput.toLowerCase().split(\" \", 2);","lastModifiedDate":"2022-11-12"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"        final String command \u003d input[0];","lastModifiedDate":"2022-11-11"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2022-11-11"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"        if (input.length\u003e1){","lastModifiedDate":"2022-11-11"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"            arguments \u003d input[1];","lastModifiedDate":"2022-11-11"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"        try {","lastModifiedDate":"2022-11-11"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"            switch (command) {","lastModifiedDate":"2022-11-10"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"                case \"bye\":","lastModifiedDate":"2022-11-10"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"                    return new ExitCommand();","lastModifiedDate":"2022-11-10"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"                case \"list\":","lastModifiedDate":"2022-11-10"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"                    return new ListCommand(arguments);","lastModifiedDate":"2022-11-11"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"                case \"mark\":","lastModifiedDate":"2022-11-10"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"                    if (arguments.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Mark, for example \\\"mark 2\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"                    return new MarkCommand(Integer.parseInt(arguments));","lastModifiedDate":"2022-11-11"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"                case \"unmark\":","lastModifiedDate":"2022-11-10"},{"lineNumber":58,"author":{"gitId":"e0493677"},"content":"                    if (arguments.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":59,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Unmark, for example \\\"unmark 2\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":60,"author":{"gitId":"e0493677"},"content":"                    return new UnmarkCommand(Integer.parseInt(arguments));","lastModifiedDate":"2022-11-11"},{"lineNumber":61,"author":{"gitId":"e0493677"},"content":"                case \"delete\":","lastModifiedDate":"2022-11-10"},{"lineNumber":62,"author":{"gitId":"e0493677"},"content":"                    if (arguments.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":63,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Delete, for example \\\"delete 2\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":64,"author":{"gitId":"e0493677"},"content":"                    Ui ui \u003d new Ui();","lastModifiedDate":"2022-11-11"},{"lineNumber":65,"author":{"gitId":"e0493677"},"content":"                    if (arguments.equals(\"all\")){","lastModifiedDate":"2022-11-11"},{"lineNumber":66,"author":{"gitId":"e0493677"},"content":"                        if (ui.getUserConfirmation(\"Are you sure you want to delete all task?\")){","lastModifiedDate":"2022-11-11"},{"lineNumber":67,"author":{"gitId":"e0493677"},"content":"                            return new DeleteAllCommand();","lastModifiedDate":"2022-11-11"},{"lineNumber":68,"author":{"gitId":"e0493677"},"content":"                        } else {","lastModifiedDate":"2022-11-11"},{"lineNumber":69,"author":{"gitId":"e0493677"},"content":"                            return null;","lastModifiedDate":"2022-11-11"},{"lineNumber":70,"author":{"gitId":"e0493677"},"content":"                        }","lastModifiedDate":"2022-11-11"},{"lineNumber":71,"author":{"gitId":"e0493677"},"content":"                    }","lastModifiedDate":"2022-11-11"},{"lineNumber":72,"author":{"gitId":"e0493677"},"content":"                    if (ui.getUserConfirmation(\"Are you sure you want to delete task #\"+arguments+\"?\")){","lastModifiedDate":"2022-11-11"},{"lineNumber":73,"author":{"gitId":"e0493677"},"content":"                        return new DeleteCommand(Integer.parseInt(arguments));","lastModifiedDate":"2022-11-11"},{"lineNumber":74,"author":{"gitId":"e0493677"},"content":"                    }","lastModifiedDate":"2022-11-11"},{"lineNumber":75,"author":{"gitId":"e0493677"},"content":"                    return null;","lastModifiedDate":"2022-11-11"},{"lineNumber":76,"author":{"gitId":"e0493677"},"content":"                case \"tag\":","lastModifiedDate":"2022-11-11"},{"lineNumber":77,"author":{"gitId":"e0493677"},"content":"                    String[] tagInput \u003d arguments.split(\" \", 2);","lastModifiedDate":"2022-11-11"},{"lineNumber":78,"author":{"gitId":"e0493677"},"content":"                    String tag \u003d getTagging(tagInput[1]);","lastModifiedDate":"2022-11-11"},{"lineNumber":79,"author":{"gitId":"e0493677"},"content":"                    if (tag.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":80,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Tag, for example \\\"tag 2 #fun\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":81,"author":{"gitId":"e0493677"},"content":"                    return new TagCommand(Integer.parseInt(tagInput[0]), tag);","lastModifiedDate":"2022-11-11"},{"lineNumber":82,"author":{"gitId":"e0493677"},"content":"                case \"find\":","lastModifiedDate":"2022-11-11"},{"lineNumber":83,"author":{"gitId":"e0493677"},"content":"                    if (arguments.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":84,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Find, for example \\\"find book\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":85,"author":{"gitId":"e0493677"},"content":"                    return new FindCommand(arguments);","lastModifiedDate":"2022-11-11"},{"lineNumber":86,"author":{"gitId":"e0493677"},"content":"                case \"time\":","lastModifiedDate":"2022-11-11"},{"lineNumber":87,"author":{"gitId":"e0493677"},"content":"                    if (arguments.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":88,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Time, for example \\\"time 2\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":89,"author":{"gitId":"e0493677"},"content":"                    return new TimeCommand(Integer.parseInt(arguments));","lastModifiedDate":"2022-11-11"},{"lineNumber":90,"author":{"gitId":"e0493677"},"content":"                case \"todo\":","lastModifiedDate":"2022-11-10"},{"lineNumber":91,"author":{"gitId":"e0493677"},"content":"                    if (arguments.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":92,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Todo, for example \\\"todo borrow book\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":93,"author":{"gitId":"e0493677"},"content":"                    return new AddCommand(parseTask(command,arguments));","lastModifiedDate":"2022-11-10"},{"lineNumber":94,"author":{"gitId":"e0493677"},"content":"                case \"deadline\":","lastModifiedDate":"2022-11-10"},{"lineNumber":95,"author":{"gitId":"e0493677"},"content":"                    if (arguments.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":96,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Deadline, for example \\\"deadline return book /by 2/12/2019 1800\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":97,"author":{"gitId":"e0493677"},"content":"                    return new AddCommand(parseTask(command,arguments));","lastModifiedDate":"2022-11-10"},{"lineNumber":98,"author":{"gitId":"e0493677"},"content":"                case \"event\":","lastModifiedDate":"2022-11-10"},{"lineNumber":99,"author":{"gitId":"e0493677"},"content":"                    if (arguments.isEmpty())","lastModifiedDate":"2022-11-11"},{"lineNumber":100,"author":{"gitId":"e0493677"},"content":"                        throw new InvalidTaskCommand(\"Please enter a correct command for Event, for example \\\"event project meeting /at 5/10/2019 1000\\\"\");","lastModifiedDate":"2022-11-11"},{"lineNumber":101,"author":{"gitId":"e0493677"},"content":"                    return new AddCommand(parseTask(command,arguments));","lastModifiedDate":"2022-11-10"},{"lineNumber":102,"author":{"gitId":"e0493677"},"content":"                default:","lastModifiedDate":"2022-11-10"},{"lineNumber":103,"author":{"gitId":"e0493677"},"content":"                    throw new InvalidTaskCommand(\"Please enter a correct command\");","lastModifiedDate":"2022-11-11"},{"lineNumber":104,"author":{"gitId":"e0493677"},"content":"            }","lastModifiedDate":"2022-11-11"},{"lineNumber":105,"author":{"gitId":"e0493677"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-11-11"},{"lineNumber":106,"author":{"gitId":"e0493677"},"content":"            throw new InvalidTaskCommand(\"Please ensure parameter of command is valid\");","lastModifiedDate":"2022-11-11"},{"lineNumber":107,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":108,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":109,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":110,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-10"},{"lineNumber":111,"author":{"gitId":"e0493677"},"content":"     *  Parse command to add task command and identify if the task is todo, deadline or event","lastModifiedDate":"2022-11-12"},{"lineNumber":112,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":113,"author":{"gitId":"e0493677"},"content":"     * @param command user\u0027s command like \"todo, deadline, event\"","lastModifiedDate":"2022-11-12"},{"lineNumber":114,"author":{"gitId":"e0493677"},"content":"     * @param argument user\u0027s parameter for the command like \"return book /by 2/12/2019 1800, project meeting /at 5/10/2019 1000\"","lastModifiedDate":"2022-11-12"},{"lineNumber":115,"author":{"gitId":"e0493677"},"content":"     * @return the task in their respective class","lastModifiedDate":"2022-11-12"},{"lineNumber":116,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-10"},{"lineNumber":117,"author":{"gitId":"e0493677"},"content":"    private Task parseTask(String command, String argument){","lastModifiedDate":"2022-11-10"},{"lineNumber":118,"author":{"gitId":"e0493677"},"content":"        String[] argumentArr \u003d parseDueDate(argument);","lastModifiedDate":"2022-11-10"},{"lineNumber":119,"author":{"gitId":"e0493677"},"content":"        switch (command){","lastModifiedDate":"2022-11-10"},{"lineNumber":120,"author":{"gitId":"e0493677"},"content":"            case \"todo\":","lastModifiedDate":"2022-11-10"},{"lineNumber":121,"author":{"gitId":"e0493677"},"content":"                return new Todo(argumentArr[0]);","lastModifiedDate":"2022-11-10"},{"lineNumber":122,"author":{"gitId":"e0493677"},"content":"            case \"deadline\":","lastModifiedDate":"2022-11-10"},{"lineNumber":123,"author":{"gitId":"e0493677"},"content":"                return new Deadlines(argumentArr[0],argumentArr[1]);","lastModifiedDate":"2022-11-10"},{"lineNumber":124,"author":{"gitId":"e0493677"},"content":"            case \"event\":","lastModifiedDate":"2022-11-10"},{"lineNumber":125,"author":{"gitId":"e0493677"},"content":"                return new Events(argumentArr[0],argumentArr[1]);","lastModifiedDate":"2022-11-10"},{"lineNumber":126,"author":{"gitId":"e0493677"},"content":"            default:","lastModifiedDate":"2022-11-10"},{"lineNumber":127,"author":{"gitId":"e0493677"},"content":"                return null;","lastModifiedDate":"2022-11-10"},{"lineNumber":128,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":129,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":130,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":131,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-10"},{"lineNumber":132,"author":{"gitId":"e0493677"},"content":"     *  Parse due date and return String datetime in \"d MMM yyyy HH:mm\" format, example:","lastModifiedDate":"2022-11-10"},{"lineNumber":133,"author":{"gitId":"e0493677"},"content":"     *  2/12/2019 1800 -\u003e 2 Dec 2019 18:00","lastModifiedDate":"2022-11-10"},{"lineNumber":134,"author":{"gitId":"e0493677"},"content":"     *  5/10/2019 1000 -\u003e 5 Oct 2019 10:00","lastModifiedDate":"2022-11-10"},{"lineNumber":135,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":136,"author":{"gitId":"e0493677"},"content":"     * @param argument user\u0027s parameter for the command like \"return book /by 2/12/2019 1800, project meeting /at 5/10/2019 1000\"","lastModifiedDate":"2022-11-12"},{"lineNumber":137,"author":{"gitId":"e0493677"},"content":"     * @return the parsed date time format","lastModifiedDate":"2022-11-12"},{"lineNumber":138,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-10"},{"lineNumber":139,"author":{"gitId":"e0493677"},"content":"    private String[] parseDueDate(String argument) throws DateTimeException {","lastModifiedDate":"2022-11-11"},{"lineNumber":140,"author":{"gitId":"e0493677"},"content":"        try {","lastModifiedDate":"2022-11-11"},{"lineNumber":141,"author":{"gitId":"e0493677"},"content":"            String[] argumentArr \u003d {\"\", \"no due date\"}; //enum?","lastModifiedDate":"2022-11-10"},{"lineNumber":142,"author":{"gitId":"e0493677"},"content":"            if (argument.contains(\"/\")){","lastModifiedDate":"2022-11-10"},{"lineNumber":143,"author":{"gitId":"e0493677"},"content":"                argumentArr \u003d argument.trim().split(\"/by|/at\", 2); //To get description and due date","lastModifiedDate":"2022-11-11"},{"lineNumber":144,"author":{"gitId":"e0493677"},"content":"                argumentArr[0] \u003d argumentArr[0].trim();","lastModifiedDate":"2022-11-10"},{"lineNumber":145,"author":{"gitId":"e0493677"},"content":"                String dueDate \u003d argumentArr[1].trim();","lastModifiedDate":"2022-11-10"},{"lineNumber":146,"author":{"gitId":"e0493677"},"content":"                LocalDateTime dtFormat \u003d LocalDateTime.parse(dueDate, DateTimeFormatter.ofPattern(\"[dd/MM/yyyy HHmm][d/MM/yyyy HHmm]\"));","lastModifiedDate":"2022-11-10"},{"lineNumber":147,"author":{"gitId":"e0493677"},"content":"                argumentArr[1] \u003d dtFormat.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"));","lastModifiedDate":"2022-11-10"},{"lineNumber":148,"author":{"gitId":"e0493677"},"content":"            } else {","lastModifiedDate":"2022-11-10"},{"lineNumber":149,"author":{"gitId":"e0493677"},"content":"                argumentArr[0] \u003d argument;","lastModifiedDate":"2022-11-10"},{"lineNumber":150,"author":{"gitId":"e0493677"},"content":"            }","lastModifiedDate":"2022-11-10"},{"lineNumber":151,"author":{"gitId":"e0493677"},"content":"            return argumentArr;","lastModifiedDate":"2022-11-10"},{"lineNumber":152,"author":{"gitId":"e0493677"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-11"},{"lineNumber":153,"author":{"gitId":"e0493677"},"content":"            throw new DateTimeException(\"Invalid datetime format, please follow [dd/MM/yyyy HHmm] or [d/MM/yyyy HHmm]\");","lastModifiedDate":"2022-11-11"},{"lineNumber":154,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":155,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":156,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":157,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":158,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":159,"author":{"gitId":"e0493677"},"content":"     *  Retrieve tagging word with # from the command","lastModifiedDate":"2022-11-12"},{"lineNumber":160,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":161,"author":{"gitId":"e0493677"},"content":"     * @param argument user\u0027s parameter for the command","lastModifiedDate":"2022-11-12"},{"lineNumber":162,"author":{"gitId":"e0493677"},"content":"     * @return the tagging word","lastModifiedDate":"2022-11-12"},{"lineNumber":163,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":164,"author":{"gitId":"e0493677"},"content":"    private String getTagging(String argument){","lastModifiedDate":"2022-11-11"},{"lineNumber":165,"author":{"gitId":"e0493677"},"content":"        if (!argument.contains(\"#\")){","lastModifiedDate":"2022-11-11"},{"lineNumber":166,"author":{"gitId":"e0493677"},"content":"            return \"\";","lastModifiedDate":"2022-11-11"},{"lineNumber":167,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":168,"author":{"gitId":"e0493677"},"content":"        assert (argument.contains(\"#\"));","lastModifiedDate":"2022-11-11"},{"lineNumber":169,"author":{"gitId":"e0493677"},"content":"        String[] argumentArr \u003d argument.trim().split(\"#\", 2);","lastModifiedDate":"2022-11-11"},{"lineNumber":170,"author":{"gitId":"e0493677"},"content":"        return \"#\" + argumentArr[1].trim();","lastModifiedDate":"2022-11-11"},{"lineNumber":171,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":172,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":172}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Storage;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Deadlines;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Events;","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2022-11-11"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2022-11-11"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"import java.io.File;","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-10"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"/** Represents the file used to store task data. */","lastModifiedDate":"2022-11-11"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"public class Storage {","lastModifiedDate":"2022-11-10"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"    /** Default file path used if the user doesn\u0027t provide the file name. */","lastModifiedDate":"2022-11-10"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    public static final String STORAGE_FILEPATH \u003d \"C:/Users/User/Documents/duke/data/duke.txt\";","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"    protected static String filePath;","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"     *  Constructor of Storage","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     * @param filePath is the filepath to save or load data from","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"    public Storage(String filePath){","lastModifiedDate":"2022-11-10"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-11-11"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"     *  Save the task list to storage file","lastModifiedDate":"2022-11-12"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"     * @param taskList to be saved to the storage file","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"    public void saveList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"        try {","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"            File directory \u003d new File(filePath.substring(0,filePath.lastIndexOf(\"/\")+1));","lastModifiedDate":"2022-11-12"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"            assert (directory.exists());","lastModifiedDate":"2022-11-12"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-11-10"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"                if (task instanceof Events) {","lastModifiedDate":"2022-11-10"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"                    writer.write(\"Event | \" + task.getStatus()","lastModifiedDate":"2022-11-11"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"                            + \" | \" + task.getDescriptionOnly()","lastModifiedDate":"2022-11-10"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"                            + \" | \" + ((Events) task).getDueDate()","lastModifiedDate":"2022-11-11"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"                            + \" | \" + task.getTagging() + \"\\n\");","lastModifiedDate":"2022-11-11"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"                } else if (task instanceof Todo) {","lastModifiedDate":"2022-11-10"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"                    writer.write(\"Todo | \" + task.getStatus()","lastModifiedDate":"2022-11-11"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"                            + \" | \" + task.getDescriptionOnly()","lastModifiedDate":"2022-11-11"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"                            + \" | \" + task.getTagging() + \"\\n\");","lastModifiedDate":"2022-11-11"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"                } else if (task instanceof Deadlines) {","lastModifiedDate":"2022-11-10"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"                    writer.write(\"Deadline | \" + task.getStatus()","lastModifiedDate":"2022-11-11"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"                            + \" | \" + task.getDescriptionOnly()","lastModifiedDate":"2022-11-10"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"                            + \" | \" + ((Deadlines) task).getDueDate()","lastModifiedDate":"2022-11-11"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"                            + \" | \" + task.getTagging() + \"\\n\");","lastModifiedDate":"2022-11-11"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"                }","lastModifiedDate":"2022-11-10"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"            }","lastModifiedDate":"2022-11-10"},{"lineNumber":58,"author":{"gitId":"e0493677"},"content":"            writer.close();","lastModifiedDate":"2022-11-10"},{"lineNumber":59,"author":{"gitId":"e0493677"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-11-11"},{"lineNumber":60,"author":{"gitId":"e0493677"},"content":"            System.out.println(\"Failed writing to duke file: \" + e.getMessage());","lastModifiedDate":"2022-11-11"},{"lineNumber":61,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":62,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":63,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":64,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-10"},{"lineNumber":65,"author":{"gitId":"e0493677"},"content":"     * Loads the task list from this storage file, and then returns it.","lastModifiedDate":"2022-11-10"},{"lineNumber":66,"author":{"gitId":"e0493677"},"content":"     * Returns an empty task list if the file does not exist, or is not a regular file.","lastModifiedDate":"2022-11-10"},{"lineNumber":67,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":68,"author":{"gitId":"e0493677"},"content":"     * @return a task list with the loaded data from filepath","lastModifiedDate":"2022-11-12"},{"lineNumber":69,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-10"},{"lineNumber":70,"author":{"gitId":"e0493677"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2022-11-10"},{"lineNumber":71,"author":{"gitId":"e0493677"},"content":"        if (filePath.isEmpty()){","lastModifiedDate":"2022-11-12"},{"lineNumber":72,"author":{"gitId":"e0493677"},"content":"            filePath \u003d STORAGE_FILEPATH;","lastModifiedDate":"2022-11-12"},{"lineNumber":73,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-12"},{"lineNumber":74,"author":{"gitId":"e0493677"},"content":"        Task currTask \u003d null;","lastModifiedDate":"2022-11-10"},{"lineNumber":75,"author":{"gitId":"e0493677"},"content":"        ArrayList\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-10"},{"lineNumber":76,"author":{"gitId":"e0493677"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-11-10"},{"lineNumber":77,"author":{"gitId":"e0493677"},"content":"        File directory \u003d new File(f.getAbsolutePath().substring(0,f.getAbsolutePath().lastIndexOf(\"\\\\\")+1));","lastModifiedDate":"2022-11-12"},{"lineNumber":78,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":79,"author":{"gitId":"e0493677"},"content":"        if(!directory.exists()){","lastModifiedDate":"2022-11-12"},{"lineNumber":80,"author":{"gitId":"e0493677"},"content":"            if(!directory.mkdir()){","lastModifiedDate":"2022-11-12"},{"lineNumber":81,"author":{"gitId":"e0493677"},"content":"                throw new IOException(\"Parent directory does not exist: \" + directory.getAbsolutePath());","lastModifiedDate":"2022-11-12"},{"lineNumber":82,"author":{"gitId":"e0493677"},"content":"            }","lastModifiedDate":"2022-11-12"},{"lineNumber":83,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-12"},{"lineNumber":84,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":85,"author":{"gitId":"e0493677"},"content":"        if(!f.exists() || !f.getPath().contains(\".txt\")) {","lastModifiedDate":"2022-11-12"},{"lineNumber":86,"author":{"gitId":"e0493677"},"content":"            return listOfTask;","lastModifiedDate":"2022-11-10"},{"lineNumber":87,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":88,"author":{"gitId":"e0493677"},"content":"        Scanner myReader \u003d new Scanner(f);","lastModifiedDate":"2022-11-10"},{"lineNumber":89,"author":{"gitId":"e0493677"},"content":"        while (myReader.hasNextLine()) {","lastModifiedDate":"2022-11-10"},{"lineNumber":90,"author":{"gitId":"e0493677"},"content":"            String line \u003d myReader.nextLine();","lastModifiedDate":"2022-11-10"},{"lineNumber":91,"author":{"gitId":"e0493677"},"content":"            String[] arguments \u003d line.split(\"\\\\s\\\\|\");","lastModifiedDate":"2022-11-11"},{"lineNumber":92,"author":{"gitId":"e0493677"},"content":"            trimArray(arguments);","lastModifiedDate":"2022-11-11"},{"lineNumber":93,"author":{"gitId":"e0493677"},"content":"            switch (arguments[0]) {","lastModifiedDate":"2022-11-10"},{"lineNumber":94,"author":{"gitId":"e0493677"},"content":"                case \"Event\":","lastModifiedDate":"2022-11-10"},{"lineNumber":95,"author":{"gitId":"e0493677"},"content":"                    currTask \u003d new Events(arguments[2], arguments[3]);","lastModifiedDate":"2022-11-10"},{"lineNumber":96,"author":{"gitId":"e0493677"},"content":"                    if (arguments.length \u003e 4){","lastModifiedDate":"2022-11-11"},{"lineNumber":97,"author":{"gitId":"e0493677"},"content":"                        currTask.addTagging(arguments[4]);","lastModifiedDate":"2022-11-11"},{"lineNumber":98,"author":{"gitId":"e0493677"},"content":"                    }","lastModifiedDate":"2022-11-11"},{"lineNumber":99,"author":{"gitId":"e0493677"},"content":"                    break;","lastModifiedDate":"2022-11-10"},{"lineNumber":100,"author":{"gitId":"e0493677"},"content":"                case \"Deadline\":","lastModifiedDate":"2022-11-10"},{"lineNumber":101,"author":{"gitId":"e0493677"},"content":"                    currTask \u003d new Deadlines(arguments[2], arguments[3]);","lastModifiedDate":"2022-11-10"},{"lineNumber":102,"author":{"gitId":"e0493677"},"content":"                    if (arguments.length \u003e 4){","lastModifiedDate":"2022-11-11"},{"lineNumber":103,"author":{"gitId":"e0493677"},"content":"                        currTask.addTagging(arguments[4]);","lastModifiedDate":"2022-11-11"},{"lineNumber":104,"author":{"gitId":"e0493677"},"content":"                    }","lastModifiedDate":"2022-11-11"},{"lineNumber":105,"author":{"gitId":"e0493677"},"content":"                    break;","lastModifiedDate":"2022-11-10"},{"lineNumber":106,"author":{"gitId":"e0493677"},"content":"                case \"Todo\":","lastModifiedDate":"2022-11-10"},{"lineNumber":107,"author":{"gitId":"e0493677"},"content":"                    currTask \u003d new Todo(arguments[2]);","lastModifiedDate":"2022-11-10"},{"lineNumber":108,"author":{"gitId":"e0493677"},"content":"                    if(arguments.length \u003e 3){","lastModifiedDate":"2022-11-11"},{"lineNumber":109,"author":{"gitId":"e0493677"},"content":"                        currTask.addTagging(arguments[3]);","lastModifiedDate":"2022-11-11"},{"lineNumber":110,"author":{"gitId":"e0493677"},"content":"                    }","lastModifiedDate":"2022-11-11"},{"lineNumber":111,"author":{"gitId":"e0493677"},"content":"            }","lastModifiedDate":"2022-11-10"},{"lineNumber":112,"author":{"gitId":"e0493677"},"content":"            if (arguments[1].equals(\"false\")) {","lastModifiedDate":"2022-11-10"},{"lineNumber":113,"author":{"gitId":"e0493677"},"content":"                currTask.unmarkTask();","lastModifiedDate":"2022-11-10"},{"lineNumber":114,"author":{"gitId":"e0493677"},"content":"            } else {","lastModifiedDate":"2022-11-10"},{"lineNumber":115,"author":{"gitId":"e0493677"},"content":"                currTask.markTask();","lastModifiedDate":"2022-11-10"},{"lineNumber":116,"author":{"gitId":"e0493677"},"content":"            }","lastModifiedDate":"2022-11-10"},{"lineNumber":117,"author":{"gitId":"e0493677"},"content":"            listOfTask.add(currTask);","lastModifiedDate":"2022-11-10"},{"lineNumber":118,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":119,"author":{"gitId":"e0493677"},"content":"        myReader.close();","lastModifiedDate":"2022-11-10"},{"lineNumber":120,"author":{"gitId":"e0493677"},"content":"        return listOfTask;","lastModifiedDate":"2022-11-10"},{"lineNumber":121,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":122,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":123,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":124,"author":{"gitId":"e0493677"},"content":"     * To trim all String element in a String array","lastModifiedDate":"2022-11-12"},{"lineNumber":125,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":126,"author":{"gitId":"e0493677"},"content":"     * @param arguments is the String array to be trimmed","lastModifiedDate":"2022-11-12"},{"lineNumber":127,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":128,"author":{"gitId":"e0493677"},"content":"    private void trimArray(String[] arguments){","lastModifiedDate":"2022-11-11"},{"lineNumber":129,"author":{"gitId":"e0493677"},"content":"        for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2022-11-11"},{"lineNumber":130,"author":{"gitId":"e0493677"},"content":"            arguments[i] \u003d arguments[i].trim();","lastModifiedDate":"2022-11-11"},{"lineNumber":131,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":132,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":133,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":133}},{"path":"src/main/java/Duke/Tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":" * Represents a Deadline in the task list.","lastModifiedDate":"2022-11-10"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"    protected String due;","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"     *  Constructor of Deadlines","lastModifiedDate":"2022-11-12"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"     * @param description to describe what needs to be done for the Deadline","lastModifiedDate":"2022-11-12"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"     * @param due is the due date of the Deadline","lastModifiedDate":"2022-11-12"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"    public Deadlines(String description, String due) {","lastModifiedDate":"2022-11-10"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"        super(description,\"Deadlines\");","lastModifiedDate":"2022-11-11"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"        this.due \u003d due;","lastModifiedDate":"2022-11-10"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"     * To retrieve the description of a Deadline","lastModifiedDate":"2022-11-12"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     * @return a String with the description of the Deadline","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"    public String getDescription() {","lastModifiedDate":"2022-11-10"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"        return \"[D]\" + super.getDescription() + \" (\" + due +\")\";","lastModifiedDate":"2022-11-10"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"     * To retrieve the due date of a Deadline","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"     * @return a String with the due date of the Deadline","lastModifiedDate":"2022-11-12"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"    public String getDueDate(){","lastModifiedDate":"2022-11-11"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        return due;","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":37}},{"path":"src/main/java/Duke/Tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":" * Represents an Event in the task list.","lastModifiedDate":"2022-11-10"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"public class Events extends Task{","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"    protected String due;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"     *  Constructor of Events","lastModifiedDate":"2022-11-12"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"     * @param description to describe what needs to be done for the Events","lastModifiedDate":"2022-11-12"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"     * @param due is the due date of the Events","lastModifiedDate":"2022-11-12"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"    public Events(String description, String due) {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"        super(description,\"Events\");","lastModifiedDate":"2022-11-11"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"        this.due \u003d due;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"     * To retrieve the description of a Events","lastModifiedDate":"2022-11-12"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     * @return a String with the description of the Events","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"        return \"[E]\" + super.getDescription() + \" (\" + due +\")\";","lastModifiedDate":"2022-11-10"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"     * To retrieve the due date of a Events","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"     * @return a String with the due date of the Events","lastModifiedDate":"2022-11-12"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"    public String getDueDate(){","lastModifiedDate":"2022-11-11"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        return due;","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"e0493677":37}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":" * Represents a Task which inherits Todo, Events and Deadlines.","lastModifiedDate":"2022-11-12"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"public class Task {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"    public ArrayList\u003cString\u003e tagging \u003d new ArrayList();","lastModifiedDate":"2022-11-11"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"    protected String description;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"    protected String taskType;","lastModifiedDate":"2022-11-11"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"     *  Constructor of Task","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"     * @param description to describe what needs to be done for the Task","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"     * @param taskType is the type of task like Todo, Events and Deadlines","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    public Task(String description, String taskType) {","lastModifiedDate":"2022-11-11"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-11-11"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     * To retrieve the full description of a Task","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"     * @return a String with the description of the Task with marking and tagging","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"        String mark \u003d this.getStatus() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"        mark \u003d mark.concat(\" \" + description + \" \");","lastModifiedDate":"2022-11-11"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"        mark \u003d mark.concat(this.getTagging());","lastModifiedDate":"2022-11-11"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        return mark;","lastModifiedDate":"2022-11-11"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"     * To retrieve the description of a Task","lastModifiedDate":"2022-11-12"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"     * @return a String with the description of the Task","lastModifiedDate":"2022-11-12"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"    public String getDescriptionOnly() {","lastModifiedDate":"2022-11-10"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"        return description;","lastModifiedDate":"2022-11-10"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"     * To retrieve the completion status of a Task","lastModifiedDate":"2022-11-12"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"     * @return a boolean which indicates the completion status of the task","lastModifiedDate":"2022-11-12"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"    public boolean getStatus(){","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"        return isDone;","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"     * To set the completion status of a Task","lastModifiedDate":"2022-11-12"},{"lineNumber":58,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":59,"author":{"gitId":"e0493677"},"content":"     * @param b is a boolean to indicate if the task is completed or not","lastModifiedDate":"2022-11-12"},{"lineNumber":60,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":61,"author":{"gitId":"e0493677"},"content":"    private void setStatus(boolean b){","lastModifiedDate":"2022-11-10"},{"lineNumber":62,"author":{"gitId":"e0493677"},"content":"        isDone \u003d b;","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":65,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":66,"author":{"gitId":"e0493677"},"content":"     * To mark a task as completed","lastModifiedDate":"2022-11-12"},{"lineNumber":67,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":68,"author":{"gitId":"e0493677"},"content":"    public void markTask(){","lastModifiedDate":"2022-11-10"},{"lineNumber":69,"author":{"gitId":"e0493677"},"content":"        this.setStatus(true);","lastModifiedDate":"2022-11-10"},{"lineNumber":70,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":71,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":72,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":73,"author":{"gitId":"e0493677"},"content":"     * To mark a task as not completed","lastModifiedDate":"2022-11-12"},{"lineNumber":74,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":75,"author":{"gitId":"e0493677"},"content":"    public void unmarkTask(){","lastModifiedDate":"2022-11-10"},{"lineNumber":76,"author":{"gitId":"e0493677"},"content":"        this.setStatus(false);","lastModifiedDate":"2022-11-10"},{"lineNumber":77,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":78,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":79,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":80,"author":{"gitId":"e0493677"},"content":"     * To add a tagging to a task","lastModifiedDate":"2022-11-12"},{"lineNumber":81,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":82,"author":{"gitId":"e0493677"},"content":"     * @param tag is the tagging to be added to a task","lastModifiedDate":"2022-11-12"},{"lineNumber":83,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":84,"author":{"gitId":"e0493677"},"content":"    public void addTagging(String tag){","lastModifiedDate":"2022-11-11"},{"lineNumber":85,"author":{"gitId":"e0493677"},"content":"        tagging.add(tag);","lastModifiedDate":"2022-11-11"},{"lineNumber":86,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":87,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":88,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":89,"author":{"gitId":"e0493677"},"content":"     * To get all taggings from a task","lastModifiedDate":"2022-11-12"},{"lineNumber":90,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":91,"author":{"gitId":"e0493677"},"content":"     * @return a String which contains all tagging of a task","lastModifiedDate":"2022-11-12"},{"lineNumber":92,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":93,"author":{"gitId":"e0493677"},"content":"    public String getTagging(){","lastModifiedDate":"2022-11-11"},{"lineNumber":94,"author":{"gitId":"e0493677"},"content":"        if(tagging.isEmpty()){ return \"\"; }","lastModifiedDate":"2022-11-11"},{"lineNumber":95,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":96,"author":{"gitId":"e0493677"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-11-11"},{"lineNumber":97,"author":{"gitId":"e0493677"},"content":"        for (String t: tagging) {","lastModifiedDate":"2022-11-11"},{"lineNumber":98,"author":{"gitId":"e0493677"},"content":"            output \u003d output.concat(t + \" \");","lastModifiedDate":"2022-11-11"},{"lineNumber":99,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-11"},{"lineNumber":100,"author":{"gitId":"e0493677"},"content":"        return output;","lastModifiedDate":"2022-11-11"},{"lineNumber":101,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":102,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":103,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":104,"author":{"gitId":"e0493677"},"content":"     * To get task type of a task","lastModifiedDate":"2022-11-12"},{"lineNumber":105,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":106,"author":{"gitId":"e0493677"},"content":"     * @return a String which the task type of a task","lastModifiedDate":"2022-11-12"},{"lineNumber":107,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":108,"author":{"gitId":"e0493677"},"content":"    public String getTaskType(){","lastModifiedDate":"2022-11-11"},{"lineNumber":109,"author":{"gitId":"e0493677"},"content":"        return taskType;","lastModifiedDate":"2022-11-11"},{"lineNumber":110,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":111,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":112,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"e0493677":112}},{"path":"src/main/java/Duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-10"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":" * Represents the Task List, contains the data of Task.","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"public class TaskList {","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-11-10"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"     *  Constructor of TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"     * @param taskList is an ArrayList of task to store task","lastModifiedDate":"2022-11-12"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-11-10"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-11-10"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"     *  To add a task to the TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     * @param task to be added to the TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-11-10"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"        taskList.add(task);","lastModifiedDate":"2022-11-10"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"     * To get size of TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"     * @return an Int which contains the size of TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"    public int getSize() {","lastModifiedDate":"2022-11-10"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"        return taskList.size();","lastModifiedDate":"2022-11-10"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"     *  To remove a task from TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"     * @param task to be removed from the TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2022-11-10"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"        taskList.remove(task);","lastModifiedDate":"2022-11-10"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"     *  To retrieve a task from TaskList base on position","lastModifiedDate":"2022-11-12"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"     * @param selection is the position of task to be retrieved from the TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"     * @return the Task which is retrieved from the TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"    public Task getTask(int selection){","lastModifiedDate":"2022-11-10"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"        return taskList.get(selection);","lastModifiedDate":"2022-11-10"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":58,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":59,"author":{"gitId":"e0493677"},"content":"     *  To retrieve all task from TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":60,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":61,"author":{"gitId":"e0493677"},"content":"     * @return an ArrayList which contains all Tasks from the TaskList","lastModifiedDate":"2022-11-12"},{"lineNumber":62,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":63,"author":{"gitId":"e0493677"},"content":"    public ArrayList\u003cTask\u003e getListOfTask(){","lastModifiedDate":"2022-11-10"},{"lineNumber":64,"author":{"gitId":"e0493677"},"content":"        return taskList;","lastModifiedDate":"2022-11-10"},{"lineNumber":65,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":66,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":66}},{"path":"src/main/java/Duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.Tasks;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-10"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":" * Represents a Todo in the task list.","lastModifiedDate":"2022-11-10"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"     *  Constructor of Todo","lastModifiedDate":"2022-11-12"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"     * @param description to describe what needs to be done for the Todo","lastModifiedDate":"2022-11-12"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"        super(description, \"Todo\");","lastModifiedDate":"2022-11-11"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"     * To retrieve the description of a Todo","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"     * @return a String with the description of the Todo","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"    public String getDescription() {","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"        return \"[T]\" + super.getDescription();","lastModifiedDate":"2022-11-10"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":24}},{"path":"src/main/java/Duke/UI/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke.UI;","lastModifiedDate":"2022-11-11"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Common.Messages;","lastModifiedDate":"2022-11-11"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-11-10"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-11-10"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-11-10"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"/**","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":" * Represents an Ui which will display information for the user","lastModifiedDate":"2022-11-12"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":" */","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"public class Ui {","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"    private final Scanner in;","lastModifiedDate":"2022-11-10"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-11-10"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    public Ui() {","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"        this(System.in, System.out);","lastModifiedDate":"2022-11-10"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"     *  Constructor of Ui","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"     * @param in to get command from user","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"     * @param out to output the result of executed command","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2022-11-10"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2022-11-10"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"        this.out \u003d out;","lastModifiedDate":"2022-11-10"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"     *  To get user\u0027s command","lastModifiedDate":"2022-11-12"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"     * @return a String with the user\u0027s command","lastModifiedDate":"2022-11-12"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"    public String getUserCommand() {","lastModifiedDate":"2022-11-10"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"        return in.nextLine();","lastModifiedDate":"2022-11-10"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"     *  To get user\u0027s confirmation","lastModifiedDate":"2022-11-12"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"     * @param warning to output the warning message for user to confirm","lastModifiedDate":"2022-11-12"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"     * @return a boolean with the user\u0027s confirmation","lastModifiedDate":"2022-11-12"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"    public boolean getUserConfirmation(String warning) {","lastModifiedDate":"2022-11-11"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"        assert (!warning.isEmpty());","lastModifiedDate":"2022-11-11"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"        System.out.println(warning);","lastModifiedDate":"2022-11-11"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"        System.out.println(\"(Y/N)\");","lastModifiedDate":"2022-11-11"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"        return in.nextLine().equalsIgnoreCase(\"y\");","lastModifiedDate":"2022-11-11"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-11"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-11"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"     *  To print welcome message","lastModifiedDate":"2022-11-12"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":58,"author":{"gitId":"e0493677"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2022-11-10"},{"lineNumber":59,"author":{"gitId":"e0493677"},"content":"        printMessage(Messages.LOGO, Messages.MESSAGE_WELCOME);","lastModifiedDate":"2022-11-10"},{"lineNumber":60,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":61,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":62,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":63,"author":{"gitId":"e0493677"},"content":"     *  To print multiple String of messages","lastModifiedDate":"2022-11-12"},{"lineNumber":64,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":65,"author":{"gitId":"e0493677"},"content":"     * @param message is an array of parameters of type String to be printed out one by one","lastModifiedDate":"2022-11-12"},{"lineNumber":66,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":67,"author":{"gitId":"e0493677"},"content":"    public void printMessage(String... message) {","lastModifiedDate":"2022-11-10"},{"lineNumber":68,"author":{"gitId":"e0493677"},"content":"        for (String m : message) {","lastModifiedDate":"2022-11-10"},{"lineNumber":69,"author":{"gitId":"e0493677"},"content":"            out.println(m.replace(\"\\n\", LS));","lastModifiedDate":"2022-11-10"},{"lineNumber":70,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-10"},{"lineNumber":71,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":72,"author":{"gitId":"e0493677"},"content":"    /**","lastModifiedDate":"2022-11-12"},{"lineNumber":73,"author":{"gitId":"e0493677"},"content":"     *  To print an output","lastModifiedDate":"2022-11-12"},{"lineNumber":74,"author":{"gitId":"e0493677"},"content":"     *","lastModifiedDate":"2022-11-12"},{"lineNumber":75,"author":{"gitId":"e0493677"},"content":"     * @param output is a String to be printed out","lastModifiedDate":"2022-11-12"},{"lineNumber":76,"author":{"gitId":"e0493677"},"content":"     */","lastModifiedDate":"2022-11-12"},{"lineNumber":77,"author":{"gitId":"e0493677"},"content":"    public void showResultToUser(String output) {","lastModifiedDate":"2022-11-10"},{"lineNumber":78,"author":{"gitId":"e0493677"},"content":"        System.out.println(output);","lastModifiedDate":"2022-11-10"},{"lineNumber":79,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":80,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":81,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":81}},{"path":"src/test/java/Duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0493677"},"content":"package Duke;","lastModifiedDate":"2022-11-10"},{"lineNumber":2,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":3,"author":{"gitId":"e0493677"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2022-11-10"},{"lineNumber":4,"author":{"gitId":"e0493677"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2022-11-12"},{"lineNumber":5,"author":{"gitId":"e0493677"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-11-12"},{"lineNumber":6,"author":{"gitId":"e0493677"},"content":"import Duke.Tasks.*;","lastModifiedDate":"2022-11-12"},{"lineNumber":7,"author":{"gitId":"e0493677"},"content":"import Duke.UI.Ui;","lastModifiedDate":"2022-11-12"},{"lineNumber":8,"author":{"gitId":"e0493677"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-10"},{"lineNumber":9,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"e0493677"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-12"},{"lineNumber":11,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":12,"author":{"gitId":"e0493677"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-10"},{"lineNumber":13,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"e0493677"},"content":"public class DukeTest {","lastModifiedDate":"2022-11-10"},{"lineNumber":15,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":16,"author":{"gitId":"e0493677"},"content":"    String filePath \u003d \"data/test.txt\";","lastModifiedDate":"2022-11-12"},{"lineNumber":17,"author":{"gitId":"e0493677"},"content":"    Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-11-12"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2022-11-12"},{"lineNumber":19,"author":{"gitId":"e0493677"},"content":"    TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-11-12"},{"lineNumber":20,"author":{"gitId":"e0493677"},"content":"    Parser p \u003d new Parser();","lastModifiedDate":"2022-11-12"},{"lineNumber":21,"author":{"gitId":"e0493677"},"content":"","lastModifiedDate":"2022-11-12"},{"lineNumber":22,"author":{"gitId":"e0493677"},"content":"    public String testCommand(String command){","lastModifiedDate":"2022-11-12"},{"lineNumber":23,"author":{"gitId":"e0493677"},"content":"        try {","lastModifiedDate":"2022-11-12"},{"lineNumber":24,"author":{"gitId":"e0493677"},"content":"            Command c \u003d p.parseCommand(command);","lastModifiedDate":"2022-11-12"},{"lineNumber":25,"author":{"gitId":"e0493677"},"content":"            String output \u003d c.execute(storage, taskList);","lastModifiedDate":"2022-11-12"},{"lineNumber":26,"author":{"gitId":"e0493677"},"content":"            return output;","lastModifiedDate":"2022-11-12"},{"lineNumber":27,"author":{"gitId":"e0493677"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-11-12"},{"lineNumber":28,"author":{"gitId":"e0493677"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2022-11-12"},{"lineNumber":29,"author":{"gitId":"e0493677"},"content":"        }","lastModifiedDate":"2022-11-12"},{"lineNumber":30,"author":{"gitId":"e0493677"},"content":"        return \"\";","lastModifiedDate":"2022-11-12"},{"lineNumber":31,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-12"},{"lineNumber":32,"author":{"gitId":"e0493677"},"content":"    @Test","lastModifiedDate":"2022-11-12"},{"lineNumber":33,"author":{"gitId":"e0493677"},"content":"    public void testEmptyList(){","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"e0493677"},"content":"        String command \u003d \"list\";","lastModifiedDate":"2022-11-12"},{"lineNumber":35,"author":{"gitId":"e0493677"},"content":"        assertEquals(testCommand(command),\"Task list is empty\");","lastModifiedDate":"2022-11-12"},{"lineNumber":36,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-12"},{"lineNumber":37,"author":{"gitId":"e0493677"},"content":"    @Test","lastModifiedDate":"2022-11-10"},{"lineNumber":38,"author":{"gitId":"e0493677"},"content":"    public void testTodo(){","lastModifiedDate":"2022-11-10"},{"lineNumber":39,"author":{"gitId":"e0493677"},"content":"        String command \u003d \"Todo test\";","lastModifiedDate":"2022-11-12"},{"lineNumber":40,"author":{"gitId":"e0493677"},"content":"        assertEquals(testCommand(command),\"Got it! I have added this task to your list:\\n\" +","lastModifiedDate":"2022-11-12"},{"lineNumber":41,"author":{"gitId":"e0493677"},"content":"                \"  [T][ ] test \\n\" +","lastModifiedDate":"2022-11-12"},{"lineNumber":42,"author":{"gitId":"e0493677"},"content":"                \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2022-11-12"},{"lineNumber":43,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-12"},{"lineNumber":44,"author":{"gitId":"e0493677"},"content":"    @Test","lastModifiedDate":"2022-11-12"},{"lineNumber":45,"author":{"gitId":"e0493677"},"content":"    public void testDeadline(){","lastModifiedDate":"2022-11-12"},{"lineNumber":46,"author":{"gitId":"e0493677"},"content":"        String command \u003d \"deadline test /by 2/12/2019 1800\";","lastModifiedDate":"2022-11-12"},{"lineNumber":47,"author":{"gitId":"e0493677"},"content":"        assertEquals(testCommand(command),\"Got it! I have added this task to your list:\\n\" +","lastModifiedDate":"2022-11-12"},{"lineNumber":48,"author":{"gitId":"e0493677"},"content":"                \"  [D][ ] test  (2 Dec 2019 18:00)\\n\" +","lastModifiedDate":"2022-11-12"},{"lineNumber":49,"author":{"gitId":"e0493677"},"content":"                \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2022-11-12"},{"lineNumber":50,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":51,"author":{"gitId":"e0493677"},"content":"    @Test","lastModifiedDate":"2022-11-10"},{"lineNumber":52,"author":{"gitId":"e0493677"},"content":"    public void testEvent(){","lastModifiedDate":"2022-11-10"},{"lineNumber":53,"author":{"gitId":"e0493677"},"content":"        String command \u003d \"event test /at 5/10/2019 1000\";","lastModifiedDate":"2022-11-12"},{"lineNumber":54,"author":{"gitId":"e0493677"},"content":"        assertEquals(testCommand(command),\"Got it! I have added this task to your list:\\n\" +","lastModifiedDate":"2022-11-12"},{"lineNumber":55,"author":{"gitId":"e0493677"},"content":"                \"  [E][ ] test  (5 Oct 2019 10:00)\\n\" +","lastModifiedDate":"2022-11-12"},{"lineNumber":56,"author":{"gitId":"e0493677"},"content":"                \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2022-11-12"},{"lineNumber":57,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":58,"author":{"gitId":"e0493677"},"content":"    @Test","lastModifiedDate":"2022-11-10"},{"lineNumber":59,"author":{"gitId":"e0493677"},"content":"    public void testMark(){","lastModifiedDate":"2022-11-12"},{"lineNumber":60,"author":{"gitId":"e0493677"},"content":"        testCommand(\"event test /at 5/10/2019 1000\");","lastModifiedDate":"2022-11-12"},{"lineNumber":61,"author":{"gitId":"e0493677"},"content":"        String command \u003d \"mark 1\";","lastModifiedDate":"2022-11-12"},{"lineNumber":62,"author":{"gitId":"e0493677"},"content":"        assertEquals(testCommand(command),\"[E][X] test  (5 Oct 2019 10:00)\");","lastModifiedDate":"2022-11-12"},{"lineNumber":63,"author":{"gitId":"e0493677"},"content":"        testCommand(\"event test /at 5/10/2019 1000\");","lastModifiedDate":"2022-11-12"},{"lineNumber":64,"author":{"gitId":"e0493677"},"content":"        command \u003d \"unmark 1\";","lastModifiedDate":"2022-11-12"},{"lineNumber":65,"author":{"gitId":"e0493677"},"content":"        assertEquals(testCommand(command),\"[E][ ] test  (5 Oct 2019 10:00)\");","lastModifiedDate":"2022-11-12"},{"lineNumber":66,"author":{"gitId":"e0493677"},"content":"    }","lastModifiedDate":"2022-11-10"},{"lineNumber":67,"author":{"gitId":"e0493677"},"content":"}","lastModifiedDate":"2022-11-10"}],"authorContributionMap":{"e0493677":67}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"e0493677"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-11-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"e0493677":1,"-":20}}]
