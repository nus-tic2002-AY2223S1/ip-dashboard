[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Ayesh02":2}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"ID | Type | Is Done | Name | Remarks","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"1 | T | 0 | read book","lastModifiedDate":"2022-11-12"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"2 | E | 0 | discussion | 2022-12-03T14:00","lastModifiedDate":"2022-11-12"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"3 | E | 0 | project meeting | 2022-12-12T09:00","lastModifiedDate":"2022-11-12"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"4 | E | 0 | Night Festival | 2022-12-31T00:00","lastModifiedDate":"2022-11-12"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"6 | D | 0 | Submit Timesheet | 2022-11-14T09:00","lastModifiedDate":"2022-11-12"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"7 | D | 0 | submit tax declaration | 2023-01-02T12:30","lastModifiedDate":"2022-11-12"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"8 | D | 0 | submit tax declaration | 2022-12-31T00:00","lastModifiedDate":"2022-11-12"}],"authorContributionMap":{"Ayesh02":8}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"import application.userinterface.Ui;","lastModifiedDate":"2022-11-08"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    public static Ui ui;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"        ui.initialise();","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"Ayesh02":5}},{"path":"src/main/java/application/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Task;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeExistedException;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"public class AddTaskCommand extends Command{","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    private final Task task;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"     * Initialises AddTaskCommand.","lastModifiedDate":"2022-11-09"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"     * @param task Task.","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"    public AddTaskCommand(Tracker tracker, Storage storage, Task task) {","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"        super(tracker, storage);","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     * Handles add task and Appends to local data file.","lastModifiedDate":"2022-11-09"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    public void execute() throws DukeExistedException, DukeFileException {","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"        if(this.tracker.hasItemAdded(task)) {","lastModifiedDate":"2022-11-08"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"            this.storage.saveItem(task.toString());","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"Ayesh02":34}},{"path":"src/main/java/application/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeExistedException;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeNotFoundException;","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"public abstract class Command{","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    protected Tracker tracker;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    protected Storage storage;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"     * Initialises Command.","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    public Command(Tracker tracker, Storage storage){","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"        this.tracker \u003d tracker;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     * Executes command.","lastModifiedDate":"2022-11-09"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeExistedException if adds task that already exists.","lastModifiedDate":"2022-11-09"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if modifies a task that does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if required task properties are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"    public abstract void execute() throws DukeExistedException, DukeNotFoundException, DukeValidationException, DukeFileException, DukeArgumentException;","lastModifiedDate":"2022-11-08"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ayesh02":37}},{"path":"src/main/java/application/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeNotFoundException;","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"public class DeleteTaskCommand extends Command{","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    private final int id;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"     * Initialises DeleteTaskCommand.","lastModifiedDate":"2022-11-09"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    public DeleteTaskCommand(Tracker tracker, Storage storage, int id) {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"        super(tracker, storage);","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     * Handles delete task and Updates to local data file.","lastModifiedDate":"2022-11-09"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    public void execute() throws DukeFileException, DukeArgumentException, DukeNotFoundException {","lastModifiedDate":"2022-11-09"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        if(this.tracker.hasItemDeleted(id)) {","lastModifiedDate":"2022-11-08"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"            this.storage.override(tracker.tasks);","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"Ayesh02":35}},{"path":"src/main/java/application/commands/FilterTaskByDatesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"public class FilterTaskByDatesCommand extends Command{","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    private final LocalDate start;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"    private LocalDate end \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     * Initialises FilterTaskByDatesCommand.","lastModifiedDate":"2022-11-09"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    public FilterTaskByDatesCommand(Tracker tracker, Storage storage, String input) throws DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"        super(tracker, storage);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"        String[] splitInput \u003d input.split(\"to\");","lastModifiedDate":"2022-11-08"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"        if(splitInput.length \u003e 1) {","lastModifiedDate":"2022-11-08"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"            end \u003d CommonHelper.convertStringToDate(splitInput[1].trim()).toLocalDate();","lastModifiedDate":"2022-11-08"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"        start \u003d CommonHelper.convertStringToDate(splitInput[0].trim()).toLocalDate();","lastModifiedDate":"2022-11-08"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"     * Handles filter by date range capability","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"    public void execute() {","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"        this.tracker.filterByDates(start, end);","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Ayesh02":39}},{"path":"src/main/java/application/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-11-08"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-11-08"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-11-08"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"public class FindTaskCommand extends Command{","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    private String keyword \u003d null;","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-08"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"     * Initialises FindTaskCommand.","lastModifiedDate":"2022-11-09"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     * @param keyword String.","lastModifiedDate":"2022-11-09"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-08"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    public FindTaskCommand(Tracker tracker, Storage storage, String keyword){","lastModifiedDate":"2022-11-08"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"        super(tracker, storage);","lastModifiedDate":"2022-11-08"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-11-08"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-08"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"     * Handles filter by date range capability.","lastModifiedDate":"2022-11-09"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-08"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-11-08"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"    public void execute() throws DukeValidationException {","lastModifiedDate":"2022-11-08"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"        this.tracker.find(keyword);","lastModifiedDate":"2022-11-08"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-11-08"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"Ayesh02":31}},{"path":"src/main/java/application/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeNotFoundException;","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"public class MarkTaskCommand extends Command{","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    private final int id;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"     * Initialises MarkTaskCommand.","lastModifiedDate":"2022-11-09"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    public MarkTaskCommand(Tracker tracker, Storage storage, int id) {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"        super(tracker, storage);","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     * Handles mark task as done and Updates to local data file.","lastModifiedDate":"2022-11-09"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    public void execute() throws DukeFileException, DukeArgumentException, DukeNotFoundException {","lastModifiedDate":"2022-11-09"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        if(this.tracker.hasItemStateUpdated(id, true)) {","lastModifiedDate":"2022-11-09"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"            this.storage.override(tracker.tasks);","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"Ayesh02":35}},{"path":"src/main/java/application/commands/SnoozeTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-11-02"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-11-02"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeNotFoundException;","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeExistedException;","lastModifiedDate":"2022-11-12"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"public class SnoozeTaskCommand extends Command{","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    private int id;","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    private String newDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"    private boolean isNewDateTimeSpecified;","lastModifiedDate":"2022-11-08"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     * Initialises SnoozeTaskCommand.","lastModifiedDate":"2022-11-09"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"     * @param newDateTime String.","lastModifiedDate":"2022-11-09"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"     * @param isNewDateTimeSpecified boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"    public SnoozeTaskCommand(Tracker tracker, Storage storage, int id, String newDateTime, boolean isNewDateTimeSpecified){","lastModifiedDate":"2022-11-08"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"        super(tracker, storage);","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"        this.newDateTime \u003d newDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"        this.isNewDateTimeSpecified \u003d isNewDateTimeSpecified;","lastModifiedDate":"2022-11-08"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"     * Handles snooze task to given date else plus 1 day to task\u0027s current date time.","lastModifiedDate":"2022-11-09"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"     * Applicable for Event and Deadline task type only.","lastModifiedDate":"2022-11-09"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"    public void execute() throws DukeFileException, DukeValidationException, DukeNotFoundException, DukeArgumentException, DukeExistedException {","lastModifiedDate":"2022-11-12"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"        if(this.tracker.hasItemSnoozed(id, newDateTime, isNewDateTimeSpecified)) {","lastModifiedDate":"2022-11-08"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"            this.storage.override(tracker.tasks);","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"Ayesh02":44}},{"path":"src/main/java/application/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeNotFoundException;","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"public class UnmarkTaskCommand extends Command{","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    private final int id;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"     * Initialises UnmarkTaskCommand.","lastModifiedDate":"2022-11-09"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    public UnmarkTaskCommand(Tracker tracker, Storage storage, int id) {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"        super(tracker, storage);","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     * Handles unmark task as done and Updates to local data file.","lastModifiedDate":"2022-11-09"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    public void execute() throws DukeFileException, DukeArgumentException, DukeNotFoundException {","lastModifiedDate":"2022-11-09"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        if(this.tracker.hasItemStateUpdated(id, false)) {","lastModifiedDate":"2022-11-09"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"            this.storage.override(tracker.tasks);","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-11-08"}],"authorContributionMap":{"Ayesh02":35}},{"path":"src/main/java/application/commands/ViewTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.commands;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"public class ViewTaskCommand extends Command{","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"     * Initialises ViewTaskCommand.","lastModifiedDate":"2022-11-09"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"     * @param tracker Tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"     * @param storage Storage.","lastModifiedDate":"2022-11-09"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    public ViewTaskCommand(Tracker tracker, Storage storage) {","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"        super(tracker, storage);","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     * Handles display of all tasks","lastModifiedDate":"2022-11-09"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    public void execute() {","lastModifiedDate":"2022-11-09"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"        this.tracker.showList();","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Ayesh02":26}},{"path":"src/main/java/application/controllers/RequestController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.controllers;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.commands.AddTaskCommand;","lastModifiedDate":"2022-11-08"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.commands.DeleteTaskCommand;","lastModifiedDate":"2022-11-08"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import application.commands.FilterTaskByDatesCommand;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import application.commands.FindTaskCommand;","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import application.commands.MarkTaskCommand;","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import application.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import application.commands.SnoozeTaskCommand;","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import application.commands.ViewTaskCommand;","lastModifiedDate":"2022-11-08"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-11-08"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Task;","lastModifiedDate":"2022-11-08"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Todo;","lastModifiedDate":"2022-11-08"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Event;","lastModifiedDate":"2022-11-08"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Deadline;","lastModifiedDate":"2022-11-08"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeExistedException;","lastModifiedDate":"2022-11-08"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-11-08"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeNotFoundException;","lastModifiedDate":"2022-11-08"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-11-08"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"public class RequestController {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"    private Tracker tracker;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"    private Storage storage;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"     * Initialises RequestController which is bridge between UI and Domain communication.","lastModifiedDate":"2022-11-09"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"    public RequestController(){","lastModifiedDate":"2022-11-13"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-13"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2022-11-13"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"            this.tracker \u003d new Tracker();","lastModifiedDate":"2022-11-13"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"        } catch (Exception ex){","lastModifiedDate":"2022-11-13"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"            ex.printStackTrace();","lastModifiedDate":"2022-11-13"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-13"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"     * Calls ViewTaskCommand to display tasks.","lastModifiedDate":"2022-11-09"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"    public void list() {","lastModifiedDate":"2022-11-09"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"        ViewTaskCommand command \u003d new ViewTaskCommand(tracker, storage);","lastModifiedDate":"2022-11-09"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"        command.execute();","lastModifiedDate":"2022-11-09"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"     * Creates new Todo based on the input specified and calls addTaskCommand private method.","lastModifiedDate":"2022-11-09"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeExistedException if adds task that already exists.","lastModifiedDate":"2022-11-09"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if required task properties are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"    public void todo(String input) throws DukeValidationException, DukeExistedException, DukeFileException {","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"        addTaskCommand(new Todo(input));","lastModifiedDate":"2022-11-09"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"     * Creates new Event based on the input specified and calls addTaskCommand private method.","lastModifiedDate":"2022-11-09"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeExistedException if adds task that already exists.","lastModifiedDate":"2022-11-09"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if required task properties are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"    public void event(String input) throws DukeValidationException, DukeExistedException, DukeFileException, DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"        addTaskCommand(new Event(input));","lastModifiedDate":"2022-11-09"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"     * Creates new Deadline based on the input specified and calls addTaskCommand private method.","lastModifiedDate":"2022-11-09"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeExistedException if adds task that already exists.","lastModifiedDate":"2022-11-09"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if required task properties are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"    public void deadline(String input) throws DukeValidationException, DukeExistedException, DukeFileException, DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"        addTaskCommand(new Deadline(input));","lastModifiedDate":"2022-11-09"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"     * Calls Mark Task Command to set done to true.","lastModifiedDate":"2022-11-09"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if modifies a task that does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"    public void mark(int id) throws DukeArgumentException, DukeFileException, DukeNotFoundException {","lastModifiedDate":"2022-11-09"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"        MarkTaskCommand command \u003d new MarkTaskCommand(tracker, storage, id);","lastModifiedDate":"2022-11-09"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"        command.execute();","lastModifiedDate":"2022-11-09"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"     * Calls Unmark Task Command to set done to false.","lastModifiedDate":"2022-11-09"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if modifies a task that does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"    public void unmark(int id) throws DukeArgumentException, DukeFileException, DukeNotFoundException {","lastModifiedDate":"2022-11-09"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"        UnmarkTaskCommand command \u003d new UnmarkTaskCommand(tracker, storage, id);","lastModifiedDate":"2022-11-09"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"        command.execute();","lastModifiedDate":"2022-11-09"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"     * Calls Delete Task Command to delete task.","lastModifiedDate":"2022-11-09"},{"lineNumber":116,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":117,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":118,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if modifies a task that does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":119,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":120,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":121,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"Ayesh02"},"content":"    public void delete(int id) throws DukeArgumentException, DukeFileException, DukeNotFoundException {","lastModifiedDate":"2022-11-09"},{"lineNumber":123,"author":{"gitId":"Ayesh02"},"content":"        DeleteTaskCommand command \u003d new DeleteTaskCommand(tracker, storage, id);","lastModifiedDate":"2022-11-09"},{"lineNumber":124,"author":{"gitId":"Ayesh02"},"content":"        command.execute();","lastModifiedDate":"2022-11-09"},{"lineNumber":125,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":128,"author":{"gitId":"Ayesh02"},"content":"     * Calls Filter Task Command with the date range that is passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":129,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":130,"author":{"gitId":"Ayesh02"},"content":"     * @param date String.","lastModifiedDate":"2022-11-09"},{"lineNumber":131,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":132,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":133,"author":{"gitId":"Ayesh02"},"content":"    public void filter(String date) throws DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":134,"author":{"gitId":"Ayesh02"},"content":"        FilterTaskByDatesCommand command \u003d new FilterTaskByDatesCommand(tracker, storage, date);","lastModifiedDate":"2022-11-09"},{"lineNumber":135,"author":{"gitId":"Ayesh02"},"content":"        command.execute();","lastModifiedDate":"2022-11-09"},{"lineNumber":136,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":139,"author":{"gitId":"Ayesh02"},"content":"     * Calls Snooze Task Command with new date.","lastModifiedDate":"2022-11-09"},{"lineNumber":140,"author":{"gitId":"Ayesh02"},"content":"     * If date is specified, it will be passed as a property to assist in validation and condition to apply default snooze.","lastModifiedDate":"2022-11-09"},{"lineNumber":141,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":142,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":143,"author":{"gitId":"Ayesh02"},"content":"     * @param date String.","lastModifiedDate":"2022-11-09"},{"lineNumber":144,"author":{"gitId":"Ayesh02"},"content":"     * @param isDateSpecified Boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":145,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if modifies a task that does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":146,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if date is empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":147,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":148,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":149,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeExistedException if duplicates are added","lastModifiedDate":"2022-11-12"},{"lineNumber":150,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":151,"author":{"gitId":"Ayesh02"},"content":"    public void snooze(int id, String date, boolean isDateSpecified) throws DukeValidationException, DukeNotFoundException, DukeFileException, DukeArgumentException, DukeExistedException {","lastModifiedDate":"2022-11-12"},{"lineNumber":152,"author":{"gitId":"Ayesh02"},"content":"        SnoozeTaskCommand command \u003d new SnoozeTaskCommand(tracker, storage, id, date, isDateSpecified);","lastModifiedDate":"2022-11-09"},{"lineNumber":153,"author":{"gitId":"Ayesh02"},"content":"        command.execute();","lastModifiedDate":"2022-11-09"},{"lineNumber":154,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":155,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":156,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":157,"author":{"gitId":"Ayesh02"},"content":"     * Calls Find Task Command with keyword.","lastModifiedDate":"2022-11-09"},{"lineNumber":158,"author":{"gitId":"Ayesh02"},"content":"     * Checks if keyword matches either the name or date or dateTime.","lastModifiedDate":"2022-11-09"},{"lineNumber":159,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":160,"author":{"gitId":"Ayesh02"},"content":"     * @param keyword String.","lastModifiedDate":"2022-11-09"},{"lineNumber":161,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if keyword is empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":162,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":163,"author":{"gitId":"Ayesh02"},"content":"    public void find(String keyword) throws DukeValidationException {","lastModifiedDate":"2022-11-08"},{"lineNumber":164,"author":{"gitId":"Ayesh02"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(tracker, storage, keyword);","lastModifiedDate":"2022-11-09"},{"lineNumber":165,"author":{"gitId":"Ayesh02"},"content":"        command.execute();","lastModifiedDate":"2022-11-09"},{"lineNumber":166,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":167,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":168,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":169,"author":{"gitId":"Ayesh02"},"content":"     * Displays welcome message.","lastModifiedDate":"2022-11-09"},{"lineNumber":170,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":171,"author":{"gitId":"Ayesh02"},"content":"    public void hello(){","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"Ayesh02"},"content":"        CommonHelper.printMessage(MessageConstants.WELCOME);","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":176,"author":{"gitId":"Ayesh02"},"content":"     * Displays goodbye message.","lastModifiedDate":"2022-11-09"},{"lineNumber":177,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":178,"author":{"gitId":"Ayesh02"},"content":"    public void bye(){","lastModifiedDate":"2022-10-19"},{"lineNumber":179,"author":{"gitId":"Ayesh02"},"content":"        CommonHelper.printMessage(MessageConstants.END);","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":183,"author":{"gitId":"Ayesh02"},"content":"     * Calls AddTaskCommand to add new task.","lastModifiedDate":"2022-11-09"},{"lineNumber":184,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":185,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeExistedException if adds task that already exists.","lastModifiedDate":"2022-11-09"},{"lineNumber":186,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":187,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":188,"author":{"gitId":"Ayesh02"},"content":"    private void addTaskCommand(Task task) throws DukeExistedException, DukeFileException {","lastModifiedDate":"2022-11-09"},{"lineNumber":189,"author":{"gitId":"Ayesh02"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(tracker, storage, task);","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"Ayesh02"},"content":"        command.execute();","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Ayesh02":192}},{"path":"src/main/java/application/helpers/ActionKeyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.helpers;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"/**","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":" * Represents the keywords that is entered in the UI to redirect accordingly.","lastModifiedDate":"2022-11-09"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":" */","lastModifiedDate":"2022-11-02"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"public enum ActionKeyword {","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    HI(\"hi\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    HELLO(\"hello\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"    FILTER(\"filter\"),","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    SNOOZE(\"snooze\"),","lastModifiedDate":"2022-11-08"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"    FIND(\"find\");","lastModifiedDate":"2022-11-08"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    public final String label;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"    private ActionKeyword(String label) {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"        this.label \u003d label;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"     * Converts string label to an ActionKeyword enum.","lastModifiedDate":"2022-11-09"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"     * @param label String.","lastModifiedDate":"2022-11-09"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"    public static ActionKeyword get(String label) throws DukeArgumentException {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"            return ActionKeyword.valueOf(label.toUpperCase().split(\" \")[0]);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"        } catch(IllegalArgumentException ex){","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeArgumentException(MessageConstants.TASK_ARGUMENT_ERROR);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":41}},{"path":"src/main/java/application/helpers/CommonHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.helpers;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"public class CommonHelper {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"     * Converts string input into Name and Remark and returns an array with 2 string objects.","lastModifiedDate":"2022-11-09"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"     * If keyword exists in input, the index + 2 to skip.","lastModifiedDate":"2022-11-09"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     * @param keyword String.","lastModifiedDate":"2022-11-09"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"     * @return String[] formatted.","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"    public static String[] formatPassedName(String input, String keyword){","lastModifiedDate":"2022-11-08"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"        String[] formatted \u003d new String[2];","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"        Integer idx \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-11-08"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"        if(idx \u003e 0 \u0026\u0026 idx \u003c input.length()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"            formatted[0] \u003d input.substring(0, idx).trim();","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"            if(input.contains(keyword)){","lastModifiedDate":"2022-11-08"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"                Integer keywordIdx \u003d input.indexOf(keyword);","lastModifiedDate":"2022-11-08"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"                formatted[1] \u003d input.substring(keywordIdx+2).trim();","lastModifiedDate":"2022-11-08"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"            } else {","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"                formatted[1] \u003d input.substring(idx+1).trim();","lastModifiedDate":"2022-11-08"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        else if(idx \u003d\u003d 0) {","lastModifiedDate":"2022-11-12"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"            formatted[1] \u003d input.replace(\"/\", \"\").trim();","lastModifiedDate":"2022-11-12"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"        } else {","lastModifiedDate":"2022-11-12"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"            formatted[0] \u003d input.replace(\"/\", \"\").trim();","lastModifiedDate":"2022-11-08"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"        return formatted;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"     * Prints message as a new line.","lastModifiedDate":"2022-11-09"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"     * @param message String.","lastModifiedDate":"2022-11-09"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"    public static void printMessage(String message){","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"        System.out.println(message);","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"     * Checks if string is empty or whitespace or null.","lastModifiedDate":"2022-11-09"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"     * @param text String.","lastModifiedDate":"2022-11-09"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"     * @return boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"    public static boolean isEmptyOrNull(String text) {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"        return text !\u003d null ? text.isEmpty() || text.isBlank() : true;","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"     * Converts string to an integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"     * @param text String.","lastModifiedDate":"2022-11-09"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"     * @return Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if text is empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"    public static int getNumber(String text) throws DukeValidationException {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"        if(CommonHelper.isEmptyOrNull(text)) {","lastModifiedDate":"2022-11-08"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(String.format(MessageConstants.TASK_VALIDATION_EMPTY_ERROR, \"Id\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"        return Integer.parseInt(text);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"     * Converts boolean to an integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"     * @param bool boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"     * @return Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"    public static int booleanToInteger(boolean bool) {","lastModifiedDate":"2022-11-09"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"        return Boolean.compare(bool, false);","lastModifiedDate":"2022-11-09"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"     * Converts string to a datetime.","lastModifiedDate":"2022-11-09"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"     * @param date String.","lastModifiedDate":"2022-11-09"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2022-11-09"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"    public static LocalDateTime convertStringToDateTime(String date) throws DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"        String formats \u003d \"[yyyy-MM-dd HH:mm][yyyy-MM-dd h:mm a][MMM dd yyyy HH:mm][MMM dd yyyy h:mm a]\";","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formats);","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"            return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"        } catch (Exception ex){","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeArgumentException(String.format(MessageConstants.TASK_VALIDATION_FORMAT_ERROR, formats));","lastModifiedDate":"2022-11-09"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"     * Converts string to a datetime where time is 00:00.","lastModifiedDate":"2022-11-09"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"     * @param date String.","lastModifiedDate":"2022-11-09"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2022-11-09"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"    public static LocalDateTime convertStringToDate(String date) throws DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"        String formats \u003d \"[yyyy-MM-dd][MMM dd yyyy]\";","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formats);","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"            return LocalDate.parse(date, formatter).atStartOfDay();","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"        } catch (Exception ex){","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeArgumentException(String.format(MessageConstants.TASK_VALIDATION_FORMAT_ERROR, formats));","lastModifiedDate":"2022-11-09"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"Ayesh02":115}},{"path":"src/main/java/application/helpers/MessageConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.helpers;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public final class MessageConstants {","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    public static final String WELCOME \u003d \"\\tHello again! How can i help you?\";","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"    public static final String REPEAT \u003d \"\\tI\u0027m sorry. What do you mean?\";","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"    public static final String END \u003d \"\\tBye. Hope to see you again soon!!\";","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"    public static final String LIST_TASK \u003d \"\\tHere are the task(s) in your list:\";","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    public static final String ADD_TASK \u003d \"\\tGot it. I\u0027ve added this task:\";","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"    public static final String SUM_TASK \u003d \"\\tNow you have %d task(s) in the list.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    public static final String NO_TASK \u003d \"\\tYou have not added any task yet. Let\u0027s get started!\";","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    public static final String MARK_TASK \u003d \"\\tNice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"    public static final String UNMARK_TASK \u003d \"\\tOK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    public static final String DELETE_TASK \u003d \"\\tNoted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    public static final String SNOOZE_TASK \u003d \"\\tNoted. I\u0027ve rescheduled this task:\";","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"    public static final String DEFAULT_SNOOZE_TASK \u003d \"\\tNoted. I\u0027ve extended this task by 1 day:\";","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    public static final String GENERAL_ERROR \u003d \"\\tOops! I could not process the request. Please try again.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_NOT_FOUND_ERROR \u003d \"\\tOops! I could not find this task.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_EXISTED_ERROR \u003d \"Oops! There is already an existing task.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_VALIDATION_EMPTY_ERROR \u003d \"Oops! %s cannot be empty.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_VALIDATION_FORMAT_ERROR \u003d \"Oops! Incorrect date format passed. Valid formats: %s\";","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_ARGUMENT_SIZE_ERROR \u003d \"Oops! Specified id is out of range.\";","lastModifiedDate":"2022-11-09"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_ARGUMENT_ERROR \u003d \"Oops! That doesn\u0027t seem right. What do you mean?\";","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_GET_ERROR \u003d \"\\tOops! There seems to be an issue retrieving previous task(s).\";","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"    public static final String FILE_WRITE_ERROR \u003d \"\\tOops! There seems to be an issue saving the task. Please try again.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    public static final String FILE_OVERWRITE_ERROR \u003d \"\\tOops! There seems to be an issue saving the updated task. Please try again.\";","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"    public static final String FILTER_RESULTS_FOUND \u003d \"\\tFound %d tasks:\";","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"    public static final String NO_RESULTS_FOUND \u003d \"\\tNo tasks found.\";","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_SNOOZE_DATETIME_NOT_PASSED \u003d \"\\tOops! Snooze date time cannot be empty.\";","lastModifiedDate":"2022-11-08"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    public static final String TASK_SNOOZE_NOT_APPLICABLE \u003d \"\\tOops! Snooze is not applicable for Task %d\";","lastModifiedDate":"2022-11-08"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    public static final String ERROR \u003d \"\\tERROR!! - Oops something unexpected happened. Please try again.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"Ayesh02":32}},{"path":"src/main/java/application/helpers/StorageConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.helpers;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public final class StorageConstants {","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"    public static final String HEADER \u003d \"ID | Type | Is Done | Name | Remarks\";","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Ayesh02":7}},{"path":"src/main/java/application/userinterface/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package application.userinterface;","lastModifiedDate":"2022-11-08"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.controllers.RequestController;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.ActionKeyword;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.storage.Storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Tracker;","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeException;","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"public class Ui {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"    private RequestController controller;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     * Initialises User Interface with new Request Controller.","lastModifiedDate":"2022-11-13"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    public Ui(){","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"        controller \u003d new RequestController();","lastModifiedDate":"2022-11-13"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"     * Calls introduction and starts conversation.","lastModifiedDate":"2022-11-09"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"    public void initialise(){","lastModifiedDate":"2022-11-08"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"        introduction();","lastModifiedDate":"2022-11-08"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"        conversation();","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"     * Displays Curio Logo and welcome message.","lastModifiedDate":"2022-11-09"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"    private void introduction(){","lastModifiedDate":"2022-11-08"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"        String logo \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"                \" _____             _   \\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"                        + \"/  __ \\\\_   _ _  __|_| ___\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"                        + \"| |   | | | | |/ /| |/ _ \\\\\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"                        + \"| |__ | |_| |  /  | | |_| |\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"                        + \"\\\\____/ \\\\__,_|_|   |_|\\\\___/\\n\";","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"        System.out.println(\"Hello! I\u0027m Curio\\nWhat can i do for you?\\n\");","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"     * Initialises scanner and processes each request by converting to an ActionKeyword enum. For each keyword, the respective controller request is called with the expected parameters.","lastModifiedDate":"2022-11-09"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"     * If throws DukeException, continue as error handling is already done. Else, prints Exception trace with a general error message.","lastModifiedDate":"2022-11-09"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"    private void conversation(){","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-11-08"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"        while(true) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"            try {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2022-11-08"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"                ActionKeyword action \u003d ActionKeyword.get(input);","lastModifiedDate":"2022-11-08"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"                switch (action){","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"                    case LIST:","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"                        controller.list();","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"                    case TODO:","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"                        controller.todo(input.replace(ActionKeyword.TODO.label,\"\").trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"                    case EVENT:","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"                        controller.event(input.replace(ActionKeyword.EVENT.label,\"\").trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"                    case DEADLINE:","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"                        controller.deadline(input.replace(ActionKeyword.DEADLINE.label,\"\").trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"                    case MARK:","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"                        controller.mark(CommonHelper.getNumber(input.replaceAll(\"[^-?[0-9]]\", \"\").trim()));","lastModifiedDate":"2022-11-09"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"                    case UNMARK:","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"                        controller.unmark(CommonHelper.getNumber(input.replaceAll(\"[^-?[0-9]]\", \"\").trim()));","lastModifiedDate":"2022-11-09"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"                    case DELETE:","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"                        controller.delete(CommonHelper.getNumber(input.replaceAll(\"[^-?[0-9]]\", \"\").trim()));","lastModifiedDate":"2022-11-09"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"                    case FILTER:","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"                        controller.filter(input.replace(ActionKeyword.FILTER.label,\"\").trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"                    case SNOOZE:","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"                        boolean isDateSpecified \u003d input.contains(\"/\");","lastModifiedDate":"2022-11-08"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"                        int id \u003d CommonHelper.getNumber(input.split(\"/\")[0].replaceAll(\"[^-?[0-9]]\", \"\").trim());","lastModifiedDate":"2022-11-09"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"                        controller.snooze(id, input.replace(ActionKeyword.SNOOZE.label,\"\").replace(\"/\", \"\").replace(String.valueOf(id), \"\").trim(), isDateSpecified);","lastModifiedDate":"2022-11-08"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-11-08"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"                    case FIND:","lastModifiedDate":"2022-11-08"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"                        controller.find(input.replace(ActionKeyword.FIND.label,\"\").trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"                    case HI:","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"                    case HELLO:","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"                        controller.hello();","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"                    case BYE:","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"                        controller.bye();","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"                    default:","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"                        CommonHelper.printMessage(MessageConstants.REPEAT);","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"            } catch (DukeException ex){","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"            } catch (Exception ex){","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"                System.out.println(MessageConstants.ERROR);","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"                ex.printStackTrace();","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ayesh02":110}},{"path":"src/main/java/domain/aggregates/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.storage;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Task;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.repositories.IStorageRepository;","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.repositories.StorageRepository;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import java.io.File;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"public class Storage {","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"     * Properties","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"    private File file;","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    private final IStorageRepository _storageRepository;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     * Initialises Storage to read and write.","lastModifiedDate":"2022-11-09"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to retrieve or create file.","lastModifiedDate":"2022-11-09"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    public Storage() throws DukeFileException {","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"        _storageRepository \u003d new StorageRepository();","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"        this.file \u003d _storageRepository.initialise();","lastModifiedDate":"2022-11-08"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"     * Adds new record to file.","lastModifiedDate":"2022-11-09"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"     * @param row String.","lastModifiedDate":"2022-11-09"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"    public void saveItem(String row) throws DukeFileException {","lastModifiedDate":"2022-11-08"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"        _storageRepository.write(file, row);","lastModifiedDate":"2022-11-08"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new file with the latest items and overrides the previous file.","lastModifiedDate":"2022-11-09"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"     * @param items ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to local file.","lastModifiedDate":"2022-11-09"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"    public void override(ArrayList\u003cTask\u003e items) throws DukeFileException {","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"        _storageRepository.override(items);","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Ayesh02":47}},{"path":"src/main/java/domain/aggregates/tracker/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     * Properties","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    protected LocalDateTime dueDateTime;","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    protected String shortName \u003d \"D\";","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"    private Pattern dateTimePattern \u003d Pattern.compile(\".*([01]?[0-9]|2[0-3]):[0-5][0-9].*\");","lastModifiedDate":"2022-11-08"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    private Pattern datePattern \u003d Pattern.compile(\".*([01]?[0-9]|2[0-3])\");","lastModifiedDate":"2022-11-08"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new Deadline by formatting given input to Name and Due Date Time.","lastModifiedDate":"2022-11-09"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid date string argument passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if name or due date time properties are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    public Deadline(String input) throws DukeArgumentException, DukeValidationException {","lastModifiedDate":"2022-11-09"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"        super(input);","lastModifiedDate":"2022-11-08"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        String[] formattedInputs \u003d CommonHelper.formatPassedName(input, \"by\");","lastModifiedDate":"2022-11-08"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"        validate(formattedInputs);","lastModifiedDate":"2022-11-08"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"        this.name \u003d formattedInputs[0].trim();","lastModifiedDate":"2022-11-08"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"        if(dateTimePattern.matcher(formattedInputs[1].trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"            this.dueDateTime \u003d CommonHelper.convertStringToDateTime(formattedInputs[1].trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"        } else if(datePattern.matcher(formattedInputs[1].trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"            this.dueDateTime \u003d CommonHelper.convertStringToDate(formattedInputs[1].trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new Deadline with explicit values for Id, Name, Is Done and Due Date Time as it is converting values from .txt file.","lastModifiedDate":"2022-11-09"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"     * @param name String.","lastModifiedDate":"2022-11-09"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"     * @param dueDateTime String.","lastModifiedDate":"2022-11-09"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"     * @param isDone boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"    public Deadline(int id, String name, String dueDateTime, boolean isDone) {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"        super(id, name, isDone);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"        this.dueDateTime \u003d LocalDateTime.parse(dueDateTime);","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"     * Prints out deadline in this format: {id}.[{shortName}] [{isDone}] {name} (by: {dueDateTime}).","lastModifiedDate":"2022-11-09"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"    public void printItem(){","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"        String format \u003d \"[dd MMMM yyyy, hh:mm a]\";","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"        if(this.dueDateTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")).equals(\"00:00\")) {","lastModifiedDate":"2022-11-08"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"            format \u003d \"[dd MMMM yyyy]\";","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"        String displayText \u003d String.format(\"\\t\\t%d.[%s][%s] %s (by: %s)\", this.id, this.shortName, this.isDone ? \"X\":\" \", this.name, this.dueDateTime.format(DateTimeFormatter.ofPattern(format)));","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"        CommonHelper.printMessage(displayText);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-09"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"     * If object of different type, it will cast as Deadline and compare.","lastModifiedDate":"2022-11-09"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"        if(this.getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"            return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"        Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2022-11-08"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"        return deadline.shortName.equals(this.shortName) \u0026\u0026 (deadline.name.toLowerCase()).equals(this.name.toLowerCase()) \u0026\u0026 deadline.dueDateTime.equals(this.dueDateTime);","lastModifiedDate":"2022-11-12"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"     * Convert deadline to string in this format: {id} | {shortName} | {isDone} | {name} | {dueDateTime} .","lastModifiedDate":"2022-11-09"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"    public String toString(){","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"        return String.format(\"%d | %s | %d | %s | %s\", this.id, this.shortName, CommonHelper.booleanToInteger(this.isDone), this.name, this.dueDateTime);","lastModifiedDate":"2022-11-08"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"     * Retrieves all Deadlines where due date time within the start and end datetime range.","lastModifiedDate":"2022-11-09"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"    public boolean compare(LocalDate start, LocalDate end) {","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"        LocalDate dueDateTime \u003d this.dueDateTime.toLocalDate();","lastModifiedDate":"2022-11-08"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"        if(end \u003d\u003d null) {","lastModifiedDate":"2022-11-08"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"            return (dueDateTime.isAfter(start) || dueDateTime.isEqual(start));","lastModifiedDate":"2022-11-12"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"        return (dueDateTime.isAfter(start) || dueDateTime.isEqual(start)) \u0026\u0026 (dueDateTime.isBefore(end) || dueDateTime.isEqual(end));","lastModifiedDate":"2022-11-08"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"     * Postpones Deadline\u0027s due date time to either given or plus 1 by default.","lastModifiedDate":"2022-11-09"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-11-02"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"    public void postpone(String remark, boolean isSpecified) throws DukeValidationException, DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"        if(!CommonHelper.isEmptyOrNull(remark) \u0026\u0026 isSpecified) {","lastModifiedDate":"2022-11-08"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"            if(dateTimePattern.matcher(remark.trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"                this.dueDateTime \u003d CommonHelper.convertStringToDateTime(remark.trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"            } else if(datePattern.matcher(remark.trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"                this.dueDateTime \u003d CommonHelper.convertStringToDate(remark.trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-11-08"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"        } else if(!isSpecified) {","lastModifiedDate":"2022-11-08"},{"lineNumber":116,"author":{"gitId":"Ayesh02"},"content":"            this.dueDateTime \u003d this.dueDateTime.plusDays(1);","lastModifiedDate":"2022-11-02"},{"lineNumber":117,"author":{"gitId":"Ayesh02"},"content":"        } else {","lastModifiedDate":"2022-11-08"},{"lineNumber":118,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(MessageConstants.TASK_SNOOZE_DATETIME_NOT_PASSED);","lastModifiedDate":"2022-11-08"},{"lineNumber":119,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":120,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":121,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":123,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":124,"author":{"gitId":"Ayesh02"},"content":"     * Find Deadlines where either id or name or due date time matches.","lastModifiedDate":"2022-11-09"},{"lineNumber":125,"author":{"gitId":"Ayesh02"},"content":"     * If exception, returns false.","lastModifiedDate":"2022-11-09"},{"lineNumber":126,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":127,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-11-08"},{"lineNumber":128,"author":{"gitId":"Ayesh02"},"content":"    public boolean find(String keyword) {","lastModifiedDate":"2022-11-08"},{"lineNumber":129,"author":{"gitId":"Ayesh02"},"content":"        boolean result;","lastModifiedDate":"2022-11-08"},{"lineNumber":130,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-08"},{"lineNumber":131,"author":{"gitId":"Ayesh02"},"content":"            result \u003d this.id \u003d\u003d CommonHelper.getNumber(keyword);","lastModifiedDate":"2022-11-08"},{"lineNumber":132,"author":{"gitId":"Ayesh02"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-11-08"},{"lineNumber":133,"author":{"gitId":"Ayesh02"},"content":"            result \u003d this.name.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-11-08"},{"lineNumber":134,"author":{"gitId":"Ayesh02"},"content":"            try {","lastModifiedDate":"2022-11-08"},{"lineNumber":135,"author":{"gitId":"Ayesh02"},"content":"                if (!result){","lastModifiedDate":"2022-11-08"},{"lineNumber":136,"author":{"gitId":"Ayesh02"},"content":"                    if (dateTimePattern.matcher(keyword.trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":137,"author":{"gitId":"Ayesh02"},"content":"                        result \u003d this.dueDateTime.equals(CommonHelper.convertStringToDateTime(keyword.trim()));","lastModifiedDate":"2022-11-08"},{"lineNumber":138,"author":{"gitId":"Ayesh02"},"content":"                    } else if (datePattern.matcher(keyword.trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":139,"author":{"gitId":"Ayesh02"},"content":"                        result \u003d this.dueDateTime.toLocalDate().equals(CommonHelper.convertStringToDate(keyword.trim()).toLocalDate());","lastModifiedDate":"2022-11-08"},{"lineNumber":140,"author":{"gitId":"Ayesh02"},"content":"                    }","lastModifiedDate":"2022-11-08"},{"lineNumber":141,"author":{"gitId":"Ayesh02"},"content":"                }","lastModifiedDate":"2022-11-08"},{"lineNumber":142,"author":{"gitId":"Ayesh02"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-11-08"},{"lineNumber":143,"author":{"gitId":"Ayesh02"},"content":"                result \u003d false;","lastModifiedDate":"2022-11-08"},{"lineNumber":144,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-11-08"},{"lineNumber":145,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":146,"author":{"gitId":"Ayesh02"},"content":"        return result;","lastModifiedDate":"2022-11-08"},{"lineNumber":147,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":148,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":149,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"Ayesh02"},"content":"     * Validates name and due date time passed from User Interface.","lastModifiedDate":"2022-11-09"},{"lineNumber":151,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":152,"author":{"gitId":"Ayesh02"},"content":"     * @param formattedInputs String[].","lastModifiedDate":"2022-11-09"},{"lineNumber":153,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if name or due date time are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":154,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":155,"author":{"gitId":"Ayesh02"},"content":"    private void validate(String[] formattedInputs) throws DukeValidationException{","lastModifiedDate":"2022-11-08"},{"lineNumber":156,"author":{"gitId":"Ayesh02"},"content":"        if(CommonHelper.isEmptyOrNull(formattedInputs[0])) {","lastModifiedDate":"2022-11-08"},{"lineNumber":157,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(String.format(MessageConstants.TASK_VALIDATION_EMPTY_ERROR, \"Description\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"Ayesh02"},"content":"        } else if(CommonHelper.isEmptyOrNull(formattedInputs[1])) {","lastModifiedDate":"2022-11-08"},{"lineNumber":159,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(String.format(MessageConstants.TASK_VALIDATION_EMPTY_ERROR, \"Due Date Time\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":162,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"Ayesh02"},"content":"     * Getter of property","lastModifiedDate":"2022-11-09"},{"lineNumber":165,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":166,"author":{"gitId":"Ayesh02"},"content":"    public LocalDateTime getDueDateTime(){","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"Ayesh02"},"content":"        return this.dueDateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":169}},{"path":"src/main/java/domain/aggregates/tracker/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"public class Event extends Task{","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     * Properties","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    protected String shortName \u003d \"E\";","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"    private Pattern dateTimePattern \u003d Pattern.compile(\".*([01]?[0-9]|2[0-3]):[0-5][0-9].*\");","lastModifiedDate":"2022-11-08"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    private Pattern datePattern \u003d Pattern.compile(\".*([01]?[0-9]|2[0-3])\");","lastModifiedDate":"2022-11-08"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new Event by formatting given input to Name and Due Date Time.","lastModifiedDate":"2022-11-09"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid date string argument passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if name or start date time properties are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    public Event(String input) throws DukeValidationException, DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"        super(input);","lastModifiedDate":"2022-11-08"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        String[] formattedInputs \u003d CommonHelper.formatPassedName(input, \"at\");","lastModifiedDate":"2022-11-08"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"        validate(formattedInputs);","lastModifiedDate":"2022-11-08"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"        this.name \u003d formattedInputs[0].trim();","lastModifiedDate":"2022-11-08"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"        if(dateTimePattern.matcher(formattedInputs[1].trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"            this.startDateTime \u003d CommonHelper.convertStringToDateTime(formattedInputs[1].trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"        } else if(datePattern.matcher(formattedInputs[1].trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"            this.startDateTime \u003d CommonHelper.convertStringToDate(formattedInputs[1].trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new Event with explicit values for Id, Name, Is Done and Start Date Time as it is converting values from .txt file.","lastModifiedDate":"2022-11-09"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"     * @param name String.","lastModifiedDate":"2022-11-09"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"     * @param startDateTime String.","lastModifiedDate":"2022-11-09"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"     * @param isDone boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"    public Event(int id, String name, String startDateTime, boolean isDone) {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"        super(id, name, isDone);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"        this.startDateTime \u003d LocalDateTime.parse(startDateTime);","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"     * Prints out event in this format: {id}.[{shortName}] [{isDone}] {name} (by: {startDateTime}) .","lastModifiedDate":"2022-11-09"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"    public void printItem(){","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"        String format \u003d \"[dd MMMM yyyy, hh:mm a]\";","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"        if(this.startDateTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")).equals(\"00:00\")) {","lastModifiedDate":"2022-11-08"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"            format \u003d \"[dd MMMM yyyy]\";","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"        String displayText \u003d String.format(\"\\t\\t%d.[%s][%s] %s (at: %s)\", this.id, this.shortName, this.isDone ? \"X\":\" \", this.name, this.startDateTime.format(DateTimeFormatter.ofPattern(format)));","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"        CommonHelper.printMessage(displayText);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"     * If object of different type, it will be cast as Event and compare.","lastModifiedDate":"2022-11-09"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"        if(this.getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"            return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"        Event event \u003d (Event)obj;","lastModifiedDate":"2022-11-08"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"        return event.shortName.equals(this.shortName) \u0026\u0026 (event.name.toLowerCase()).equals(this.name.toLowerCase()) \u0026\u0026 event.startDateTime.equals(this.startDateTime);","lastModifiedDate":"2022-11-12"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"     * Convert event to string in this format: {id} | {shortName} | {isDone} | {name} | {startDateTime} .","lastModifiedDate":"2022-11-09"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"    public String toString(){","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"        return String.format(\"%d | %s | %d | %s | %s\", this.id, this.shortName, CommonHelper.booleanToInteger(this.isDone), this.name, this.startDateTime.toString());","lastModifiedDate":"2022-11-08"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"     * Retrieves all Events where start date time within the start and end datetime range.","lastModifiedDate":"2022-11-09"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"    public boolean compare(LocalDate start, LocalDate end) {","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"        LocalDate startDateTime \u003d this.startDateTime.toLocalDate();","lastModifiedDate":"2022-11-08"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"        if(end \u003d\u003d null) {","lastModifiedDate":"2022-11-08"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"            return startDateTime.isAfter(start) || startDateTime.isEqual(start);","lastModifiedDate":"2022-11-12"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"        return (startDateTime.isAfter(start) || startDateTime.isEqual(start)) \u0026\u0026 (startDateTime.isBefore(end) || startDateTime.isEqual(end));","lastModifiedDate":"2022-11-08"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"     * Postpones Event\u0027s start date time to either given or plus 1 by default.","lastModifiedDate":"2022-11-09"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-11-02"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"    public void postpone(String remark, boolean isSpecified) throws DukeValidationException, DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"        if(!CommonHelper.isEmptyOrNull(remark) \u0026\u0026 isSpecified) {","lastModifiedDate":"2022-11-08"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"            if(dateTimePattern.matcher(remark.trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"                this.startDateTime \u003d CommonHelper.convertStringToDateTime(remark.trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"            } else if(datePattern.matcher(remark.trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"                this.startDateTime \u003d CommonHelper.convertStringToDate(remark.trim());","lastModifiedDate":"2022-11-08"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-11-08"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"        } else if(!isSpecified) {","lastModifiedDate":"2022-11-08"},{"lineNumber":116,"author":{"gitId":"Ayesh02"},"content":"            this.startDateTime \u003d this.startDateTime.plusDays(1);","lastModifiedDate":"2022-11-02"},{"lineNumber":117,"author":{"gitId":"Ayesh02"},"content":"        } else {","lastModifiedDate":"2022-11-08"},{"lineNumber":118,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(MessageConstants.TASK_SNOOZE_DATETIME_NOT_PASSED);","lastModifiedDate":"2022-11-08"},{"lineNumber":119,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":120,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":121,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":123,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":124,"author":{"gitId":"Ayesh02"},"content":"     * Finds Events where either id or name or start date time matches.","lastModifiedDate":"2022-11-09"},{"lineNumber":125,"author":{"gitId":"Ayesh02"},"content":"     * If exception, returns false.","lastModifiedDate":"2022-11-09"},{"lineNumber":126,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":127,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-11-08"},{"lineNumber":128,"author":{"gitId":"Ayesh02"},"content":"    public boolean find(String keyword) {","lastModifiedDate":"2022-11-08"},{"lineNumber":129,"author":{"gitId":"Ayesh02"},"content":"        boolean result;","lastModifiedDate":"2022-11-08"},{"lineNumber":130,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-08"},{"lineNumber":131,"author":{"gitId":"Ayesh02"},"content":"            result \u003d this.id \u003d\u003d CommonHelper.getNumber(keyword);","lastModifiedDate":"2022-11-08"},{"lineNumber":132,"author":{"gitId":"Ayesh02"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-11-08"},{"lineNumber":133,"author":{"gitId":"Ayesh02"},"content":"            result \u003d this.name.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-11-08"},{"lineNumber":134,"author":{"gitId":"Ayesh02"},"content":"            try {","lastModifiedDate":"2022-11-08"},{"lineNumber":135,"author":{"gitId":"Ayesh02"},"content":"                if (!result){","lastModifiedDate":"2022-11-08"},{"lineNumber":136,"author":{"gitId":"Ayesh02"},"content":"                    if(dateTimePattern.matcher(keyword.trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":137,"author":{"gitId":"Ayesh02"},"content":"                        result \u003d this.startDateTime.equals(CommonHelper.convertStringToDateTime(keyword.trim()));","lastModifiedDate":"2022-11-08"},{"lineNumber":138,"author":{"gitId":"Ayesh02"},"content":"                    } else if(datePattern.matcher(keyword.trim()).matches()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":139,"author":{"gitId":"Ayesh02"},"content":"                        result \u003d this.startDateTime.equals(CommonHelper.convertStringToDate(keyword.trim()));","lastModifiedDate":"2022-11-08"},{"lineNumber":140,"author":{"gitId":"Ayesh02"},"content":"                    }","lastModifiedDate":"2022-11-08"},{"lineNumber":141,"author":{"gitId":"Ayesh02"},"content":"                }","lastModifiedDate":"2022-11-08"},{"lineNumber":142,"author":{"gitId":"Ayesh02"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-11-08"},{"lineNumber":143,"author":{"gitId":"Ayesh02"},"content":"                result \u003d false;","lastModifiedDate":"2022-11-08"},{"lineNumber":144,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-11-08"},{"lineNumber":145,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":146,"author":{"gitId":"Ayesh02"},"content":"        return result;","lastModifiedDate":"2022-11-08"},{"lineNumber":147,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":148,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":149,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"Ayesh02"},"content":"     * Validates name and start date time passed from User Interface.","lastModifiedDate":"2022-11-09"},{"lineNumber":151,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":152,"author":{"gitId":"Ayesh02"},"content":"     * @param formattedInputs String[].","lastModifiedDate":"2022-11-09"},{"lineNumber":153,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if name or start date time are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":154,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":155,"author":{"gitId":"Ayesh02"},"content":"    private void validate(String[] formattedInputs) throws DukeValidationException{","lastModifiedDate":"2022-11-08"},{"lineNumber":156,"author":{"gitId":"Ayesh02"},"content":"        if(CommonHelper.isEmptyOrNull(formattedInputs[0])) {","lastModifiedDate":"2022-11-08"},{"lineNumber":157,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(String.format(MessageConstants.TASK_VALIDATION_EMPTY_ERROR, \"Description\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"Ayesh02"},"content":"        } else if(CommonHelper.isEmptyOrNull(formattedInputs[1])) {","lastModifiedDate":"2022-11-08"},{"lineNumber":159,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(String.format(MessageConstants.TASK_VALIDATION_EMPTY_ERROR, \"Start Date Time\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":162,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"Ayesh02"},"content":"     * Getter of property.","lastModifiedDate":"2022-11-09"},{"lineNumber":165,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":166,"author":{"gitId":"Ayesh02"},"content":"    public LocalDateTime getStartDateTime(){","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"Ayesh02"},"content":"        return this.startDateTime;","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":169}},{"path":"src/main/java/domain/aggregates/tracker/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.*;","lastModifiedDate":"2022-11-09"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"public abstract class Task {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"     * Properties","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    protected int id;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    protected String name;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new Task with Name and Is Done flag to false.","lastModifiedDate":"2022-11-09"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if name or start date time properties are empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    public Task(String input) throws DukeValidationException {","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"        if(CommonHelper.isEmptyOrNull(input)) {","lastModifiedDate":"2022-11-08"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(String.format(MessageConstants.TASK_VALIDATION_EMPTY_ERROR, \"Description\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"        this.name \u003d input.trim();","lastModifiedDate":"2022-11-08"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new Task with explicit values for Id, Name and Is Done as it is converting values from .txt file.","lastModifiedDate":"2022-11-09"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"     * @param name String.","lastModifiedDate":"2022-11-09"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"     * @param isDone boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"    public Task(int id, String name, boolean isDone){","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"     * Prints task in a friendly format.","lastModifiedDate":"2022-11-09"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"    public abstract void printItem();","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"     * Checks if 2 tasks are equal.","lastModifiedDate":"2022-11-09"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"     * @param task Object.","lastModifiedDate":"2022-11-09"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"     * @return boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"    public abstract boolean equals(Object task);","lastModifiedDate":"2022-11-09"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"     * Converts task object to string.","lastModifiedDate":"2022-11-09"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"     * @return String.","lastModifiedDate":"2022-11-09"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"    public abstract String toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"     * Checks if task is within the date range.","lastModifiedDate":"2022-11-09"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"     * @param start LocalDate.","lastModifiedDate":"2022-11-09"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"     * @param end LocalDate.","lastModifiedDate":"2022-11-09"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"     * @return boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"    public abstract boolean compare(LocalDate start, LocalDate end);","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"     * Postpones task based on passed date or by default by plus 1 day.","lastModifiedDate":"2022-11-09"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"     * @param date String.","lastModifiedDate":"2022-11-09"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"     * @param isDateSpecified boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if remarks is empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"    public abstract void postpone(String date, boolean isDateSpecified) throws DukeValidationException, DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"     * Finds Task that contains keyword.","lastModifiedDate":"2022-11-09"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"     * @param keyword String.","lastModifiedDate":"2022-11-09"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"     * @return boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"    public abstract boolean find(String keyword);","lastModifiedDate":"2022-11-08"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"     * Getters \u0026 Setters for properties.","lastModifiedDate":"2022-11-09"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"    public int getId() { return this.id; }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"    public void setId(int i) { this.id \u003d i; }","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"    public String getName(){","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"        return this.name;","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"    public void setName(String n){","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"        this.name \u003d n;","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"    public boolean getIsDone(){","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"        return this.isDone;","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"    public void setIsDone(boolean d){","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"        this.isDone \u003d d;","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"Ayesh02":110}},{"path":"src/main/java/domain/aggregates/tracker/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public enum TaskType {","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    T,","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"    E,","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"    D","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ayesh02":7}},{"path":"src/main/java/domain/aggregates/tracker/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-11-08"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"     * Properties","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    protected String shortName \u003d \"T\";","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new Todo.","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     * @param input String.","lastModifiedDate":"2022-11-09"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if name is empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    public Todo(String input) throws DukeValidationException {","lastModifiedDate":"2022-11-08"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"        super(input);","lastModifiedDate":"2022-11-08"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-09"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new Todo with explicit values for Id, Name and Is Done as it is converting values from .txt file.","lastModifiedDate":"2022-11-09"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"     * @param name String.","lastModifiedDate":"2022-11-09"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"     * @param isDone boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"    public Todo(int id, String name, boolean isDone){","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"        super(id, name, isDone);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"     * Prints out deadline in this format: {id}.[{shortName}] [{isDone}] {name} .","lastModifiedDate":"2022-11-09"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"    public void printItem(){","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"        String displayText \u003d String.format(\"\\t\\t%d.[%s][%s] %s\", this.id, this.shortName, this.isDone ? \"X\":\" \", this.name);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"        CommonHelper.printMessage(displayText);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"     * If object of different type, it will be cast as Todo and compare .","lastModifiedDate":"2022-11-09"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"        if(this.getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"            return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"        Todo todo \u003d (Todo) obj;","lastModifiedDate":"2022-11-08"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"        return todo.shortName.equals(this.shortName) \u0026\u0026 (todo.name.toLowerCase()).equals(this.name.toLowerCase());","lastModifiedDate":"2022-11-12"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"     * Convert deadline to string in this format: {id} | {shortName} | {isDone} | {name} .","lastModifiedDate":"2022-11-09"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"    public String toString(){","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"        return String.format(\"%d | %s | %d | %s\", this.id, this.shortName, CommonHelper.booleanToInteger(this.isDone), this.name);","lastModifiedDate":"2022-11-08"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"     * Not applicable for Todo.","lastModifiedDate":"2022-11-09"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"     * @return false.","lastModifiedDate":"2022-11-09"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"    public boolean compare(LocalDate start, LocalDate end) {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"        return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"     * Not applicable for Todo.","lastModifiedDate":"2022-11-09"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if postpone for Todo.","lastModifiedDate":"2022-11-09"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-11-09"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"    public void postpone(String remarks, boolean isSpecified) throws DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"        throw new DukeArgumentException(String.format(MessageConstants.TASK_SNOOZE_NOT_APPLICABLE, this.id));","lastModifiedDate":"2022-11-09"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-09"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-09"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"     * @inheritDoc","lastModifiedDate":"2022-11-09"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"     * Find Todos where either id or name matches.","lastModifiedDate":"2022-11-09"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"     * If exception, returns false.","lastModifiedDate":"2022-11-09"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"    @Override","lastModifiedDate":"2022-11-08"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"    public boolean find(String keyword) {","lastModifiedDate":"2022-11-08"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"        boolean result \u003d false;","lastModifiedDate":"2022-11-08"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-08"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"            result \u003d this.id \u003d\u003d CommonHelper.getNumber(keyword);","lastModifiedDate":"2022-11-08"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-11-08"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"            result \u003d this.name.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-11-08"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"        return result;","lastModifiedDate":"2022-11-08"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Ayesh02":107}},{"path":"src/main/java/domain/aggregates/tracker/Tracker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeExistedException;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeNotFoundException;","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import domain.repositories.ITaskRepository;","lastModifiedDate":"2022-10-29"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import domain.repositories.TaskRepository;","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"public class Tracker {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     * Properties","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    private final ITaskRepository _taskRepository;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"     * Initialises Tracker with new Task Repository and reads tasks from local file to tasks.","lastModifiedDate":"2022-11-09"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to retrieve or create file.","lastModifiedDate":"2022-11-09"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if required task properties are empty populating tasks.","lastModifiedDate":"2022-11-09"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    public Tracker() throws DukeFileException, DukeArgumentException {","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        _taskRepository \u003d new TaskRepository();","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"        this.tasks \u003d _taskRepository.convertToTaskList();","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"     * Iterates each task in tasks and calls printItem().","lastModifiedDate":"2022-11-09"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"     * @param taskList ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"    private void printList(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2022-11-08"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++){","lastModifiedDate":"2022-11-08"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"            taskList.get(i).printItem();","lastModifiedDate":"2022-11-08"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"     * Calls task\u0027s printItem() and displays total number of tasks in tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"     * @param task Task.","lastModifiedDate":"2022-11-09"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"    private void printTask(Task task){","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"        task.printItem();","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"        CommonHelper.printMessage(String.format(MessageConstants.SUM_TASK, tasks.size()));","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"     * Displays all the tasks available in tracker.","lastModifiedDate":"2022-11-09"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"     * If no task, to show no task message instead.","lastModifiedDate":"2022-11-09"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"    public void showList(){","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"        if(tasks.size() \u003e 0) {","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"            CommonHelper.printMessage(MessageConstants.LIST_TASK);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"            printList(tasks);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"        } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"            CommonHelper.printMessage(MessageConstants.NO_TASK);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"     * Prints searched tasks along with results count.","lastModifiedDate":"2022-11-09"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"     * If no tasks, to show no results message instead.","lastModifiedDate":"2022-11-09"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"     * @param taskList ArrayList\u003cTask\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"    private void printResults(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2022-11-08"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"        if(taskList.size() \u003e 0) {","lastModifiedDate":"2022-11-08"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"            CommonHelper.printMessage(String.format(MessageConstants.FILTER_RESULTS_FOUND, taskList.size()));","lastModifiedDate":"2022-11-08"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"            printList(taskList);","lastModifiedDate":"2022-11-08"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"        } else {","lastModifiedDate":"2022-11-08"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"            CommonHelper.printMessage(MessageConstants.NO_RESULTS_FOUND);","lastModifiedDate":"2022-11-08"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"     * Validates task against existing tasks to make sure no duplicate records are added. Sets Task ID manually by incrementing from last available ID. Adds task and prints task.","lastModifiedDate":"2022-11-09"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"     * @param task Task.","lastModifiedDate":"2022-11-09"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"     * @return boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeExistedException if adds task that already exists.","lastModifiedDate":"2022-11-09"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"    public boolean hasItemAdded(Task task) throws DukeExistedException {","lastModifiedDate":"2022-11-08"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"        _taskRepository.validateTask(tasks, task);","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"        task.setId(_taskRepository.getLastId(tasks) + 1);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"        if(tasks.add(task)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"            CommonHelper.printMessage(MessageConstants.ADD_TASK);","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"            printTask(task);","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"            return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"        } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"            CommonHelper.printMessage(MessageConstants.GENERAL_ERROR);","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"            return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"     * Validates task against existing tasks to make sure it exists. Sets the IsDone flag accordingly, Displays respective message for mark/unmark and prints task.","lastModifiedDate":"2022-11-09"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"     * @param isDone boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"     * @return boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if modifies a task that does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"    public boolean hasItemStateUpdated(int id, boolean isDone) throws DukeArgumentException, DukeNotFoundException {","lastModifiedDate":"2022-11-09"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"        Task task \u003d _taskRepository.validateTask(tasks, id);","lastModifiedDate":"2022-11-08"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"        if(task !\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"Ayesh02"},"content":"            task.setIsDone(isDone);","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"Ayesh02"},"content":"            if (isDone) {","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"Ayesh02"},"content":"                CommonHelper.printMessage(MessageConstants.MARK_TASK);","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"Ayesh02"},"content":"            } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"Ayesh02"},"content":"                CommonHelper.printMessage(MessageConstants.UNMARK_TASK);","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"Ayesh02"},"content":"            task.printItem();","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"Ayesh02"},"content":"            return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"Ayesh02"},"content":"        return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":129,"author":{"gitId":"Ayesh02"},"content":"     * Validates task against existing tasks to make sure it exists. Deletes task and prints it.","lastModifiedDate":"2022-11-09"},{"lineNumber":130,"author":{"gitId":"Ayesh02"},"content":"     * If encountered an error while removing, print general error message.","lastModifiedDate":"2022-11-09"},{"lineNumber":131,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":132,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":133,"author":{"gitId":"Ayesh02"},"content":"     * @return boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":134,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if modifies a task that does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":135,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":136,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":137,"author":{"gitId":"Ayesh02"},"content":"    public boolean hasItemDeleted(int id) throws DukeArgumentException, DukeNotFoundException {","lastModifiedDate":"2022-11-09"},{"lineNumber":138,"author":{"gitId":"Ayesh02"},"content":"        Task task \u003d _taskRepository.validateTask(tasks, id);","lastModifiedDate":"2022-11-08"},{"lineNumber":139,"author":{"gitId":"Ayesh02"},"content":"        if(task !\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":140,"author":{"gitId":"Ayesh02"},"content":"            if (tasks.remove(task)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"Ayesh02"},"content":"                CommonHelper.printMessage(MessageConstants.DELETE_TASK);","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"Ayesh02"},"content":"                printTask(task);","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Ayesh02"},"content":"                return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"Ayesh02"},"content":"            } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"Ayesh02"},"content":"                CommonHelper.printMessage(MessageConstants.GENERAL_ERROR);","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"Ayesh02"},"content":"                return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"Ayesh02"},"content":"        return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":153,"author":{"gitId":"Ayesh02"},"content":"     * Finds tasks that is within mandatory start and optional end date range.","lastModifiedDate":"2022-11-09"},{"lineNumber":154,"author":{"gitId":"Ayesh02"},"content":"     * If no results, print no results message.","lastModifiedDate":"2022-11-09"},{"lineNumber":155,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":156,"author":{"gitId":"Ayesh02"},"content":"     * @param start LocalDate.","lastModifiedDate":"2022-11-09"},{"lineNumber":157,"author":{"gitId":"Ayesh02"},"content":"     * @param end LocalDate.","lastModifiedDate":"2022-11-09"},{"lineNumber":158,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":159,"author":{"gitId":"Ayesh02"},"content":"    public void filterByDates(LocalDate start, LocalDate end){","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"Ayesh02"},"content":"        ArrayList\u003cTask\u003e results \u003d this.tasks.stream().filter(x -\u003e x.compare(start, end)).collect(Collectors.toCollection(ArrayList\u003cTask\u003e::new));","lastModifiedDate":"2022-11-08"},{"lineNumber":161,"author":{"gitId":"Ayesh02"},"content":"        printResults(results);","lastModifiedDate":"2022-11-08"},{"lineNumber":162,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":164,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":165,"author":{"gitId":"Ayesh02"},"content":"     * Validates task against existing tasks to make sure it exists. Snoozes task and prints it.","lastModifiedDate":"2022-11-09"},{"lineNumber":166,"author":{"gitId":"Ayesh02"},"content":"     * If encountered an error while removing, print general error message.","lastModifiedDate":"2022-11-09"},{"lineNumber":167,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":168,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":169,"author":{"gitId":"Ayesh02"},"content":"     * @param newDateTime String.","lastModifiedDate":"2022-11-09"},{"lineNumber":170,"author":{"gitId":"Ayesh02"},"content":"     * @param isNewDateTimeSpecified boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":171,"author":{"gitId":"Ayesh02"},"content":"     * @return boolean.","lastModifiedDate":"2022-11-09"},{"lineNumber":172,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if modifies a task that does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":173,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if new date time is empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":174,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid date string argument passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":175,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":176,"author":{"gitId":"Ayesh02"},"content":"    public boolean hasItemSnoozed(int id, String newDateTime, boolean isNewDateTimeSpecified) throws DukeValidationException, DukeArgumentException, DukeNotFoundException, DukeExistedException {","lastModifiedDate":"2022-11-12"},{"lineNumber":177,"author":{"gitId":"Ayesh02"},"content":"        Task task \u003d _taskRepository.validateTask(tasks, id);","lastModifiedDate":"2022-11-08"},{"lineNumber":178,"author":{"gitId":"Ayesh02"},"content":"        if(task !\u003d null){","lastModifiedDate":"2022-11-02"},{"lineNumber":179,"author":{"gitId":"Ayesh02"},"content":"            if(CommonHelper.isEmptyOrNull(newDateTime) \u0026\u0026 !isNewDateTimeSpecified) {","lastModifiedDate":"2022-11-08"},{"lineNumber":180,"author":{"gitId":"Ayesh02"},"content":"                task.postpone(newDateTime, false);","lastModifiedDate":"2022-11-12"},{"lineNumber":181,"author":{"gitId":"Ayesh02"},"content":"                CommonHelper.printMessage(MessageConstants.DEFAULT_SNOOZE_TASK);","lastModifiedDate":"2022-11-02"},{"lineNumber":182,"author":{"gitId":"Ayesh02"},"content":"            } else {","lastModifiedDate":"2022-11-08"},{"lineNumber":183,"author":{"gitId":"Ayesh02"},"content":"                if(tasks.stream().filter(x -\u003e x.find(newDateTime) \u0026\u0026 x.getName().equals(task.getName()) \u0026\u0026 x.getId() !\u003d id).count() \u003e 0)","lastModifiedDate":"2022-11-12"},{"lineNumber":184,"author":{"gitId":"Ayesh02"},"content":"                    throw new DukeExistedException(MessageConstants.TASK_EXISTED_ERROR);","lastModifiedDate":"2022-11-12"},{"lineNumber":185,"author":{"gitId":"Ayesh02"},"content":"                else{","lastModifiedDate":"2022-11-12"},{"lineNumber":186,"author":{"gitId":"Ayesh02"},"content":"                    task.postpone(newDateTime, isNewDateTimeSpecified);","lastModifiedDate":"2022-11-12"},{"lineNumber":187,"author":{"gitId":"Ayesh02"},"content":"                    CommonHelper.printMessage(MessageConstants.SNOOZE_TASK);","lastModifiedDate":"2022-11-02"},{"lineNumber":188,"author":{"gitId":"Ayesh02"},"content":"                }","lastModifiedDate":"2022-11-08"},{"lineNumber":189,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-11-12"},{"lineNumber":190,"author":{"gitId":"Ayesh02"},"content":"            printTask(task);","lastModifiedDate":"2022-11-02"},{"lineNumber":191,"author":{"gitId":"Ayesh02"},"content":"            return true;","lastModifiedDate":"2022-11-02"},{"lineNumber":192,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":193,"author":{"gitId":"Ayesh02"},"content":"        return false;","lastModifiedDate":"2022-11-02"},{"lineNumber":194,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":195,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-08"},{"lineNumber":196,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-09"},{"lineNumber":197,"author":{"gitId":"Ayesh02"},"content":"     * Finds tasks that contains keyword.","lastModifiedDate":"2022-11-09"},{"lineNumber":198,"author":{"gitId":"Ayesh02"},"content":"     * If no results, print no results message.","lastModifiedDate":"2022-11-09"},{"lineNumber":199,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":200,"author":{"gitId":"Ayesh02"},"content":"     * @param keyword String.","lastModifiedDate":"2022-11-09"},{"lineNumber":201,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeValidationException if keyword is empty.","lastModifiedDate":"2022-11-09"},{"lineNumber":202,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-09"},{"lineNumber":203,"author":{"gitId":"Ayesh02"},"content":"    public void find(String keyword) throws DukeValidationException {","lastModifiedDate":"2022-11-08"},{"lineNumber":204,"author":{"gitId":"Ayesh02"},"content":"        if(CommonHelper.isEmptyOrNull(keyword)) {","lastModifiedDate":"2022-11-08"},{"lineNumber":205,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeValidationException(String.format(MessageConstants.TASK_VALIDATION_EMPTY_ERROR, \"keyword\"));","lastModifiedDate":"2022-11-08"},{"lineNumber":206,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":207,"author":{"gitId":"Ayesh02"},"content":"        ArrayList\u003cTask\u003e results \u003d this.tasks.stream().filter(x -\u003e x.find(keyword)).collect(Collectors.toCollection(ArrayList\u003cTask\u003e::new));","lastModifiedDate":"2022-11-08"},{"lineNumber":208,"author":{"gitId":"Ayesh02"},"content":"        printResults(results);","lastModifiedDate":"2022-11-08"},{"lineNumber":209,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":210,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":210}},{"path":"src/main/java/domain/exceptions/DukeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.exceptions;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public class DukeArgumentException extends DukeException{","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"     * DukeArgumentException is a DukeException","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"     * Thrown when arguments passed are null/empty","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    public DukeArgumentException(String message) {","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"        super(message);","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":11}},{"path":"src/main/java/domain/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.exceptions;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"     * Base Exception","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"     * Default constructor with string message","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"     * Prints exception in this format: {exceptionCode} - {errorMessage}","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"    public DukeException(String message){","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"        System.out.println(String.format(\"\\t%s - %s\", this.getExceptionCode(this), message));","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"     * Default constructor with exception","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"     * Prints exception in this format: {exceptionCode} - {errorMessage}","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    public DukeException(Exception ex) {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"        ex.printStackTrace();","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"        System.out.println(String.format(\"\\t%s - %s\", this.getExceptionCode(ex), ex));","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"     * Get exception code based on the type of exception that is thrown","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    private DukeExceptionCode getExceptionCode(Exception ex){","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"        String className \u003d ex.getClass().getName().toLowerCase();","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"        if(className.contains(\"notfound\")) {","lastModifiedDate":"2022-11-08"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"            return DukeExceptionCode.NotFound;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"        } else if(className.contains(\"existed\")) {","lastModifiedDate":"2022-11-08"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"            return DukeExceptionCode.Existed;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        } else if(className.contains(\"validation\")) {","lastModifiedDate":"2022-11-08"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"            return DukeExceptionCode.Validation;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"        } else if(className.contains(\"argument\")) {","lastModifiedDate":"2022-11-08"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"            return DukeExceptionCode.Argument;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"        } else {","lastModifiedDate":"2022-11-08"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"            return DukeExceptionCode.Other;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":39}},{"path":"src/main/java/domain/exceptions/DukeExceptionCode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.exceptions;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"/**","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":" * List of Error Exception Type with its Code","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":" */","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"public enum DukeExceptionCode {","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"    Validation(\"E100\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    NotFound(\"E101\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"    Existed(\"E102\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    Argument(\"E103\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"    Other(\"E000\");","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"    public final String code;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    private DukeExceptionCode(String code) {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":17}},{"path":"src/main/java/domain/exceptions/DukeExistedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.exceptions;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public class DukeExistedException extends DukeException{","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"     * DukeExistedException is a DukeException","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"     * Thrown when duplicates are being created","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    public DukeExistedException(String message) {","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"        super(message);","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":11}},{"path":"src/main/java/domain/exceptions/DukeFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.exceptions;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public class DukeFileException extends DukeException{","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"     * DukeFileException is a DukeException","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"     * Thrown when error is reading or writing to a file","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    public DukeFileException(String message){","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"        super(message);","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ayesh02":11}},{"path":"src/main/java/domain/exceptions/DukeNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.exceptions;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public class DukeNotFoundException extends DukeException{","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"     * DukeNotFoundException is a DukeException","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"     * Thrown when requested item cannot be found","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    public DukeNotFoundException(String message) {","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"        super(message);","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":11}},{"path":"src/main/java/domain/exceptions/DukeValidationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.exceptions;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"public class DukeValidationException extends DukeException{","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"     * DukeValidationException is a DukeException","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"     * Thrown when properties are null/empty when it is required","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"    public DukeValidationException(String message) {","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"        super(message);","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ayesh02":11}},{"path":"src/main/java/domain/repositories/IStorageRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.repositories;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Task;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import java.io.File;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"public interface IStorageRepository {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"    public File initialise() throws DukeFileException;","lastModifiedDate":"2022-11-08"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"    public void write(File file, String row) throws DukeFileException;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    public void override(ArrayList\u003cTask\u003e tasks) throws DukeFileException;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ayesh02":15}},{"path":"src/main/java/domain/repositories/ITaskRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.repositories;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Task;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeExistedException;","lastModifiedDate":"2022-11-08"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeNotFoundException;","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"public interface ITaskRepository {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    public Optional\u003cTask\u003e getItem(ArrayList\u003cTask\u003e tasks, int n);","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"    public Optional\u003cTask\u003e getItem(ArrayList\u003cTask\u003e tasks, Task task);","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    public int getLastId(ArrayList\u003cTask\u003e tasks);","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"    public Task validateTask(ArrayList\u003cTask\u003e tasks, int n) throws DukeNotFoundException, DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    public void validateTask(ArrayList\u003cTask\u003e tasks, Task task) throws DukeExistedException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    public ArrayList\u003cTask\u003e convertToTaskList() throws DukeFileException, DukeArgumentException;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ayesh02":21}},{"path":"src/main/java/domain/repositories/StorageRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.repositories;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.StorageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Task;","lastModifiedDate":"2022-10-29"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeFileException;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import java.io.File;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"public class StorageRepository implements IStorageRepository{","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"    public StorageRepository(){","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"     * Initialise a file pointing to specified file path and is writable \u0026 readable.","lastModifiedDate":"2022-11-09"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"     * If file does not exist, initialised file will be saved and adds default header.","lastModifiedDate":"2022-11-09"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"     * @return File.","lastModifiedDate":"2022-11-09"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to file.","lastModifiedDate":"2022-11-09"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    public File initialise() throws DukeFileException {","lastModifiedDate":"2022-11-08"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"        File file \u003d new File(StorageConstants.FILE_PATH);","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"        file.setWritable(true);","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"        file.setReadable(true);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"        if(!file.exists()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"            try {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"                file.createNewFile();","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"                write(file, StorageConstants.HEADER);","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"            } catch (IOException ex){","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"                throw new DukeFileException(MessageConstants.TASK_GET_ERROR);","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"        return file;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"     * Appends new row to the file.","lastModifiedDate":"2022-11-09"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"     * @param file File.","lastModifiedDate":"2022-11-09"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"     * @param row String.","lastModifiedDate":"2022-11-09"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to file.","lastModifiedDate":"2022-11-09"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"    public void write(File file, String row) throws DukeFileException {","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"            FileWriter writer \u003d new FileWriter(file, true);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"            writer.write(row + \"\\n\");","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"            writer.close();","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"        } catch (IOException ex){","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeFileException(MessageConstants.FILE_WRITE_ERROR);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"     * Creates a new file with the latest tasks and Replaces previous file with this.","lastModifiedDate":"2022-11-09"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"     * @param tasks ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if unable to save changes to file or file.","lastModifiedDate":"2022-11-09"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"    public void override(ArrayList\u003cTask\u003e tasks) throws DukeFileException {","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"            FileWriter writer \u003d new FileWriter(StorageConstants.FILE_PATH);","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"            writer.append(StorageConstants.HEADER + \"\\n\");","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"                writer.append(task.toString() + \"\\n\");","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"            writer.flush();","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"        } catch (IOException ex){","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeFileException(MessageConstants.FILE_OVERWRITE_ERROR);","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ayesh02":75}},{"path":"src/main/java/domain/repositories/TaskRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.repositories;","lastModifiedDate":"2022-10-29"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.MessageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.StorageConstants;","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Task;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Todo;","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Event;","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.Deadline;","lastModifiedDate":"2022-11-08"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import domain.aggregates.tracker.TaskType;","lastModifiedDate":"2022-11-08"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.*;","lastModifiedDate":"2022-11-09"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"public class TaskRepository implements ITaskRepository {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    public TaskRepository() {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"     * Retrieves first item by ID.","lastModifiedDate":"2022-11-09"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"     * @param tasks ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"     * @param id integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"     * @return Optional\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    public Optional\u003cTask\u003e getItem(ArrayList\u003cTask\u003e tasks, int id){","lastModifiedDate":"2022-11-08"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        return tasks.stream().filter(x -\u003e x.getId() \u003d\u003d id).findFirst();","lastModifiedDate":"2022-11-08"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"     * Retrieves first item by item.","lastModifiedDate":"2022-11-09"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"     * @param tasks ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"     * @param task Task.","lastModifiedDate":"2022-11-09"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"     * @return Optional\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"    public Optional\u003cTask\u003e getItem(ArrayList\u003cTask\u003e tasks, Task task){","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"        return tasks.stream().filter(x -\u003e x.equals(task)).findFirst();","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"     * Retrieves last item ID.","lastModifiedDate":"2022-11-09"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"     * @param tasks ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"     * @return Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"    public int getLastId(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"        if(tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-11-08"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"            return 0;","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"        return tasks.get(tasks.size() - 1).getId();","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"     * Validates Task by index passed where Id is \u003e 0 and \u003c last item Id.","lastModifiedDate":"2022-11-09"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"     * @param tasks ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"     * @param id Integer.","lastModifiedDate":"2022-11-09"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"     * @return Task.","lastModifiedDate":"2022-11-09"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeNotFoundException if task does not exist.","lastModifiedDate":"2022-11-09"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeArgumentException if invalid arguments passed.","lastModifiedDate":"2022-11-09"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"    public Task validateTask(ArrayList\u003cTask\u003e tasks, int id) throws DukeNotFoundException, DukeArgumentException {","lastModifiedDate":"2022-11-09"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"        if(id \u003c 0) {","lastModifiedDate":"2022-11-08"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeArgumentException(MessageConstants.TASK_ARGUMENT_SIZE_ERROR);","lastModifiedDate":"2022-11-09"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"        } else if(id \u003d\u003d 0 || id \u003e getLastId(tasks)) {","lastModifiedDate":"2022-11-08"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeArgumentException(MessageConstants.TASK_ARGUMENT_SIZE_ERROR);","lastModifiedDate":"2022-11-09"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"        Optional\u003cTask\u003e task \u003d getItem(tasks, id);","lastModifiedDate":"2022-11-08"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"        if(task.isEmpty()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeNotFoundException(MessageConstants.TASK_NOT_FOUND_ERROR);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-08"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"        return task.get();","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"     * Validates Task by task to make sure there are no duplicates.","lastModifiedDate":"2022-11-09"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"     * @param tasks ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"     * @param task Task.","lastModifiedDate":"2022-11-09"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeExistedException if task already exists.","lastModifiedDate":"2022-11-09"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"    public void validateTask(ArrayList\u003cTask\u003e tasks, Task task) throws DukeExistedException {","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"        if(!getItem(tasks, task).isEmpty()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeExistedException(MessageConstants.TASK_EXISTED_ERROR);","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-08"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"     * Converts .txt file items to an ArrayList\u003cTask\u003e and returns it. Loads the file by given path and skips the first line which is the Header. Each line is converted and added.","lastModifiedDate":"2022-11-09"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"     *","lastModifiedDate":"2022-11-09"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"     * @return ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-11-09"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"     * @throws DukeFileException if IOException is thrown while reading file.","lastModifiedDate":"2022-11-09"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"    public ArrayList\u003cTask\u003e convertToTaskList() throws DukeFileException {","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"            Scanner scanner \u003d new Scanner(new FileReader(StorageConstants.FILE_PATH));","lastModifiedDate":"2022-11-08"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"            String[] rows;","lastModifiedDate":"2022-11-08"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"            scanner.nextLine();","lastModifiedDate":"2022-11-08"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-11-08"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"                rows \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-11-08"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"                Task task \u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"                switch (TaskType.valueOf(rows[1])) {","lastModifiedDate":"2022-11-08"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"                    case T:","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"                        task \u003d new Todo(Integer.valueOf(rows[0]), rows[3], Boolean.valueOf(rows[2]));","lastModifiedDate":"2022-11-08"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"                    case E:","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"                        task \u003d new Event(Integer.valueOf(rows[0]), rows[3], rows[4], Boolean.valueOf(rows[2]));","lastModifiedDate":"2022-11-08"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"                    case D:","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"Ayesh02"},"content":"                        task \u003d new Deadline(Integer.valueOf(rows[0]), rows[3], rows[4], Boolean.valueOf(rows[2]));","lastModifiedDate":"2022-11-08"},{"lineNumber":117,"author":{"gitId":"Ayesh02"},"content":"                        break;","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"Ayesh02"},"content":"                }","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"Ayesh02"},"content":"                tasks.add(task);","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"Ayesh02"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"Ayesh02"},"content":"            scanner.close();","lastModifiedDate":"2022-11-08"},{"lineNumber":122,"author":{"gitId":"Ayesh02"},"content":"        } catch (IOException ex){","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"Ayesh02"},"content":"            throw new DukeFileException(MessageConstants.TASK_GET_ERROR);","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"Ayesh02"},"content":"        return tasks;","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Ayesh02":127}},{"path":"src/test/java/domain/aggregates/tracker/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-08"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-11-08"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"class DeadlineTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"    @BeforeEach","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    void setUp() {","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"            deadline \u003d new Deadline(\"Task 1 /by Dec 15 2022 14:00\");","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"            deadline \u003d null;","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"            deadline \u003d null;","lastModifiedDate":"2022-11-09"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"    @AfterEach","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"    void tearDown() {","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"        deadline \u003d null;","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"    void deadlineInit_dateTime() {","lastModifiedDate":"2022-11-08"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(0, deadline.getId());","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 1\", deadline.getName());","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(LocalDateTime.parse(\"Dec 15 2022 14:00\", DateTimeFormatter.ofPattern(\"[MMM dd yyyy HH:mm]\")), deadline.getDueDateTime());","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, deadline.getIsDone());","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"    void deadlineInit_date() {","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"            Deadline newDeadline \u003d new Deadline(\"Task 2 /by Dec 15 2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(0, newDeadline.getId());","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(\"Task 2\", newDeadline.getName());","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(LocalDate.parse(\"Dec 15 2022\", DateTimeFormatter.ofPattern(\"[MMM dd yyyy]\")).atStartOfDay(), newDeadline.getDueDateTime());","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, newDeadline.getIsDone());","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"    void deadlineInit_allValues() {","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"        Deadline newDeadline \u003d new Deadline(2, \"Task 2\", \"2022-12-23T20:00\", true);","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(2, newDeadline.getId());","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 2\", newDeadline.getName());","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(LocalDateTime.parse(\"Dec 23 2022 20:00\", DateTimeFormatter.ofPattern(\"[MMM dd yyyy HH:mm]\")), newDeadline.getDueDateTime());","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, newDeadline.getIsDone());","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"    void deadlineInit_null_throwsDukeValidationException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"            Deadline newDeadline \u003d new Deadline(null);","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"            assertThrows(DukeValidationException.class, (Executable) newDeadline);","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"    void deadlineInit_nullName_throwsDukeValidationException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"            Deadline newDeadline \u003d new Deadline(\" /by 2022-11-05\");","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"            assertThrows(DukeValidationException.class, (Executable) newDeadline);","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"    void deadlineInit_nullDate_throwsDukeValidationException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"            Deadline newDeadline \u003d new Deadline(\"Task 2\");","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"            assertThrows(DukeValidationException.class, (Executable) newDeadline);","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"    void printItem_dateTime() {","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"        deadline.printItem();","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"\\t\\t0.[D][ ] Task 1 (by: 15 December 2022, 02:00 PM)\\n\", outContent.toString());","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"    void printItem_date() {","lastModifiedDate":"2022-11-01"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"            Deadline deadline2 \u003d new Deadline(\"Task 2 /by Dec 15 2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":116,"author":{"gitId":"Ayesh02"},"content":"            deadline2.printItem();","lastModifiedDate":"2022-11-01"},{"lineNumber":117,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(\"\\t\\t0.[D][ ] Task 2 (by: 15 December 2022)\\n\", outContent.toString());","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":119,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-01"},{"lineNumber":120,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":121,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":122,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":124,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":125,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":126,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_true() {","lastModifiedDate":"2022-11-01"},{"lineNumber":127,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":128,"author":{"gitId":"Ayesh02"},"content":"            Deadline deadline2 \u003d new Deadline(\"Task 1 /by Dec 15 2022 14:00\");","lastModifiedDate":"2022-11-01"},{"lineNumber":129,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(true, deadline.equals(deadline2));","lastModifiedDate":"2022-11-01"},{"lineNumber":130,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-01"},{"lineNumber":132,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":133,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":134,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":135,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":136,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":137,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":138,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_false() {","lastModifiedDate":"2022-11-01"},{"lineNumber":139,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":140,"author":{"gitId":"Ayesh02"},"content":"            Deadline deadline2 \u003d new Deadline(\"Task 2 /by Dec 23 2022 20:00\");","lastModifiedDate":"2022-11-01"},{"lineNumber":141,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, deadline.equals(deadline2));","lastModifiedDate":"2022-11-01"},{"lineNumber":142,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":143,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-01"},{"lineNumber":144,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":145,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":146,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":147,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":148,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":149,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_againstTodo_false() {","lastModifiedDate":"2022-11-08"},{"lineNumber":151,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":152,"author":{"gitId":"Ayesh02"},"content":"            Todo todo \u003d new Todo(\"Task 2\");","lastModifiedDate":"2022-11-01"},{"lineNumber":153,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, deadline.equals(todo));","lastModifiedDate":"2022-11-01"},{"lineNumber":154,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":155,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-01"},{"lineNumber":156,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":157,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":158,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":159,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":160,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_againstEvent_false() {","lastModifiedDate":"2022-11-08"},{"lineNumber":161,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":162,"author":{"gitId":"Ayesh02"},"content":"            Event event \u003d new Event(\"Task 2/at 2022-12-13\");","lastModifiedDate":"2022-11-01"},{"lineNumber":163,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, deadline.equals(event));","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex) {","lastModifiedDate":"2022-11-01"},{"lineNumber":165,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-01"},{"lineNumber":166,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":167,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":168,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":169,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":170,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":171,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":172,"author":{"gitId":"Ayesh02"},"content":"    void testToString() {","lastModifiedDate":"2022-11-01"},{"lineNumber":173,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"0 | D | 0 | Task 1 | 2022-12-15T14:00\", deadline.toString());","lastModifiedDate":"2022-11-01"},{"lineNumber":174,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":175,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":176,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":177,"author":{"gitId":"Ayesh02"},"content":"    void compare_startDate_true() {","lastModifiedDate":"2022-11-01"},{"lineNumber":178,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, deadline.compare(LocalDate.of(2022, 12, 15), null));","lastModifiedDate":"2022-11-01"},{"lineNumber":179,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":180,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":181,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":182,"author":{"gitId":"Ayesh02"},"content":"    void compare_startDate_false() {","lastModifiedDate":"2022-11-01"},{"lineNumber":183,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, deadline.compare(LocalDate.of(2022, 12, 23), null));","lastModifiedDate":"2022-11-01"},{"lineNumber":184,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":185,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":186,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":187,"author":{"gitId":"Ayesh02"},"content":"    void compare_startDateEndDate_true() {","lastModifiedDate":"2022-11-08"},{"lineNumber":188,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, deadline.compare(LocalDate.of(2022, 12, 15), LocalDate.of(2022, 12, 23)));","lastModifiedDate":"2022-11-01"},{"lineNumber":189,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":190,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":191,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"Ayesh02"},"content":"    void compare_startDateEndDate_false() {","lastModifiedDate":"2022-11-08"},{"lineNumber":193,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, deadline.compare(LocalDate.of(2022, 11, 15), LocalDate.of(2022, 11, 23)));","lastModifiedDate":"2022-11-01"},{"lineNumber":194,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":195,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":196,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":197,"author":{"gitId":"Ayesh02"},"content":"    void getId() {","lastModifiedDate":"2022-11-01"},{"lineNumber":198,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(0, deadline.getId());","lastModifiedDate":"2022-11-01"},{"lineNumber":199,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":200,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":201,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":202,"author":{"gitId":"Ayesh02"},"content":"    void setId() {","lastModifiedDate":"2022-11-01"},{"lineNumber":203,"author":{"gitId":"Ayesh02"},"content":"        deadline.setId(1);","lastModifiedDate":"2022-11-01"},{"lineNumber":204,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(1, deadline.getId());","lastModifiedDate":"2022-11-01"},{"lineNumber":205,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":206,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":207,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":208,"author":{"gitId":"Ayesh02"},"content":"    void getName() {","lastModifiedDate":"2022-11-01"},{"lineNumber":209,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 1\", deadline.getName());","lastModifiedDate":"2022-11-01"},{"lineNumber":210,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":211,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":212,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":213,"author":{"gitId":"Ayesh02"},"content":"    void setName() {","lastModifiedDate":"2022-11-01"},{"lineNumber":214,"author":{"gitId":"Ayesh02"},"content":"        deadline.setName(\"Updated Task 1\");","lastModifiedDate":"2022-11-01"},{"lineNumber":215,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Updated Task 1\", deadline.getName());","lastModifiedDate":"2022-11-01"},{"lineNumber":216,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":217,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":218,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":219,"author":{"gitId":"Ayesh02"},"content":"    void getIsDone() {","lastModifiedDate":"2022-11-01"},{"lineNumber":220,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, deadline.getIsDone());","lastModifiedDate":"2022-11-01"},{"lineNumber":221,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":222,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":223,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":224,"author":{"gitId":"Ayesh02"},"content":"    void setIsDone_true() {","lastModifiedDate":"2022-11-01"},{"lineNumber":225,"author":{"gitId":"Ayesh02"},"content":"        deadline.setIsDone(true);","lastModifiedDate":"2022-11-01"},{"lineNumber":226,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, deadline.getIsDone());","lastModifiedDate":"2022-11-01"},{"lineNumber":227,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":228,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":229,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":230,"author":{"gitId":"Ayesh02"},"content":"    void setIsDone_false() {","lastModifiedDate":"2022-11-01"},{"lineNumber":231,"author":{"gitId":"Ayesh02"},"content":"        deadline.setIsDone(false);","lastModifiedDate":"2022-11-01"},{"lineNumber":232,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, deadline.getIsDone());","lastModifiedDate":"2022-11-01"},{"lineNumber":233,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":234,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":235,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":236,"author":{"gitId":"Ayesh02"},"content":"    void getDueDateTime() {","lastModifiedDate":"2022-11-01"},{"lineNumber":237,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(LocalDateTime.parse(\"Dec 15 2022 14:00\", DateTimeFormatter.ofPattern(\"[MMM dd yyyy HH:mm]\")), deadline.getDueDateTime());","lastModifiedDate":"2022-11-01"},{"lineNumber":238,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":239,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"Ayesh02":239}},{"path":"src/test/java/domain/aggregates/tracker/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-10-30"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import application.helpers.CommonHelper;","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-10-30"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-30"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-08"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-11-08"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"class EventTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    private Event event;","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"    void setUp() {","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"            event \u003d new Event(\"Task 1 /at Dec 15 2022 14:00\");","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"            event \u003d null;","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"            event \u003d null;","lastModifiedDate":"2022-11-09"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"    @AfterEach","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"    void tearDown() {","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"        event \u003d null;","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"    void eventInit_dateTime(){","lastModifiedDate":"2022-11-08"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(0, event.getId());","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 1\", event.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(LocalDateTime.parse(\"Dec 15 2022 14:00\", DateTimeFormatter.ofPattern(\"[MMM dd yyyy HH:mm]\")), event.getStartDateTime());","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, event.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"    void eventInit_date(){","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"            Event newEvent \u003d new Event(\"Task 2 /at Dec 15 2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(0, newEvent.getId());","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(\"Task 2\", newEvent.getName());","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(LocalDate.parse(\"Dec 15 2022\", DateTimeFormatter.ofPattern(\"[MMM dd yyyy]\")).atStartOfDay(), newEvent.getStartDateTime());","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, newEvent.getIsDone());","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"    void eventInit_allValues(){","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"        Event newEvent \u003d new Event(2,\"Task 2\", \"2022-12-23T20:00\",true);","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(2, newEvent.getId());","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 2\", newEvent.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(LocalDateTime.parse(\"Dec 23 2022 20:00\", DateTimeFormatter.ofPattern(\"[MMM dd yyyy HH:mm]\")), newEvent.getStartDateTime());","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, newEvent.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"    void eventInit_null_throwsDukeValidationException(){","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"            Event newEvent \u003d new Event(null);","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"            assertThrows(DukeValidationException.class, (Executable) newEvent);","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"    void eventInit_nullName_throwsDukeValidationException(){","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"            Event newEvent \u003d new Event(\" /at 2022-11-05\");","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"            assertThrows(DukeValidationException.class, (Executable) newEvent);","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"    void eventInit_nullDate_throwsDukeValidationException(){","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"            Event newEvent \u003d new Event(\"Task 2\");","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"            assertThrows(DukeValidationException.class, (Executable) newEvent);","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"    void printItem_dateTime() {","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"        event.printItem();","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"\\t\\t0.[E][ ] Task 1 (at: 15 December 2022, 02:00 PM)\\n\", outContent.toString());","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"    void printItem_date() {","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"Ayesh02"},"content":"            Event event2 \u003d new Event(\"Task 2 /at Dec 15 2022\");","lastModifiedDate":"2022-10-30"},{"lineNumber":117,"author":{"gitId":"Ayesh02"},"content":"            event2.printItem();","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(\"\\t\\t0.[E][ ] Task 2 (at: 15 December 2022)\\n\", outContent.toString());","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":122,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":123,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":125,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":126,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":127,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_true() {","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":129,"author":{"gitId":"Ayesh02"},"content":"            Event event2 \u003d new Event(\"Task 1 /at Dec 15 2022 14:00\");","lastModifiedDate":"2022-10-30"},{"lineNumber":130,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(true, event.equals(event2));","lastModifiedDate":"2022-10-30"},{"lineNumber":131,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":132,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":133,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":134,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":135,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":136,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":137,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":138,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":139,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":140,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":141,"author":{"gitId":"Ayesh02"},"content":"            Event event2 \u003d new Event(\"Task 2 /at Dec 23 2022 20:00\");","lastModifiedDate":"2022-10-30"},{"lineNumber":142,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, event.equals(event2));","lastModifiedDate":"2022-10-30"},{"lineNumber":143,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":144,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":145,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":146,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":147,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":148,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":149,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":150,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":151,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_againstTodo_false() {","lastModifiedDate":"2022-11-08"},{"lineNumber":152,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":153,"author":{"gitId":"Ayesh02"},"content":"            Todo todo \u003d new Todo(\"Task 2\");","lastModifiedDate":"2022-10-30"},{"lineNumber":154,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, event.equals(todo));","lastModifiedDate":"2022-10-30"},{"lineNumber":155,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":156,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":157,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":158,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":159,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":160,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":161,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_againstDeadline_false() {","lastModifiedDate":"2022-11-08"},{"lineNumber":162,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":163,"author":{"gitId":"Ayesh02"},"content":"            Deadline deadline \u003d new Deadline(\"Task 2/by 2022-12-13\");","lastModifiedDate":"2022-10-30"},{"lineNumber":164,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, event.equals(deadline));","lastModifiedDate":"2022-10-30"},{"lineNumber":165,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":166,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":167,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":168,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":169,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":170,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":171,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":172,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":173,"author":{"gitId":"Ayesh02"},"content":"    void testToString() {","lastModifiedDate":"2022-10-30"},{"lineNumber":174,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"0 | E | 0 | Task 1 | 2022-12-15T14:00\", event.toString());","lastModifiedDate":"2022-10-30"},{"lineNumber":175,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":176,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":177,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":178,"author":{"gitId":"Ayesh02"},"content":"    void compare_startDate_true() {","lastModifiedDate":"2022-10-30"},{"lineNumber":179,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, event.compare(LocalDate.of(2022, 12, 15),null));","lastModifiedDate":"2022-10-30"},{"lineNumber":180,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":181,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":182,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":183,"author":{"gitId":"Ayesh02"},"content":"    void compare_startDate_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":184,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, event.compare(LocalDate.of(2022, 12, 23),null));","lastModifiedDate":"2022-10-30"},{"lineNumber":185,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":186,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":187,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":188,"author":{"gitId":"Ayesh02"},"content":"    void compare_startDateEndDate_true() {","lastModifiedDate":"2022-11-08"},{"lineNumber":189,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, event.compare(LocalDate.of(2022, 12, 15),LocalDate.of(2022, 12, 23)));","lastModifiedDate":"2022-10-30"},{"lineNumber":190,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":191,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":192,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":193,"author":{"gitId":"Ayesh02"},"content":"    void compare_startDateEndDate_false() {","lastModifiedDate":"2022-11-08"},{"lineNumber":194,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, event.compare(LocalDate.of(2022, 11, 15),LocalDate.of(2022, 11, 23)));","lastModifiedDate":"2022-10-30"},{"lineNumber":195,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":196,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":197,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":198,"author":{"gitId":"Ayesh02"},"content":"    void getId() {","lastModifiedDate":"2022-10-30"},{"lineNumber":199,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(0, event.getId());","lastModifiedDate":"2022-10-30"},{"lineNumber":200,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":201,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":202,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":203,"author":{"gitId":"Ayesh02"},"content":"    void setId() {","lastModifiedDate":"2022-10-30"},{"lineNumber":204,"author":{"gitId":"Ayesh02"},"content":"        event.setId(1);","lastModifiedDate":"2022-10-30"},{"lineNumber":205,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(1, event.getId());","lastModifiedDate":"2022-10-30"},{"lineNumber":206,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":207,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":208,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":209,"author":{"gitId":"Ayesh02"},"content":"    void getName() {","lastModifiedDate":"2022-10-30"},{"lineNumber":210,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 1\", event.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":211,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":212,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":213,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":214,"author":{"gitId":"Ayesh02"},"content":"    void setName() {","lastModifiedDate":"2022-10-30"},{"lineNumber":215,"author":{"gitId":"Ayesh02"},"content":"        event.setName(\"Updated Task 1\");","lastModifiedDate":"2022-10-30"},{"lineNumber":216,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Updated Task 1\", event.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":217,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":218,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":219,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":220,"author":{"gitId":"Ayesh02"},"content":"    void getIsDone() {","lastModifiedDate":"2022-10-30"},{"lineNumber":221,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, event.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":222,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":223,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":224,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":225,"author":{"gitId":"Ayesh02"},"content":"    void setIsDone_true() {","lastModifiedDate":"2022-10-30"},{"lineNumber":226,"author":{"gitId":"Ayesh02"},"content":"        event.setIsDone(true);","lastModifiedDate":"2022-10-30"},{"lineNumber":227,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, event.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":228,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":229,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":230,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":231,"author":{"gitId":"Ayesh02"},"content":"    void setIsDone_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":232,"author":{"gitId":"Ayesh02"},"content":"        event.setIsDone(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":233,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, event.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":234,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":235,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":236,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":237,"author":{"gitId":"Ayesh02"},"content":"    void getStartDateTime() {","lastModifiedDate":"2022-10-30"},{"lineNumber":238,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(LocalDateTime.parse(\"Dec 15 2022 14:00\", DateTimeFormatter.ofPattern(\"[MMM dd yyyy HH:mm]\")), event.getStartDateTime());","lastModifiedDate":"2022-10-30"},{"lineNumber":239,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":240,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"Ayesh02":240}},{"path":"src/test/java/domain/aggregates/tracker/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ayesh02"},"content":"package domain.aggregates.tracker;","lastModifiedDate":"2022-10-30"},{"lineNumber":2,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":3,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeArgumentException;","lastModifiedDate":"2022-11-09"},{"lineNumber":4,"author":{"gitId":"Ayesh02"},"content":"import domain.exceptions.DukeValidationException;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-11-08"},{"lineNumber":6,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-11-08"},{"lineNumber":7,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-08"},{"lineNumber":8,"author":{"gitId":"Ayesh02"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"Ayesh02"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"Ayesh02"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"Ayesh02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"Ayesh02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-08"},{"lineNumber":15,"author":{"gitId":"Ayesh02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-11-08"},{"lineNumber":16,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"Ayesh02"},"content":"public class TodoTest {","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"Ayesh02"},"content":"    private Todo todo;","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"Ayesh02"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"Ayesh02"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"Ayesh02"},"content":"    void setUp() {","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"Ayesh02"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"Ayesh02"},"content":"            todo \u003d new Todo(\"Task 1\");","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"Ayesh02"},"content":"            todo \u003d null;","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"Ayesh02"},"content":"    @AfterEach","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"Ayesh02"},"content":"    void tearDown() {","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"Ayesh02"},"content":"        todo \u003d null;","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"Ayesh02"},"content":"    void todoInit(){","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(0, todo.getId());","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 1\", todo.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, todo.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"Ayesh02"},"content":"    void todoInit_allValues(){","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"Ayesh02"},"content":"        Todo newTodo \u003d new Todo(2,\"Task 2\",true);","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(2, newTodo.getId());","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 2\", newTodo.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, newTodo.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"Ayesh02"},"content":"    void todoInit_null_throwsDukeValidationException(){","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"Ayesh02"},"content":"            Todo newTodo \u003d new Todo(null);","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"Ayesh02"},"content":"            assertThrows(DukeValidationException.class, (Executable) newTodo);","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"Ayesh02"},"content":"    void printItem() {","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"Ayesh02"},"content":"        todo.printItem();","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"\\t\\t0.[T][ ] Task 1\\n\", outContent.toString());","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_true() {","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"Ayesh02"},"content":"            Todo todo2 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(true, todo.equals(todo2));","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"Ayesh02"},"content":"            Todo todo2 \u003d new Todo(\"Task 2\");","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, todo.equals(todo2));","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_differentTask_event_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":90,"author":{"gitId":"Ayesh02"},"content":"            Event event \u003d new Event(\"Task 2/at 2022-12-10 02:00\");","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, todo.equals(event));","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":95,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":96,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":99,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"Ayesh02"},"content":"    void testEquals_differentTask_deadline_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"Ayesh02"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"Ayesh02"},"content":"            Deadline deadline \u003d new Deadline(\"Task 2/by 2022-12-13\");","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"Ayesh02"},"content":"            assertEquals(false, todo.equals(deadline));","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"Ayesh02"},"content":"        } catch (DukeValidationException ex){","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"Ayesh02"},"content":"            assert(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"Ayesh02"},"content":"        }catch (DukeArgumentException ex) {","lastModifiedDate":"2022-11-09"},{"lineNumber":107,"author":{"gitId":"Ayesh02"},"content":"            assert (false);","lastModifiedDate":"2022-11-09"},{"lineNumber":108,"author":{"gitId":"Ayesh02"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"Ayesh02"},"content":"    void testToString() {","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"0 | T | 0 | Task 1\", todo.toString());","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":117,"author":{"gitId":"Ayesh02"},"content":"    void compare_now_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, todo.compare(LocalDate.now(),LocalDate.now()));","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"Ayesh02"},"content":"    void compare_null_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":123,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, todo.compare(null,null));","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":125,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":126,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":127,"author":{"gitId":"Ayesh02"},"content":"    void getId() {","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(0, todo.getId());","lastModifiedDate":"2022-10-30"},{"lineNumber":129,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":130,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":131,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":132,"author":{"gitId":"Ayesh02"},"content":"    void setId() {","lastModifiedDate":"2022-10-30"},{"lineNumber":133,"author":{"gitId":"Ayesh02"},"content":"        todo.setId(1);","lastModifiedDate":"2022-10-30"},{"lineNumber":134,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(1, todo.getId());","lastModifiedDate":"2022-10-30"},{"lineNumber":135,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":136,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":137,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":138,"author":{"gitId":"Ayesh02"},"content":"    void getName() {","lastModifiedDate":"2022-10-30"},{"lineNumber":139,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Task 1\", todo.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":140,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":141,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":142,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":143,"author":{"gitId":"Ayesh02"},"content":"    void setName() {","lastModifiedDate":"2022-10-30"},{"lineNumber":144,"author":{"gitId":"Ayesh02"},"content":"        todo.setName(\"Updated Task 1\");","lastModifiedDate":"2022-10-30"},{"lineNumber":145,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(\"Updated Task 1\", todo.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":146,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":147,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":148,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":149,"author":{"gitId":"Ayesh02"},"content":"    void getIsDone() {","lastModifiedDate":"2022-10-30"},{"lineNumber":150,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, todo.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":151,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":152,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":153,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":154,"author":{"gitId":"Ayesh02"},"content":"    void setIsDone_true() {","lastModifiedDate":"2022-10-30"},{"lineNumber":155,"author":{"gitId":"Ayesh02"},"content":"        todo.setIsDone(true);","lastModifiedDate":"2022-10-30"},{"lineNumber":156,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(true, todo.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":157,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":158,"author":{"gitId":"Ayesh02"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":159,"author":{"gitId":"Ayesh02"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":160,"author":{"gitId":"Ayesh02"},"content":"    void setIsDone_false() {","lastModifiedDate":"2022-10-30"},{"lineNumber":161,"author":{"gitId":"Ayesh02"},"content":"        todo.setIsDone(false);","lastModifiedDate":"2022-10-30"},{"lineNumber":162,"author":{"gitId":"Ayesh02"},"content":"        assertEquals(false, todo.getIsDone());","lastModifiedDate":"2022-10-30"},{"lineNumber":163,"author":{"gitId":"Ayesh02"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":164,"author":{"gitId":"Ayesh02"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"Ayesh02":164}}]
