[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2019-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"limexpepper":1,"-":9}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"# nus.duke.Duke project template","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"instructions on how to use it.","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"   first)","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"3. After that, locate the `src/main/java/nus.duke.Duke.java` file, right-click it, and","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"   choose `Run nus.duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"   setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limexpepper":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"    mainClassName \u003d \"nus.duke.Duke\"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limexpepper":1,"-":40}},{"path":"data/DukeTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"TODO send dogs to the groomers","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"TODO borrow Harry Potter book","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"TODO borrow The Cat In The Hat book","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"DEADLINE return Harry Potter book /by 20/10/2022","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"DEADLINE return The Cat In The Hat book /by 01/01/2023","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"DEADLINE finish coding assignment /by 12/12/2022","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"DEADLINE finish ethics essay /by 7/11/2022","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"EVENT visit the zoo /at San Diego /on 6/06/2023","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"EVENT dog park gathering /at Central Park /on 23/12/2022","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"limexpepper":9}},{"path":"src/main/java/nus/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"import nus.duke.frontend.*;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"import nus.duke.parser.*;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"import nus.duke.storage.*;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"import nus.duke.tasklist.*;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"import nus.duke.task.*;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":" * The Duke program is a virtual personal assistant that keeps track of a user\u0027s tasks.","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":" * Users interact with the Duke program by chatting with Dobby, a chatbot named after an elf in Harry Potter.","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":" * Dobby is assisted by his friend Pooh Bear.","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":" *","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":" * @author  ANG Poh Ye","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":" * @version 1.0","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":" * @since   Oct 2022","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\tprivate Storage storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\tprivate TaskList tasks;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\tprivate Ui ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\tprivate Parser parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\tScanner s;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\tpublic Duke(String filePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\t\tboolean isEmpty \u003d filePath.isEmpty();","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t\tassert(isEmpty \u003d\u003d false);","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t\ttry {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"\t\t\tstorage \u003d new Storage(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t\t\tArrayList\u003cTask\u003e hardDiskTaskList \u003d storage.load();","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t\t\ttasks \u003d new TaskList(hardDiskTaskList);","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t\t} catch (IOException ioe) {","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(FILE_WRITER_IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t * Starts the Duke program and keeps the program running until it is terminated.","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\tpublic void run() {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"\t\tui \u003d new Ui();","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t\tparser \u003d new Parser();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t\ts \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t\tui.startProgram();","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\t\tboolean terminateProgram \u003d false;","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\t\tString command;","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t\tdo {","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\t\t\tString userInput \u003d ui.getUserInput(s);","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t\t\tcommand \u003d parser.parse(userInput);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t\t\tterminateProgram \u003d tasks.processTasks(command, userInput);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t\t} while (terminateProgram !\u003d true);","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t\tstorage.saveTasks(tasks);","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t\tui.exit();","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"\t * Entry point to the Duke program.","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\t * The filepath was intentionally fixed for ease of use i.e. just run the program.","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"\tpublic static void main(String[] args) {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"\t\tnew Duke(\"/Users/rebecca/Desktop/Duke/data/DukeTasks.txt\").run();","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\t}","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"limexpepper":67,"-":3}},{"path":"src/main/java/nus/duke/enumerations/LegalCommandEnumerations.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.enumerations;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":" * Represents the different types of commands that a user can use.","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"public enum LegalCommandEnumerations {","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"\tMARK, UNMARK, DELETE, VIEW, EXIT, TODO, DEADLINE, EVENT, REMINDERS, FILTER","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"limexpepper":8}},{"path":"src/main/java/nus/duke/enumerations/LegalTaskEnumerations.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.enumerations;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":" * Represents the different types of task.","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":" * Enumerations were needed to differentiate \"T\" for \"TODO\" versus the \"T\" used to represent the boolean true.","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"public enum LegalTaskEnumerations {","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"\tT, D, E","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"limexpepper":9}},{"path":"src/main/java/nus/duke/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":" * This exception is thrown when a task is empty.","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"\t// no other code needed","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"limexpepper":8}},{"path":"src/main/java/nus/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.exceptions;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":" * This exception is thrown when a user does not enter a command from the command menu.","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":" * Commands not listed in the command menu are invalid or illegal commands.","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"\t// no other code needed","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"limexpepper":9}},{"path":"src/main/java/nus/duke/exceptions/MissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.exceptions;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":" * This exception is thrown when a user does not supply a date for a deadline or event task.","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"public class MissingDateException extends Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"\t// no other code needed","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"limexpepper":8}},{"path":"src/main/java/nus/duke/exceptions/MissingKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.exceptions;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":" * This exception is thrown when a user does not follow the correct syntax when adding deadlines or events.","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":" * For example, deadlines must include \"/by\" as a date needs to be supplied.","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"public class MissingKeywordException extends Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"\t// no other code needed","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"limexpepper":9}},{"path":"src/main/java/nus/duke/frontend/CommonPrintStatements.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.frontend;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":" * This is a class containing all the print statements commonly used through the code, to keep the code neat.","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"public class CommonPrintStatements {","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String FILE_WRITER_IOEXCEPTION_ERROR_MESSAGE \u003d \"[ERROR] IO Exception thrown by FileWriter\";","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String TASK_CANNOT_BE_EMPTY_ERROR_MESSAGE \u003d \"[ERROR] Task cannot be empty\";","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String INVALID_COMMAND_ERROR_MESSAGE \u003d \"[ERROR] This is not a valid command\";","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String MISSING_KEYWORD_ERROR_MESSAGE \u003d \"[ERROR] You are missing a keywords such as //by for deadlines and //at or //on for events\";","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String MISSING_DATE_ERROR_MESSAGE \u003d \"[ERROR] Please key in a date in the correct format i.e. dd/mm/yyyy is correct and dd-mm-yyyy is wrong\";","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String ASK_FOR_USER_INPUT_AFTER_ERROR_MESSAGE_WAS_DISPLAYED_MESSAGE \u003d \"Please key in the correct command:\";","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String ASK_FOR_USER_INPUT_MESSAGE \u003d \"ʕ •ᴥ•ʔ \\uD83D\\uDCAC Please key in a command from the command menu:\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String HARDDISK_LOADED_MESSAGE \u003d \"\\n ʕ •ᴥ•ʔ \\uD83D\\uDCAC Hard disk data has been loaded. Program is now ready\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String HARDDISK_CREATED_MESSAGE \u003d \"\\n ʕ •ᴥ•ʔ \\uD83D\\uDCAC A hard disk file was created. You can now save all your tasks and it will be loaded the next time you log on\";","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String START_PROGRAM_MESSAGE \u003d \" \\uD83D\\uDCAC My name is Dobby and I am a free elf! Please also meet my friend ʕ •ᴥ•ʔ pooh bear!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String EXIT_PROGRAM_MESSAGE \u003d \"ʕ •ᴥ•ʔ \\uD83D\\uDCAC Goodbye, my friend. Dobby must now hurry to Harry Potter\";","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String TASKS_ARE_SAVED_MESSAGE \u003d \"ʕ •ᴥ•ʔ \\uD83D\\uDCAC Your tasks are saved\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String TASKLIST_IS_EMPTY_MESSAGE \u003d \"ʕ •ᴥ•ʔ \\uD83D\\uDCAC There are 0 tasks in your list\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String TASK_ALREADY_MARKED_DONE_MESSAGE \u003d \"ʕ •ᴥ•ʔ \\uD83D\\uDCAC Task was already marked done\";","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String MARKED_AS_TRUE \u003d \"[T]\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String MARKED_AS_FALSE \u003d \"[F]\";","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String TRUE \u003d \"T\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String BY \u003d \"/by\"; // a specific date","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String AT \u003d \"/at\"; // a specific venue","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String ON \u003d \"/on\"; // a specific date","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String REMOVED \u003d \"* Removed *\";","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String MARKED \u003d \"* Marked *\";","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String UNMARKED \u003d \"* Unmarked *\";","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String EXIT \u003d \"EXIT\";","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String SPACE \u003d \" \";","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String DOBBY_ARTWORK \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t\t\t\"   _____\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"  /     \\\\\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"/- (*) |*)\\\\\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"|/ \\\\   _\u003e/\\\\|\" + \"     \\uD83D\\uDCAC My name is Dobby and I am a free elf! Please also meet my friend ʕ •ᴥ•ʔ pooh bear!\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"    \\\\__/    |\\\\\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"   _| |_   \\\\-/\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"  /|\\\\__|\\\\  / /\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\" |/|   |\\\\\\\\//\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\" |||   | ~\u0027\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\" ||| __|\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\" /_\\\\| ||\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\" \\\\_/| ||\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"   |7 |7\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"   || ||\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"   || ||\\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"   \\\\\\\\ \\\\\\\\  \\n\" +","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"  ^^^^ ^^^\";","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\tpublic static final String LOADING_ARTWORK \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\t\t\t\"\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"Loading…\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"█▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"10%\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"███▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"30%\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"█████▒▒▒▒▒\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"50%\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"███████▒▒▒\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"\\n\" +","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\t\"\\u200E0███████████████████100%\";","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"limexpepper":67}},{"path":"src/main/java/nus/duke/frontend/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.frontend;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":" * Represents the user interface.","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":" * User Interface deals with interactions with the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":" * All interactions that are user facing will be found in this class.","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"public class Ui {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"\t * Returns the input keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\t * @param scanner A scanner object.","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\t * @return The user input.","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\tpublic static String getUserInput(Scanner scanner) {","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t\tString input \u003d scanner.nextLine();","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\t\treturn input;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\t * Prints a line border of the command menu.","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"\tpublic static void showLine() {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"_______________ʕ　·ᴥ·ʔ COMMAND MENU  ʕ·ᴥ·　ʔ_______________\");","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"\t * Prints the command menu.","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\tpublic static void printCommandMenu() {","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t\tshowLine();","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"MARK | UNMARK | DELETE | VIEW | EXIT | REMINDERS\");","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"TODO \u003c\u003ctask\u003e\u003e | FILTER \u003c\u003ckeyword\u003e\u003e\");","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"DEADLINE \u003c\u003ctask\u003e\u003e /by \u003c\u003cdd/MM/YYYY\u003e\u003e| EVENT \u003c\u003cTASK\u003e\u003e /at \u003c\u003cvenue\u003e\u003e /on \u003c\u003cdd/MM/YYY\u003e\u003e\");","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"Please ensure commands are all capitalised.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t\tshowLine();","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t * Prints an artwork of Dobby, the elf from Harry Potter.","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\tpublic static void printDobby() {","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(DOBBY_ARTWORK);","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t * Standardise way to start the Duke program.","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\tpublic static void startProgram() {","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t\tprintDobby();","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(ASK_FOR_USER_INPUT_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\t\tprintCommandMenu();","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"limexpepper"},"content":"\t * Prints the goodbye message when a user exits a program.","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"limexpepper"},"content":"\tpublic static void exit() {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(EXIT_PROGRAM_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"limexpepper"},"content":"\t * Prints a message to inform user that hard disk data has been loaded.","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"limexpepper"},"content":"\tpublic static void showHardDiskLoadedMessage() {","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(HARDDISK_LOADED_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"limexpepper"},"content":"\t * Prints message to inform user that the program is working on loading their data.","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"limexpepper"},"content":"\tpublic static void showHardDiskLoadingMessage() {","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(LOADING_ARTWORK);","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"limexpepper"},"content":"\t * Prints a message to inform user that a hard disk has been created for them.","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"limexpepper"},"content":"\tpublic static void showHardDiskCreationMessage() {","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"\\n\");","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(HARDDISK_CREATED_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"\");","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"limexpepper":106}},{"path":"src/main/java/nus/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"import nus.duke.frontend.*;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"import nus.duke.exceptions.*;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"import nus.duke.enumerations.*;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":" * Represents a parser that parses data.","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":" * Parser deals with making sense of the user command.","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"public class Parser {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\tprivate static Ui ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t * Returns the command specified in a user input.","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\t * @return The command specified in the task. For example, in \"MARK 1\", the command returned is \"MARK\".","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\tpublic static String getCommand(String userInput) {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t\tint idx \u003d userInput.indexOf(SPACE);","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t\tif (idx \u003d\u003d -1){","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn userInput;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t\t\tString command \u003d userInput.substring(0, idx);","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn command;","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t * Returns true if the command specified is a valid command, and false if otherwise.","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t * @param command The command that was specified in a task.","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t * @return true (i.e. it is a valid command) or false (i.e. it is not a valid command)","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\tpublic static boolean isValidCommand(String command) {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t\tif ((command.equals(LegalCommandEnumerations.MARK.toString())) || (command.equals(LegalCommandEnumerations.UNMARK.toString())) ||","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t(command.equals(LegalCommandEnumerations.DELETE.toString())) || (command.equals(LegalCommandEnumerations.VIEW.toString())) ||","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t(command.equals(LegalCommandEnumerations.REMINDERS.toString())) || (command.equals(LegalCommandEnumerations.FILTER.toString())) ||","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t(command.equals(LegalCommandEnumerations.EXIT.toString())) || (command.equals(LegalCommandEnumerations.TODO.toString())) ||","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t(command.equals(LegalCommandEnumerations.DEADLINE.toString())) || (command.equals(LegalCommandEnumerations.EVENT.toString()))) {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn true;","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t * Returns true if the task was empty, and false if otherwise.","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t * @return true (i.e. it is an empty task) or false (i.e. it is not an empty task)","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\tpublic static boolean isEmptyTask(String userInput) {","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\t\tint idx \u003d userInput.indexOf(SPACE);","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t\tString str \u003d userInput.substring(idx, userInput.length());","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"\t\tif (str.isBlank()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn true;","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"limexpepper"},"content":"\t * Returns true if a date was supplied for a deadline or event task, and false if otherwise.","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"limexpepper"},"content":"\t * For example, \"DEADLINE finish assignment /by 01/12/2022\" returns true.","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"limexpepper"},"content":"\t * For example, \"DEADLINE finish assignment /by \" returns false.","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"limexpepper"},"content":"\t * @return true (i.e. date was supplied) or false (i.e. date was not supplied)","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"limexpepper"},"content":"\tpublic static boolean hasDate(String userInput) {","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"limexpepper"},"content":"\t\tint start \u003d 0;","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"limexpepper"},"content":"\t\tif (userInput.contains(BY)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"limexpepper"},"content":"\t\t\tstart \u003d userInput.indexOf(BY) + 3;","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"limexpepper"},"content":"\t\t} else if (userInput.contains(ON)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"limexpepper"},"content":"\t\t\tstart \u003d userInput.indexOf(ON) + 3;","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"limexpepper"},"content":"\t\tint end \u003d userInput.indexOf(\"[\");","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"limexpepper"},"content":"\t\tString dateInString \u003d userInput.substring(start, userInput.length());","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"limexpepper"},"content":"\t\tif ((end \u003d\u003d -1) \u0026\u0026 dateInString.isBlank()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"limexpepper"},"content":"\t\t} else if ((end \u003d\u003d -1) \u0026\u0026 dateInString.isBlank() \u003d\u003d false) {","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"limexpepper"},"content":"\t\t\tdateInString \u003d userInput.substring(start + 1, userInput.length());","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"limexpepper"},"content":"\t\t} else if (end !\u003d -1) {","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"limexpepper"},"content":"\t\t\tdateInString \u003d userInput.substring(start, end);","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"limexpepper"},"content":"\t\tString regex \u003d \"^[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{2}$\";","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"limexpepper"},"content":"\t\tPattern regexPattern \u003d Pattern.compile(regex);","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"limexpepper"},"content":"\t\tMatcher matcher \u003d regexPattern.matcher(dateInString);","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"limexpepper"},"content":"\t\treturn matcher.matches();","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"limexpepper"},"content":"\t * Returns true if a one-word user input is either VIEW, EXIT or REMINDERS","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"limexpepper"},"content":"\t * For example, \"VIEW\" returns true.","lastModifiedDate":"2022-10-31"},{"lineNumber":107,"author":{"gitId":"limexpepper"},"content":"\t * For example, \"TODO\" returns false since TODO cannot be empty.","lastModifiedDate":"2022-10-31"},{"lineNumber":108,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":109,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":110,"author":{"gitId":"limexpepper"},"content":"\t * @return true (i.e. the one-word input is valid) or false (i.e. the one-word input is not valid)","lastModifiedDate":"2022-10-31"},{"lineNumber":111,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":112,"author":{"gitId":"limexpepper"},"content":"\tpublic static boolean isValidOneWordCommand(String userInput) {","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"limexpepper"},"content":"\t\tif (userInput.equals(LegalCommandEnumerations.VIEW.toString()) ||","lastModifiedDate":"2022-10-31"},{"lineNumber":114,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tuserInput.equals(LegalCommandEnumerations.EXIT.toString()) ||","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tuserInput.equals(LegalCommandEnumerations.REMINDERS.toString())) {","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn true;","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"limexpepper"},"content":"\t * Returns true if a user input had specified a command that needed additional inputs like date and venue information.","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"limexpepper"},"content":"\t * For example, \"VIEW\" returns false.","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"limexpepper"},"content":"\t * For example, \"TODO\" returns true since TODO cannot be empty.","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"limexpepper"},"content":"\t * @param command The command that the user had specified in the task.","lastModifiedDate":"2022-10-31"},{"lineNumber":128,"author":{"gitId":"limexpepper"},"content":"\t * @return true (i.e. the one-word input is valid) or false (i.e. the one-word input is not valid)","lastModifiedDate":"2022-10-31"},{"lineNumber":129,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":130,"author":{"gitId":"limexpepper"},"content":"\tpublic static boolean isValidCommandThatNeedsInput(String command) {","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.TODO.toString()) ||","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tcommand.equals(LegalCommandEnumerations.DEADLINE.toString()) ||","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tcommand.equals(LegalCommandEnumerations.EVENT.toString()) ||","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tcommand.equals(LegalCommandEnumerations.MARK.toString()) ||","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tcommand.equals(LegalCommandEnumerations.UNMARK.toString()) ||","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tcommand.equals(LegalCommandEnumerations.FILTER.toString())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn true;","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"limexpepper"},"content":"\t * Returns true if a user input has input errors, and false is otherwise.","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":146,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":147,"author":{"gitId":"limexpepper"},"content":"\t * @return true (i.e. input has errors) or false (i.e. input does not have errors)","lastModifiedDate":"2022-10-31"},{"lineNumber":148,"author":{"gitId":"limexpepper"},"content":"\t * @throws MissingKeywordException when a user does not follow the correct syntax when adding deadlines or events.","lastModifiedDate":"2022-10-31"},{"lineNumber":149,"author":{"gitId":"limexpepper"},"content":"\t * @throws EmptyTaskException when a task is empty.","lastModifiedDate":"2022-10-31"},{"lineNumber":150,"author":{"gitId":"limexpepper"},"content":"\t * @throws InvalidCommandException when a user does not enter a command from the command menu i.e. it is invalid.","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"limexpepper"},"content":"\t * @throws MissingDateException when a user does not supply a date for a deadline or event task.","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"limexpepper"},"content":"\tpublic static boolean hasInputErrors(String userInput) throws MissingKeywordException, EmptyTaskException, InvalidCommandException, MissingDateException {","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"limexpepper"},"content":"\t\tString trimmedInput \u003d userInput.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"limexpepper"},"content":"\t\tif (isValidOneWordCommand(trimmedInput)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"limexpepper"},"content":"\t\t} else if (isValidCommandThatNeedsInput(trimmedInput)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new EmptyTaskException();","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"limexpepper"},"content":"\t\tString command \u003d getCommand(trimmedInput);","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"limexpepper"},"content":"\t\tif (isValidCommand(command) \u003d\u003d false) {","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new InvalidCommandException();","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"limexpepper"},"content":"\t\tif (isValidCommand(command) \u003d\u003d false \u0026\u0026 isEmptyTask(userInput) \u003d\u003d true) {","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new InvalidCommandException();","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"limexpepper"},"content":"\t\tif ((isValidCommand(command) \u003d\u003d true) \u0026\u0026 (isEmptyTask(userInput) \u003d\u003d true)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new EmptyTaskException();","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.DEADLINE.toString()) \u0026\u0026 (userInput.contains(BY) \u003d\u003d false)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new MissingKeywordException();","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.EVENT.toString()) \u0026\u0026 (userInput.contains(AT) \u003d\u003d false) \u0026\u0026 (userInput.contains(ON) \u003d\u003d false)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new MissingKeywordException();","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.EVENT.toString()) \u0026\u0026 (userInput.contains(AT) \u003d\u003d false) \u0026\u0026 (userInput.contains(ON) \u003d\u003d true)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new MissingKeywordException();","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.EVENT.toString()) \u0026\u0026 (userInput.contains(AT) \u003d\u003d true) \u0026\u0026 (userInput.contains(ON) \u003d\u003d false)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new MissingKeywordException();","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.DEADLINE.toString()) \u0026\u0026 (userInput.contains(BY) \u003d\u003d true) \u0026\u0026 hasDate(userInput) \u003d\u003d false) {","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new MissingDateException();","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.EVENT.toString()) \u0026\u0026 (userInput.contains(AT) \u003d\u003d true) \u0026\u0026 (userInput.contains(ON) \u003d\u003d true) \u0026\u0026 hasDate(userInput) \u003d\u003d false) {","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"limexpepper"},"content":"\t\t\tthrow new MissingDateException();","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"limexpepper"},"content":"\t\treturn false;","lastModifiedDate":"2022-10-23"},{"lineNumber":199,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":202,"author":{"gitId":"limexpepper"},"content":"\t * Parses each tasks and returns the command specified in the task after parsing.","lastModifiedDate":"2022-10-31"},{"lineNumber":203,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":204,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":205,"author":{"gitId":"limexpepper"},"content":"\t * @return The command specified in the task.","lastModifiedDate":"2022-10-31"},{"lineNumber":206,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":207,"author":{"gitId":"limexpepper"},"content":"\tpublic static String parse(String userInput) {","lastModifiedDate":"2022-10-19"},{"lineNumber":208,"author":{"gitId":"limexpepper"},"content":"\t\tboolean hasError;","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"limexpepper"},"content":"\t\tScanner s;","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"limexpepper"},"content":"\t\ttry {","lastModifiedDate":"2022-10-18"},{"lineNumber":212,"author":{"gitId":"limexpepper"},"content":"\t\t\thasError \u003d hasInputErrors(userInput);","lastModifiedDate":"2022-10-23"},{"lineNumber":213,"author":{"gitId":"limexpepper"},"content":"\t\t} catch (EmptyTaskException ete) {","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(TASK_CANNOT_BE_EMPTY_ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"limexpepper"},"content":"\t\t\thasError \u003d true;","lastModifiedDate":"2022-10-21"},{"lineNumber":216,"author":{"gitId":"limexpepper"},"content":"\t\t} catch (InvalidCommandException ice) {","lastModifiedDate":"2022-10-23"},{"lineNumber":217,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(INVALID_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":218,"author":{"gitId":"limexpepper"},"content":"\t\t\tui.printCommandMenu();","lastModifiedDate":"2022-10-19"},{"lineNumber":219,"author":{"gitId":"limexpepper"},"content":"\t\t\thasError \u003d true;","lastModifiedDate":"2022-10-21"},{"lineNumber":220,"author":{"gitId":"limexpepper"},"content":"\t\t} catch (MissingKeywordException mke) {","lastModifiedDate":"2022-10-23"},{"lineNumber":221,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(MISSING_KEYWORD_ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":222,"author":{"gitId":"limexpepper"},"content":"\t\t\thasError \u003d true;","lastModifiedDate":"2022-10-23"},{"lineNumber":223,"author":{"gitId":"limexpepper"},"content":"\t\t} catch (MissingDateException mde) {","lastModifiedDate":"2022-10-23"},{"lineNumber":224,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(MISSING_DATE_ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":225,"author":{"gitId":"limexpepper"},"content":"\t\t\thasError \u003d true;","lastModifiedDate":"2022-10-23"},{"lineNumber":226,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":227,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":228,"author":{"gitId":"limexpepper"},"content":"\t\tif (hasError) {","lastModifiedDate":"2022-10-21"},{"lineNumber":229,"author":{"gitId":"limexpepper"},"content":"\t\t\tUi ui \u003d new Ui();","lastModifiedDate":"2022-10-21"},{"lineNumber":230,"author":{"gitId":"limexpepper"},"content":"\t\t\ts \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-21"},{"lineNumber":231,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(ASK_FOR_USER_INPUT_AFTER_ERROR_MESSAGE_WAS_DISPLAYED_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":232,"author":{"gitId":"limexpepper"},"content":"\t\t\tString newUserInput \u003d ui.getUserInput(s);","lastModifiedDate":"2022-10-21"},{"lineNumber":233,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn newUserInput;","lastModifiedDate":"2022-10-21"},{"lineNumber":234,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-21"},{"lineNumber":235,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn getCommand(userInput);","lastModifiedDate":"2022-10-18"},{"lineNumber":236,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":237,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"limexpepper":238}},{"path":"src/main/java/nus/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import nus.duke.frontend.Ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import nus.duke.task.*;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"import nus.duke.tasklist.*;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"import nus.duke.parser.*;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"import java.io.File;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"import java.io.IOException;  // Needed to handle IOException thrown by FileWriter","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":" * Represents a storage system.","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":" * Storage deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"public class Storage {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\tprivate static String filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\tprivate static TaskList hardDiskTaskList;","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\tprivate static Parser parser;","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\tprivate static Ui ui;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t * Constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t\tthis.filePath \u003d filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t * Returns the filepath that was stored.","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t * @return The filepath that was stored.","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\tpublic String getFilePath() {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\t\treturn this.filePath;","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t * Returns true if a file (i.e. the hard disk) has been created.","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"\t * @param filePath The filepath where the file will be created.","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t * @return true (i.e. file has been created) or false (i.e. file not created)","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t * @throws IOException when filewriter catches an exception","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\tpublic static boolean createHardDiskFile(String filePath) {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\t\tFile f \u003d new File(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t\ttry {","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\t\t\tf.createNewFile();","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(FILE_WRITER_IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t\treturn true;","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t * Loads data from the hard disk.","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\t * @return an ArrayList of Task objects which will be copied to the task list when a task list is constructed.","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t * @throws IOException when filewriter catches an exception","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"\tpublic ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"limexpepper"},"content":"\t\thardDiskTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"limexpepper"},"content":"\t\ttry {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"limexpepper"},"content":"\t\t\tString filePath \u003d getFilePath();","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"limexpepper"},"content":"\t\t\tjava.nio.file.Path path \u003d java.nio.file.Paths.get(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"limexpepper"},"content":"\t\t\tboolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"limexpepper"},"content":"\t\t\tif (directoryExists) {","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tui.showHardDiskLoadingMessage();","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tFile file \u003d new File(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tScanner s \u003d new Scanner(file);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tString line;","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tString command;","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tfor (int count \u003d 1; s.hasNext(); count++) {","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\tline \u003d s.nextLine();","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\tcommand \u003d parser.parse(line);","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\thardDiskTaskList.processTasks(command, line);","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\thardDiskTaskList.processIsDone(count, line);","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tui.showHardDiskLoadedMessage();","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"limexpepper"},"content":"\t\t\t} else {","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tcreateHardDiskFile(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tui.showHardDiskCreationMessage();","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"limexpepper"},"content":"\t\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"limexpepper"},"content":"\t\t} catch (IOException ioe) {","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(FILE_WRITER_IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"limexpepper"},"content":"\t\treturn hardDiskTaskList.getTaskList();","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"limexpepper"},"content":"\t * Saves task list into a file when a user wants to exit the Duke program.","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"limexpepper"},"content":"\t * @param taskList The most recent task list that stored all tasks.","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"limexpepper"},"content":"\tpublic void saveTasks(TaskList taskList) {","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"limexpepper"},"content":"\t\ttry {","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"limexpepper"},"content":"\t\t\tBufferedWriter writer \u003d new BufferedWriter(new FileWriter(getFilePath()));","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"limexpepper"},"content":"\t\t\tfor (int i \u003d 0; i \u003c taskList.getTotalTasks(); i++) {","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tString markedStatus \u003d taskList.getTaskList().get(i).getIsDone();","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tif (markedStatus.equals(\"true\")) {","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\tmarkedStatus \u003d MARKED_AS_TRUE;","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t} else {","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t\tmarkedStatus \u003d MARKED_AS_FALSE;","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"limexpepper"},"content":"\t\t\t\t}","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tString taskToBeSaved \u003d taskList.getTaskList().get(i).getTask() + markedStatus + \"\\n\";","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"limexpepper"},"content":"\t\t\t\twriter.write(taskToBeSaved);","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"limexpepper"},"content":"\t\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"limexpepper"},"content":"\t\t\twriter.close();","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(TASKS_ARE_SAVED_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"limexpepper"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(FILE_WRITER_IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"limexpepper":122}},{"path":"src/main/java/nus/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.task;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"import nus.duke.enumerations.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":" * Represents a deadline task","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"\tprotected LocalDate localDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\t * Constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\tpublic Deadline(String userInput) {","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\t\tsuper(userInput);","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\t\tString description \u003d this.getDescription(userInput);","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t\tsuper.setDescription(description);","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\t\tthis.localDate \u003d processDate(userInput);","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task type","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t * \"T\" for TODO.","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\t * \"D\" for DEADLINE.","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t * \"E\" for EVENT.","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"\t * @return the task type in string.","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\tpublic String getTaskType() {","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t\treturn LegalTaskEnumerations.D.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t * Returns the deadline\u0027s due date in a meaningful format.","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t * @return the deadline\u0027s due date.","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"\tpublic String getTaskDetails() {","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t\tString date \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t\tdate \u003d \"(by: \" + date + \")\";","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t\treturn date;","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task description.","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t * @return the task description.","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\tpublic String getDescription(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\t\tint end \u003d userInput.indexOf(BY);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\t\treturn userInput.substring(0, end);","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t * Returns the deadline\u0027s due date in string.","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"\t * @return the deadline\u0027s due date in string.","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"limexpepper"},"content":"\tpublic String getDateInStr(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"limexpepper"},"content":"\t\tint start \u003d userInput.indexOf(BY) + 4;","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"limexpepper"},"content":"\t\tif (userInput.indexOf(MARKED_AS_TRUE) \u003d\u003d -1 || userInput.indexOf(MARKED_AS_FALSE) \u003d\u003d -1) {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn userInput.substring(start, userInput.length()).trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn userInput.substring(start, userInput.length() - 3).trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"limexpepper"},"content":"\t * Returns the date of the calling object.","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"limexpepper"},"content":"\t * @return A date in LocalDate type.","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"limexpepper"},"content":"\tpublic LocalDate getDate() {","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"limexpepper"},"content":"\t\treturn this.localDate;","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"limexpepper":89}},{"path":"src/main/java/nus/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.task;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import nus.duke.enumerations.LegalTaskEnumerations;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":" * Represents a event task","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"\tprotected String at; // /at a specific place","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"\tprotected LocalDate localDate; // /on a specific date","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\t * Constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\tpublic Event(String userInput) {","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\t\tsuper(userInput);","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t\tString description \u003d this.getDescription(userInput);","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\t\tsuper.setDescription(description);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t\tthis.at \u003d getVenue(userInput);","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t\tthis.localDate \u003d this.processDate(userInput);","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\t * Returns the venue of the event.","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"\t * @return the venue of the event.","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\tpublic String getVenue(String userInput) {","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t\tint start \u003d userInput.indexOf(AT) + 4;","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t\tint end \u003d userInput.indexOf(ON);","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t\treturn userInput.substring(start, end).trim();","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task type","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t * \"T\" for TODO.","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t * \"D\" for DEADLINE.","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t * \"E\" for EVENT.","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t * @return the task type in string.","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\tpublic String getTaskType() {","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\t\treturn LegalTaskEnumerations.E.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t * Returns the event\u0027s date and venue in a meaningful format.","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t * @return the event\u0027s date and venue.","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\tpublic String getTaskDetails() {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t\tString venue \u003d \"(Venue: \" + this.at + \")\";","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"\t\tString date \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\t\tdate \u003d \"(Time: \" + date + \")\";","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t\treturn venue + date;","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"limexpepper"},"content":"\t * Returns the event description.","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"limexpepper"},"content":"\t * @return the event description.","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"limexpepper"},"content":"\tpublic String getDescription(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"limexpepper"},"content":"\t\tint end \u003d userInput.indexOf(AT);","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"limexpepper"},"content":"\t\treturn userInput.substring(0, end);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"limexpepper"},"content":"\t * Returns the event\u0027s date in string.","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"limexpepper"},"content":"\t * @return the event\u0027s date in string.","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"limexpepper"},"content":"\tpublic String getDateInStr(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"limexpepper"},"content":"\t\tint start \u003d userInput.indexOf(ON) + 4;","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"limexpepper"},"content":"\t\tif (userInput.indexOf(MARKED_AS_TRUE) \u003d\u003d -1 || userInput.indexOf(MARKED_AS_FALSE) \u003d\u003d -1) {","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn userInput.substring(start, userInput.length()).trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn userInput.substring(start, userInput.length() - 3).trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"limexpepper"},"content":"\t * Returns the date of the calling object.","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"limexpepper"},"content":"\t * @return A date in LocalDate type.","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"limexpepper"},"content":"\tpublic LocalDate getDate() {","lastModifiedDate":"2022-11-07"},{"lineNumber":102,"author":{"gitId":"limexpepper"},"content":"\t\treturn this.localDate;","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-11-07"},{"lineNumber":104,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"limexpepper":104}},{"path":"src/main/java/nus/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.task;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":" * Represents a task in general.","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"\tprotected String description;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"\tprotected boolean isDone;","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\t * Constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"\t * @param description The description of the task.","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\tpublic Task(String description) {","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\t\tthis.description \u003d description;","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task\u0027s description.","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"\t * @return The task\u0027s description.","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\tpublic String getTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t\treturn this.description;","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t * Marks a task object as done.","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\tpublic void markAsDone() {","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\t\tif (this.isDone \u003d\u003d false) {","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t\t\tthis.isDone \u003d true;","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(TASK_ALREADY_MARKED_DONE_MESSAGE);","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t * Marks a task object as NOT done.","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\tpublic void markAsNotDone() {","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task\u0027s status icon","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t * \"X\" when the status is marked done","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\t * \" \" when the status is marked not done.","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t * @return Status icon.","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\tpublic String getStatusIcon() {","lastModifiedDate":"2022-09-05"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t\treturn (isDone ? \"X\" : SPACE); // mark done task with X","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task\u0027s status.","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"limexpepper"},"content":"\t * \"true\" if task was marked done.","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"limexpepper"},"content":"\t * \"false\" if task was not marked done.","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"limexpepper"},"content":"\t * @return Status of whether the task has been completed.","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"limexpepper"},"content":"\tpublic String getIsDone() {","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"limexpepper"},"content":"\t\tString isDoneStr \u003d Boolean.toString(this.isDone);","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"limexpepper"},"content":"\t\treturn isDoneStr;","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"limexpepper"},"content":"\t * Edits the task description.","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"limexpepper"},"content":"\t * @param description The new description of the task.","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":86,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"limexpepper"},"content":"\tpublic void setDescription(String description) {","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"limexpepper"},"content":"\t\tthis.description \u003d description;","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"limexpepper"},"content":"\t * Parses for the date and reformats the date into LocalDate type.","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"limexpepper"},"content":"\t * @return A date in LocalDate type.","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"limexpepper"},"content":"\tpublic LocalDate processDate(String userInput) {","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"limexpepper"},"content":"\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"limexpepper"},"content":"\t\tString date \u003d getDateInStr(userInput);","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"limexpepper"},"content":"\t\tLocalDate localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"limexpepper"},"content":"\t\treturn localDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"limexpepper"},"content":"\tpublic abstract String getDateInStr(String userInput);","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"limexpepper"},"content":"\tpublic abstract LocalDate getDate();","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"limexpepper"},"content":"\tpublic abstract String getTaskType();","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":110,"author":{"gitId":"limexpepper"},"content":"\tpublic abstract String getTaskDetails();","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":112,"author":{"gitId":"limexpepper"},"content":"\tpublic abstract String getDescription(String userInput);","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"limexpepper":113}},{"path":"src/main/java/nus/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.task;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import nus.duke.enumerations.LegalTaskEnumerations;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"import static java.time.temporal.TemporalAdjusters.lastDayOfYear;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":" * Represents a todo task","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"\tprotected LocalDate localDate;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\t * Constructor.","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a constructor.","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\t * Take note that the assumption for all TODOs is that the last date to complete the task is the last day of the year.","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\tpublic Todo(String userInput) {","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t\tsuper(userInput);","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\t\tLocalDate now \u003d LocalDate.now(); // e.g 2022-11-23","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t\tLocalDate lastDay \u003d now.with(lastDayOfYear()); // 2022-12-31","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t\tthis.localDate \u003d lastDay;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task type","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t * \"T\" for TODO.","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t * \"D\" for DEADLINE.","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"\t * \"E\" for EVENT.","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t * @return the task type in string.","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\tpublic String getTaskType() {","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\t\treturn LegalTaskEnumerations.T.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\tpublic String getTaskDetails() {","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t\treturn EMPTY_STRING;","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\tpublic String getDescription(String userInput) {","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t\treturn EMPTY_STRING;","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\tpublic String getDateInStr(String userInput) {","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t\treturn EMPTY_STRING;","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t * Returns the date of the calling object.","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\t * @return A date in LocalDate type.","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"\t@Override","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\tpublic LocalDate getDate() {","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t\treturn this.localDate;","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"limexpepper":68}},{"path":"src/main/java/nus/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.tasklist;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import nus.duke.enumerations.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import nus.duke.task.*;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.frontend.CommonPrintStatements.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"/**","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":" * Represents a task list.","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":" * This class has operations to add/delete/mark/unmark etc. tasks in the list.","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":" */","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"public class TaskList {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\tprotected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\tprivate static int totalTasks \u003d 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t * Constructor.","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\t * @param loadedTaskList the task list that was saved in the hard disk.","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing.","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\tpublic TaskList(ArrayList\u003cTask\u003e loadedTaskList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t\tCollections.copy(loadedTaskList, this.taskList);","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t * Constructor that does not take in any inputs.","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing.","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"\tpublic TaskList() {","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task list of the calling object.","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\t * @return an ArrayList of Task objects i.e. ArrayList\u003cTask\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\tpublic ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t\treturn this.taskList;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"\t * Increments the total number of tasks each time a task is added to the task list.","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\tpublic void incrementTotalTasks() {","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\t\tthis.totalTasks \u003d this.totalTasks + 1;","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t * Decrements the total number of tasks each time a task is deleted from the task list.","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"limexpepper"},"content":"\tpublic void decrementTotalTasks() {","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"limexpepper"},"content":"\t\tthis.totalTasks \u003d this.totalTasks - 1;","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"limexpepper"},"content":"\t * Returns the total number of tasks in the task list.","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"limexpepper"},"content":"\t * @return Total number of tasks.","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"limexpepper"},"content":"\tpublic int getTotalTasks() {","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"limexpepper"},"content":"\t\treturn this.totalTasks;","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"limexpepper"},"content":"\t * Returns the task number.","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"limexpepper"},"content":"\t * For example, if the command is \"MARK 2\", the function returns \"2\".","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"limexpepper"},"content":"\t * @return Task number specified by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"limexpepper"},"content":"\tpublic static int getItemNumber(String userInput) {","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"limexpepper"},"content":"\t\tint idx \u003d userInput.indexOf(SPACE);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"limexpepper"},"content":"\t\tString itemNumber \u003d userInput.substring(idx + 1, userInput.length());","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"limexpepper"},"content":"\t\tidx \u003d Integer.parseInt(itemNumber);","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"limexpepper"},"content":"\t\treturn idx;","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"limexpepper"},"content":"\t * Prints the task type, task icon, task description and task details such as date/venue.","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"limexpepper"},"content":"\t * @param task A Task object.","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"limexpepper"},"content":"\tpublic static void printTask(Task task) {","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"[\" + task.getTaskType() + \"][\" + task.getStatusIcon() + \"] \" + task.getTask() + task.getTaskDetails());","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"limexpepper"},"content":"\t * Prints all the tasks in the task list.","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"limexpepper"},"content":"\tpublic static void viewTaskList() {","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"limexpepper"},"content":"\t\tfor (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"limexpepper"},"content":"\t\t\tprintTask(taskList.get(i));","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":110,"author":{"gitId":"limexpepper"},"content":"\t * Adds a task to the task list.","lastModifiedDate":"2022-10-31"},{"lineNumber":111,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":112,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":114,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"limexpepper"},"content":"\tpublic void addTask(String userInput) {","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"limexpepper"},"content":"\t\tTask t;","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"limexpepper"},"content":"\t\tif (userInput.contains(BY)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"limexpepper"},"content":"\t\t\tt \u003d new Deadline(userInput);","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"limexpepper"},"content":"\t\t} else if (userInput.contains(AT)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"limexpepper"},"content":"\t\t\tt \u003d new Event(userInput);","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"limexpepper"},"content":"\t\t} else {","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"limexpepper"},"content":"\t\t\tt \u003d new Todo(userInput);","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"limexpepper"},"content":"\t\ttaskList.add(t);","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"limexpepper"},"content":"\t\tincrementTotalTasks();","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(\"Added: \" + userInput + \". \");","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":130,"author":{"gitId":"limexpepper"},"content":"\t * Removes a task from the task list.","lastModifiedDate":"2022-10-31"},{"lineNumber":131,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"limexpepper"},"content":"\t * @param idx The task number specified by the user. For example, in \"DELETE 1\" (which means delete task 1), idx \u003d 1.","lastModifiedDate":"2022-10-31"},{"lineNumber":133,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":135,"author":{"gitId":"limexpepper"},"content":"\tpublic void deleteTask(int idx) {","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"limexpepper"},"content":"\t\ttaskList.remove(idx - 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"limexpepper"},"content":"\t\tdecrementTotalTasks();","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(REMOVED);","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"limexpepper"},"content":"\t * Marks specified task as done.","lastModifiedDate":"2022-10-31"},{"lineNumber":143,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"limexpepper"},"content":"\t * @param idx The task number specified by the user. For example, in \"MARK 1\" (which means mark task 1), idx \u003d 1.","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":146,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":147,"author":{"gitId":"limexpepper"},"content":"\tpublic static void markTask(int idx) {","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"limexpepper"},"content":"\t\t(taskList.get(idx - 1)).markAsDone();","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(MARKED);","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"limexpepper"},"content":"\t * Unmarks a specified task i.e. task is not done.","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":155,"author":{"gitId":"limexpepper"},"content":"\t * @param idx The task number specified by the user. For example, in \"UNMARK 1\" (which means unmark task 1), idx \u003d 1.","lastModifiedDate":"2022-10-31"},{"lineNumber":156,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":157,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"limexpepper"},"content":"\tpublic static void unmarkTask(int idx) {","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"limexpepper"},"content":"\t\t(taskList.get(idx - 1)).markAsNotDone();","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"limexpepper"},"content":"\t\tSystem.out.println(UNMARKED);","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":164,"author":{"gitId":"limexpepper"},"content":"\t * Sorts and returns all deadline and event tasks stored in the task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":165,"author":{"gitId":"limexpepper"},"content":"\t * Since there is no need for dates for Todos, Duke only reminds a user of his deadlines and events","lastModifiedDate":"2022-11-07"},{"lineNumber":166,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":167,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":169,"author":{"gitId":"limexpepper"},"content":"\tpublic void getReminders() {","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"limexpepper"},"content":"\t\tArrayList\u003cTask\u003e reminders \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-11-07"},{"lineNumber":171,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":172,"author":{"gitId":"limexpepper"},"content":"\t\tfor (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"limexpepper"},"content":"\t\t\tString taskType \u003d taskList.get(i).getTaskType();","lastModifiedDate":"2022-11-07"},{"lineNumber":174,"author":{"gitId":"limexpepper"},"content":"\t\t\tif (taskType.equals(LegalTaskEnumerations.D.toString()) || taskType.equals(LegalTaskEnumerations.E.toString())) {","lastModifiedDate":"2022-11-07"},{"lineNumber":175,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tTask task \u003d taskList.get(i);","lastModifiedDate":"2022-11-07"},{"lineNumber":176,"author":{"gitId":"limexpepper"},"content":"\t\t\t\treminders.add(task);","lastModifiedDate":"2022-11-07"},{"lineNumber":177,"author":{"gitId":"limexpepper"},"content":"\t\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"limexpepper"},"content":"\t\tCollections.sort(reminders, (t1, t2) -\u003e t1.getDate().compareTo(t2.getDate()));","lastModifiedDate":"2022-11-07"},{"lineNumber":181,"author":{"gitId":"limexpepper"},"content":"\t\tfor (int i \u003d 0; i \u003c reminders.size(); i++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"limexpepper"},"content":"\t\t\tTask task \u003d reminders.get(i);","lastModifiedDate":"2022-11-07"},{"lineNumber":183,"author":{"gitId":"limexpepper"},"content":"\t\t\tif (task.getIsDone().equals(\"false\")) {","lastModifiedDate":"2022-11-07"},{"lineNumber":184,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tprintTask(task);","lastModifiedDate":"2022-11-07"},{"lineNumber":185,"author":{"gitId":"limexpepper"},"content":"\t\t\t}","lastModifiedDate":"2022-11-07"},{"lineNumber":186,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":187,"author":{"gitId":"limexpepper"},"content":"\t\tfor (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-11-07"},{"lineNumber":188,"author":{"gitId":"limexpepper"},"content":"\t\t\tString taskType \u003d taskList.get(i).getTaskType();","lastModifiedDate":"2022-11-07"},{"lineNumber":189,"author":{"gitId":"limexpepper"},"content":"\t\t\tif (taskType.equals(LegalTaskEnumerations.T.toString()) \u0026\u0026 taskList.get(i).getIsDone().equals(\"false\")){","lastModifiedDate":"2022-11-07"},{"lineNumber":190,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tprintTask(taskList.get(i));","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"limexpepper"},"content":"\t\t\t}","lastModifiedDate":"2022-11-07"},{"lineNumber":192,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":194,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":195,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":196,"author":{"gitId":"limexpepper"},"content":"\t * Filters for and displays tasks with a specified keyword.","lastModifiedDate":"2022-10-31"},{"lineNumber":197,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":198,"author":{"gitId":"limexpepper"},"content":"\t * @param keyword The keyword specified by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":199,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":200,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":201,"author":{"gitId":"limexpepper"},"content":"\tpublic void filter(String keyword) {","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"limexpepper"},"content":"\t\tint count \u003d 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"limexpepper"},"content":"\t\tfor (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"limexpepper"},"content":"\t\t\tString str \u003d taskList.get(i).getTask();","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"limexpepper"},"content":"\t\t\tif (str.contains(keyword)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tprintTask(taskList.get(i));","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"limexpepper"},"content":"\t\t\t\tcount \u003d count + 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"limexpepper"},"content":"\t\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"limexpepper"},"content":"\t\tif (count \u003d\u003d 0) {","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(\"No task with the keyword \" + keyword + \" exists\");","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":216,"author":{"gitId":"limexpepper"},"content":"\t * Processes a task based on its command.","lastModifiedDate":"2022-10-31"},{"lineNumber":217,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":218,"author":{"gitId":"limexpepper"},"content":"\t * @param command The command specified by the user. For example, in \"TODO assignment\", command \u003d TODO.","lastModifiedDate":"2022-10-31"},{"lineNumber":219,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task keyed in by the user.","lastModifiedDate":"2022-10-31"},{"lineNumber":220,"author":{"gitId":"limexpepper"},"content":"\t * @return true (i.e. terminate the Duke program) or false (i.e. do not terminate the Duke program)","lastModifiedDate":"2022-10-31"},{"lineNumber":221,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":222,"author":{"gitId":"limexpepper"},"content":"\tpublic boolean processTasks(String command, String userInput) {","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"limexpepper"},"content":"\t\tint end \u003d userInput.indexOf(\"[\");","lastModifiedDate":"2022-10-21"},{"lineNumber":224,"author":{"gitId":"limexpepper"},"content":"\t\tString parsedString \u003d userInput;","lastModifiedDate":"2022-10-21"},{"lineNumber":225,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":226,"author":{"gitId":"limexpepper"},"content":"\t\tif (end !\u003d -1) {","lastModifiedDate":"2022-10-21"},{"lineNumber":227,"author":{"gitId":"limexpepper"},"content":"\t\t\tparsedString \u003d userInput.substring(0, end);","lastModifiedDate":"2022-10-21"},{"lineNumber":228,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-21"},{"lineNumber":229,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":230,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(EXIT)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn true;","lastModifiedDate":"2022-10-19"},{"lineNumber":232,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-19"},{"lineNumber":233,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":234,"author":{"gitId":"limexpepper"},"content":"\t\tif ((command.equals(LegalCommandEnumerations.VIEW.toString())) \u0026\u0026 ((this.getTotalTasks()) \u003d\u003d 0)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":235,"author":{"gitId":"limexpepper"},"content":"\t\t\tSystem.out.println(TASKLIST_IS_EMPTY_MESSAGE);","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-19"},{"lineNumber":237,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-19"},{"lineNumber":238,"author":{"gitId":"limexpepper"},"content":"\t\tif ((command.equals(LegalCommandEnumerations.VIEW.toString())) \u0026\u0026 ((this.getTotalTasks()) \u003e 0)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":239,"author":{"gitId":"limexpepper"},"content":"\t\t\tthis.viewTaskList();","lastModifiedDate":"2022-10-25"},{"lineNumber":240,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-19"},{"lineNumber":241,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":242,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":243,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.REMINDERS.toString())) {","lastModifiedDate":"2022-11-07"},{"lineNumber":244,"author":{"gitId":"limexpepper"},"content":"\t\t\tthis.getReminders();","lastModifiedDate":"2022-11-07"},{"lineNumber":245,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-11-07"},{"lineNumber":246,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-11-07"},{"lineNumber":247,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":248,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.MARK.toString())) {","lastModifiedDate":"2022-10-18"},{"lineNumber":249,"author":{"gitId":"limexpepper"},"content":"\t\t\tthis.markTask(getItemNumber(userInput));","lastModifiedDate":"2022-10-19"},{"lineNumber":250,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-19"},{"lineNumber":251,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-19"},{"lineNumber":252,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":253,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.UNMARK.toString())) {","lastModifiedDate":"2022-10-19"},{"lineNumber":254,"author":{"gitId":"limexpepper"},"content":"\t\t\tthis.unmarkTask(getItemNumber(userInput));","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-19"},{"lineNumber":256,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":257,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":258,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.DELETE.toString())) {","lastModifiedDate":"2022-10-19"},{"lineNumber":259,"author":{"gitId":"limexpepper"},"content":"\t\t\tthis.deleteTask(getItemNumber(userInput));","lastModifiedDate":"2022-10-19"},{"lineNumber":260,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-19"},{"lineNumber":261,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":262,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":263,"author":{"gitId":"limexpepper"},"content":"\t\tif (command.equals(LegalCommandEnumerations.FILTER.toString())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":264,"author":{"gitId":"limexpepper"},"content":"\t\t\tint start \u003d userInput.indexOf(SPACE) + 1;","lastModifiedDate":"2022-10-26"},{"lineNumber":265,"author":{"gitId":"limexpepper"},"content":"\t\t\tString keyword \u003d userInput.substring(start, userInput.length());","lastModifiedDate":"2022-10-25"},{"lineNumber":266,"author":{"gitId":"limexpepper"},"content":"\t\t\tthis.filter(keyword);","lastModifiedDate":"2022-10-25"},{"lineNumber":267,"author":{"gitId":"limexpepper"},"content":"\t\t\treturn false;","lastModifiedDate":"2022-10-25"},{"lineNumber":268,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-25"},{"lineNumber":269,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":270,"author":{"gitId":"limexpepper"},"content":"\t\tthis.addTask(parsedString);","lastModifiedDate":"2022-10-21"},{"lineNumber":271,"author":{"gitId":"limexpepper"},"content":"\t\treturn false;","lastModifiedDate":"2022-10-19"},{"lineNumber":272,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":273,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":274,"author":{"gitId":"limexpepper"},"content":"\t/**","lastModifiedDate":"2022-10-31"},{"lineNumber":275,"author":{"gitId":"limexpepper"},"content":"\t * Marks a task as done when loading data from hard disk.","lastModifiedDate":"2022-10-31"},{"lineNumber":276,"author":{"gitId":"limexpepper"},"content":"\t * This function is used to process tasks when loading data from hard disk.","lastModifiedDate":"2022-10-31"},{"lineNumber":277,"author":{"gitId":"limexpepper"},"content":"\t *","lastModifiedDate":"2022-10-31"},{"lineNumber":278,"author":{"gitId":"limexpepper"},"content":"\t * @param idx The task number.","lastModifiedDate":"2022-10-31"},{"lineNumber":279,"author":{"gitId":"limexpepper"},"content":"\t * @param userInput The task that was saved in the hard disk. The original user input was saved.","lastModifiedDate":"2022-10-31"},{"lineNumber":280,"author":{"gitId":"limexpepper"},"content":"\t * @return nothing. This is a void function.","lastModifiedDate":"2022-10-31"},{"lineNumber":281,"author":{"gitId":"limexpepper"},"content":"\t */","lastModifiedDate":"2022-10-31"},{"lineNumber":282,"author":{"gitId":"limexpepper"},"content":"\tpublic void processIsDone(int idx, String userInput) {","lastModifiedDate":"2022-10-21"},{"lineNumber":283,"author":{"gitId":"limexpepper"},"content":"\t\tint start \u003d userInput.indexOf(\"[\") + 1;","lastModifiedDate":"2022-10-21"},{"lineNumber":284,"author":{"gitId":"limexpepper"},"content":"\t\tString isDone \u003d userInput.substring(start, userInput.length() - 1);","lastModifiedDate":"2022-10-21"},{"lineNumber":285,"author":{"gitId":"limexpepper"},"content":"\t\tif (isDone.equals(TRUE)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":286,"author":{"gitId":"limexpepper"},"content":"\t\t\tthis.markTask(idx);","lastModifiedDate":"2022-10-21"},{"lineNumber":287,"author":{"gitId":"limexpepper"},"content":"\t\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":288,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-18"},{"lineNumber":289,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"limexpepper":289}},{"path":"src/test/java/nus/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import nus.duke.exceptions.*;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.parser.Parser.*;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"class ParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"\t@Test","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"\tvoid parserCorrectlyThrowsEmptyTaskException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"TODO\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"TODO \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"TODO     \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"DEADLINE\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"DEADLINE \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"DEADLINE     \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"EVENT\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"EVENT \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"EVENT     \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"MARK\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"MARK \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"MARK     \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"UNMARK\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"UNMARK \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(EmptyTaskException.class, () -\u003e hasInputErrors(\"UNMARK     \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"\t@Test","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\tvoid parserCorrectlyThrowsMissingKeywordException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingKeywordException.class, () -\u003e hasInputErrors(\"DEADLINE ethics essay\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingKeywordException.class, () -\u003e hasInputErrors(\"EVENT school bake sale\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingKeywordException.class, () -\u003e hasInputErrors(\"EVENT school bake sale /on 23-08-2020\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"limexpepper"},"content":"\t@Test","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"limexpepper"},"content":"\tvoid parserCorrectlyThrowsMissingDateException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingDateException.class, () -\u003e hasInputErrors(\"DEADLINE ethics essay /by\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingDateException.class, () -\u003e hasInputErrors(\"DEADLINE ethics essay /by \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingDateException.class, () -\u003e hasInputErrors(\"DEADLINE ethics essay /by tomorrow\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingDateException.class, () -\u003e hasInputErrors(\"DEADLINE ethics essay /by 01-01-2022\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingDateException.class, () -\u003e hasInputErrors(\"DEADLINE ethics essay /by 01012022\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingKeywordException.class, () -\u003e hasInputErrors(\"DEADLINE ethics essay /by\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingKeywordException.class, () -\u003e hasInputErrors(\"EVENT school bake sale /at raffles jc /on \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(MissingKeywordException.class, () -\u003e hasInputErrors(\"EVENT school bake sale /at raffles jc /on 1234\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"limexpepper"},"content":"\t@Test","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"limexpepper"},"content":"\tvoid parserChecksThatCommandIsValid() {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(InvalidCommandException.class, () -\u003e hasInputErrors(\"hi\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(InvalidCommandException.class, () -\u003e hasInputErrors(\"hi \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(InvalidCommandException.class, () -\u003e hasInputErrors(\"randomW0rd\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(InvalidCommandException.class, () -\u003e hasInputErrors(\"197298372\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(InvalidCommandException.class, () -\u003e hasInputErrors(\"19282 \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"limexpepper"},"content":"\t\tassertThrows(InvalidCommandException.class, () -\u003e hasInputErrors(\" \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"limexpepper":58}},{"path":"src/test/java/nus/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.storage;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import nus.duke.tasklist.TaskList;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"class StorageTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"\tString filePath \u003d \"/Users/rebecca/Desktop/Duke/data/DukeTasks.txt\";","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"\tStorage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"\t@Test","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"\tvoid hardDiskDataIsLoaded() throws IOException {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"\t\tTaskList tl \u003d new TaskList();","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(tl.getTaskList(), storage.load());","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"limexpepper":19}},{"path":"src/test/java/nus/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"package nus.duke.tasklist;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"import nus.duke.enumerations.LegalCommandEnumerations;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"limexpepper"},"content":"import nus.duke.enumerations.LegalTaskEnumerations;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"limexpepper"},"content":"import nus.duke.storage.Storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"limexpepper"},"content":"import nus.duke.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"limexpepper"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"limexpepper"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"limexpepper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"limexpepper"},"content":"import static nus.duke.enumerations.LegalCommandEnumerations.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"limexpepper"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"limexpepper"},"content":"class TaskListTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"\tprivate TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"\t@Test","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"limexpepper"},"content":"\tvoid taskProcessorReturnsCorrectContinuationValue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"VIEW\", \"VIEW\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"REMINDERS\", \"REMINDERS\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"TODO\", \"TODO send dogs to the groomers\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"DEADLINE\", \"DEADLINE return Harry Potter book /by 20/10/2022\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"EVENT\", \"EVENT dog park gathering /at Central Park /on 23/12/2022\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"MARK\", \"MARK 1\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"UNMARK\", \"UNMARK 1\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"DELETE\", \"DELETE 1\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(false, taskList.processTasks(\"FILTER\", \"FILTER dog\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"limexpepper"},"content":"\t@Test","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"limexpepper"},"content":"\tvoid taskProcessorReturnsCorrectTerminationValue() {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"limexpepper"},"content":"\t\tassertEquals(true, taskList.processTasks(\"EXIT\", \"EXIT\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"limexpepper"},"content":"\t}","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"limexpepper"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"limexpepper"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"limexpepper":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limexpepper"},"content":"cat","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"limexpepper"},"content":"dog","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"limexpepper"},"content":"house","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"limexpepper":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"limexpepper"},"content":"java -classpath ..\\bin nus.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limexpepper":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"limexpepper"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/nus/duke/*.java","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"limexpepper"},"content":"java -classpath ../bin nus.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limexpepper":2,"-":36}}]
